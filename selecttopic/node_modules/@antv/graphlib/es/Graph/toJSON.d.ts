import Graph, { GraphOption } from '.';
declare type JSONNode<NodeIDType = string, NodeType = any> = {
    id: NodeIDType;
    value?: NodeType;
    parent?: NodeIDType;
};
declare type JSONEdge<NodeIDType = string, EdgeType = Record<string, any>> = {
    v: NodeIDType;
    w: NodeIDType;
    value?: EdgeType;
    name?: string;
};
declare type JSONGraph<NodeIDType, NodeType, EdgeType, GraphType> = {
    options: GraphOption;
    nodes: JSONNode<NodeIDType, NodeType>[];
    edges: JSONEdge<NodeIDType, EdgeType>[];
    value?: GraphType;
};
export declare const write: <NodeIDType = string, NodeType = Record<string, any>, EdgeType = Record<string, any>, GraphType = string>(graph: Graph<NodeIDType, NodeType, EdgeType, GraphType>) => JSONGraph<NodeIDType, NodeType, EdgeType, GraphType>;
export declare const read: <NodeIDType = string, NodeType = Record<string, any>, EdgeType = Record<string, any>, GraphType = string>(json: JSONGraph<NodeIDType, NodeType, EdgeType, GraphType>) => Graph<NodeIDType, NodeType, EdgeType, GraphType>;
export {};
