{"version":3,"sources":["../src/simpleMapCoord.ts"],"names":["SimpleMapCoord","size","lng","lat","Math","PI","log","tan","x","y","y2","atan","exp","lnglat","mercatorXfromLng","mercatorYfromLat","xy","lngFromMercatorX","latFromMercatorY"],"mappings":";;;AAMA,WAAaA,cAAb;AAEE,0BAAYC,IAAZ,EAA2B;AAAA;;AAAA,kCADJ,KACI;;AACzB,SAAKA,IAAL,GAAYA,IAAI,GAAGA,IAAH,GAAU,KAA1B;AACD;;AAJH;AAAA;AAAA,WAME,iBAAeA,IAAf,EAA6B;AAC3B,WAAKA,IAAL,GAAYA,IAAZ;AACD;AARH;AAAA;AAAA,WAUE,mBAAmC;AACjC,aAAO,CAAC,KAAKA,IAAN,EAAY,KAAKA,IAAjB,CAAP;AACD;AAZH;AAAA;AAAA,WA6BE,0BAAwBC,GAAxB,EAA6C;AAE3C,aAAQ,CAAC,MAAMA,GAAP,IAAc,GAAf,GAAsB,KAAKD,IAAlC;AACD;AAhCH;AAAA;AAAA,WAkCE,0BAAwBE,GAAxB,EAA6C;AAE3C,aACE,CAAC,IACC,CAAC,MACE,MAAMC,IAAI,CAACC,EAAZ,GACED,IAAI,CAACE,GAAL,CAASF,IAAI,CAACG,GAAL,CAASH,IAAI,CAACC,EAAL,GAAU,CAAV,GAAeF,GAAG,GAAGC,IAAI,CAACC,EAAZ,GAAkB,GAAzC,CAAT,CAFJ,IAGE,GAJJ,IAKA,KAAKJ,IANP;AAQD;AA5CH;AAAA;AAAA,WA8CE,0BAAwBO,CAAxB,EAA2C;AACzC,aAAQA,CAAC,GAAG,KAAKP,IAAV,GAAkB,GAAlB,GAAwB,GAA/B;AACD;AAhDH;AAAA;AAAA,WAkDE,0BAAwBQ,CAAxB,EAA2C;AACzC,UAAMC,EAAE,GAAG,MAAM,CAAC,IAAID,CAAC,GAAG,KAAKR,IAAd,IAAsB,GAAvC;AACA,aAAQ,MAAMG,IAAI,CAACC,EAAZ,GAAkBD,IAAI,CAACO,IAAL,CAAUP,IAAI,CAACQ,GAAL,CAAUF,EAAE,GAAGN,IAAI,CAACC,EAAX,GAAiB,GAA1B,CAAV,CAAlB,GAA8D,EAArE;AACD;AArDH;AAAA;AAAA,WAuDE,iBAAeQ,MAAf,EAA2D;AACzD,UAAML,CAAC,GAAG,KAAKM,gBAAL,CAAsBD,MAAM,CAAC,CAAD,CAA5B,CAAV;AACA,UAAMJ,CAAC,GAAG,KAAKM,gBAAL,CAAsBF,MAAM,CAAC,CAAD,CAA5B,CAAV;AACA,aAAO,CAACL,CAAD,EAAIC,CAAJ,CAAP;AACD;AA3DH;AAAA;AAAA,WA6DE,mBAAiBO,EAAjB,EAAyD;AACvD,UAAMd,GAAG,GAAG,KAAKe,gBAAL,CAAsBD,EAAE,CAAC,CAAD,CAAxB,CAAZ;AACA,UAAMb,GAAG,GAAG,KAAKe,gBAAL,CAAsBF,EAAE,CAAC,CAAD,CAAxB,CAAZ;AACA,aAAO,CAACd,GAAD,EAAMC,GAAN,CAAP;AACD;AAjEH;;AAAA;AAAA","sourcesContent":["export interface ISimpleMapCoord {\n  setSize(size: number): void;\n  getSize(): [number, number];\n  project(lnglat: [number, number]): [number, number];\n  unproject(xy: [number, number]): [number, number];\n}\nexport class SimpleMapCoord implements ISimpleMapCoord {\n  private size: number = 10000;\n  constructor(size?: number) {\n    this.size = size ? size : 10000;\n  }\n\n  public setSize(size: number) {\n    this.size = size;\n  }\n\n  public getSize(): [number, number] {\n    return [this.size, this.size];\n  }\n\n  /**\n   * coord\n   * ^ y (y > 0)\n   * |\n   * |\n   * |\n   * |(x = 0, y = 0)\n   * ---------------> x (x > 0)\n   */\n\n  /***\n   * lng: [-180, 180] 360\n   * lat: [-85.05112877980659, 85.05112877980659] 170.10225755961318\n   */\n\n  public mercatorXfromLng(lng: number): number {\n    // (0 - 1) * this.size\n    return ((180 + lng) / 360) * this.size;\n  }\n\n  public mercatorYfromLat(lat: number): number {\n    // (0 - 1) * this.size\n    return (\n      (1 -\n        (180 -\n          (180 / Math.PI) *\n            Math.log(Math.tan(Math.PI / 4 + (lat * Math.PI) / 360))) /\n          360) *\n      this.size\n    );\n  }\n\n  public lngFromMercatorX(x: number): number {\n    return (x / this.size) * 360 - 180;\n  }\n\n  public latFromMercatorY(y: number): number {\n    const y2 = 180 - (1 - y / this.size) * 360;\n    return (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90;\n  }\n\n  public project(lnglat: [number, number]): [number, number] {\n    const x = this.mercatorXfromLng(lnglat[0]);\n    const y = this.mercatorYfromLat(lnglat[1]);\n    return [x, y];\n  }\n\n  public unproject(xy: [number, number]): [number, number] {\n    const lng = this.lngFromMercatorX(xy[0]);\n    const lat = this.latFromMercatorY(xy[1]);\n    return [lng, lat];\n  }\n}\n"],"file":"simpleMapCoord.js"}