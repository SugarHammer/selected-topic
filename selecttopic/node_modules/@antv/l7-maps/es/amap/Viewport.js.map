{"version":3,"sources":["../../src/amap/Viewport.ts"],"names":["mat4","vec3","DEGREES_TO_RADIANS","Math","PI","Viewport","create","mapCamera","zoom","pitch","bearing","center","offsetOrigin","cameraHeight","aspect","near","far","fov","pitchInRadians","rotationInRadians","perspective","projectionMatrix","eye","fromValues","sin","cos","up","lookAt","viewMatrix","viewUncenteredMatrix","clone","translate","multiply","viewProjectionMatrix","ViewProjectionMatrixUncentered","lng","lat","lngLat","scale","maxs","max","min","zoomScale","d","x","y","log","tan","a","b","c"],"mappings":"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","sourcesContent":["import { IMapCamera, IViewport } from '@antv/l7-core';\nimport { mat4, vec3 } from 'gl-matrix';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nexport default class Viewport implements IViewport {\n  private projectionMatrix: mat4 = mat4.create();\n  private viewMatrix: mat4 = mat4.create();\n  private viewProjectionMatrix: mat4 = mat4.create();\n  private ViewProjectionMatrixUncentered: mat4 = mat4.create();\n  private viewUncenteredMatrix: mat4 = mat4.create();\n  private zoom: number;\n  private center: number[];\n\n  public syncWithMapCamera(mapCamera: Partial<IMapCamera>) {\n    const {\n      zoom = 1,\n      pitch = 0,\n      bearing = 0,\n      center = [0, 0],\n      offsetOrigin = [0, 0],\n      cameraHeight = 1,\n      aspect = 1,\n      near = 0.1,\n      far = 1000,\n      fov = 0,\n    } = mapCamera;\n    this.zoom = zoom;\n    this.center = center;\n\n    const pitchInRadians = pitch * DEGREES_TO_RADIANS;\n    const rotationInRadians = (360 - bearing) * DEGREES_TO_RADIANS;\n\n    // 计算透视投影矩阵 projectionMatrix\n    mat4.perspective(this.projectionMatrix, fov, aspect, near, far);\n    // 计算相机矩阵 viewMatrix\n    const eye = vec3.fromValues(\n      cameraHeight * Math.sin(pitchInRadians) * Math.sin(rotationInRadians),\n      -cameraHeight * Math.sin(pitchInRadians) * Math.cos(rotationInRadians),\n      cameraHeight * Math.cos(pitchInRadians),\n    );\n    const up = vec3.fromValues(\n      -Math.cos(pitchInRadians) * Math.sin(rotationInRadians),\n      Math.cos(pitchInRadians) * Math.cos(rotationInRadians),\n      Math.sin(pitchInRadians),\n    );\n    mat4.lookAt(this.viewMatrix, eye, vec3.fromValues(0, 0, 0), up);\n    this.viewUncenteredMatrix = mat4.clone(this.viewMatrix);\n\n    // 移动相机位置\n    mat4.translate(\n      this.viewMatrix,\n      this.viewMatrix,\n      vec3.fromValues(-offsetOrigin[0], offsetOrigin[1], 0),\n    );\n\n    mat4.multiply(\n      this.viewProjectionMatrix,\n      this.projectionMatrix,\n      this.viewMatrix,\n    );\n    mat4.multiply(\n      this.ViewProjectionMatrixUncentered,\n      this.projectionMatrix,\n      this.viewMatrix,\n    );\n  }\n\n  public getZoom(): number {\n    return this.zoom;\n  }\n\n  public getZoomScale(): number {\n    // 512 尺寸下的缩放：2 ^ 19\n    return 524288;\n  }\n\n  public getCenter(): [number, number] {\n    const [lng, lat] = this.center;\n    return [lng, lat];\n  }\n\n  public getProjectionMatrix(): number[] {\n    // @ts-ignore\n    return this.projectionMatrix;\n  }\n\n  public getModelMatrix(): number[] {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  }\n\n  public getViewMatrix(): number[] {\n    // @ts-ignore\n    return this.viewMatrix;\n  }\n\n  public getViewMatrixUncentered(): number[] {\n    // @ts-ignore\n    return this.viewUncenteredMatrix;\n  }\n  public getViewProjectionMatrix(): number[] {\n    // @ts-ignore\n    return this.viewProjectionMatrix;\n  }\n\n  public getViewProjectionMatrixUncentered(): number[] {\n    // @ts-ignore\n    return this.ViewProjectionMatrixUncentered;\n  }\n\n  public getFocalDistance() {\n    return 1;\n  }\n\n  /**\n   * P20 坐标系，固定 scale\n   */\n  public projectFlat(\n    lngLat: [number, number],\n    scale?: number | undefined,\n  ): [number, number] {\n    const maxs = 85.0511287798;\n    const lat = Math.max(Math.min(maxs, lngLat[1]), -maxs);\n    // tslint:disable-next-line:no-bitwise\n    const zoomScale = 256 << 20;\n    let d = Math.PI / 180;\n    let x = lngLat[0] * d;\n    let y = lat * d;\n    y = Math.log(Math.tan(Math.PI / 4 + y / 2));\n    const a = 0.5 / Math.PI;\n    const b = 0.5;\n    const c = -0.5 / Math.PI;\n    d = 0.5;\n    x = zoomScale * (a * x + b) - 215440491;\n    y = -(zoomScale * (c * y + d) - 106744817);\n    return [x, y];\n  }\n}\n"],"file":"Viewport.js"}