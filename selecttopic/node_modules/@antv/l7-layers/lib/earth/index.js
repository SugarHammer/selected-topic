"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _BaseLayer2 = _interopRequireDefault(require("../core/BaseLayer"));

var _atmosphere = _interopRequireDefault(require("./models/atmosphere"));

var _base = _interopRequireDefault(require("./models/base"));

var _bloomsphere = _interopRequireDefault(require("./models/bloomsphere"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var EarthModels = {
  base: _base.default,
  atomSphere: _atmosphere.default,
  bloomSphere: _bloomsphere.default
};
var earthLayerTypes = ['base', 'atomSphere', 'bloomSphere'];

var EarthLayer = function (_BaseLayer) {
  (0, _inherits2.default)(EarthLayer, _BaseLayer);

  var _super = _createSuper(EarthLayer);

  function EarthLayer() {
    var _this;

    (0, _classCallCheck2.default)(this, EarthLayer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "type", 'EarthLayer');
    return _this;
  }

  (0, _createClass2.default)(EarthLayer, [{
    key: "buildModels",
    value: function buildModels() {
      var shape = this.getModelType();
      this.layerModel = new EarthModels[shape](this);
      this.models = this.layerModel.initModels();
    }
  }, {
    key: "setEarthTime",
    value: function setEarthTime(time) {
      if (this.layerModel && this.layerModel.setEarthTime) {
        this.layerModel.setEarthTime(time);
      } else {
        console.error('请在 scene loaded 之后执行该方法！');
      }
    }
  }, {
    key: "getModelType",
    value: function getModelType() {
      var _shapeAttribute$scale;

      var shapeAttribute = this.styleAttributeService.getLayerStyleAttribute('shape');
      var shape = (shapeAttribute === null || shapeAttribute === void 0 ? void 0 : (_shapeAttribute$scale = shapeAttribute.scale) === null || _shapeAttribute$scale === void 0 ? void 0 : _shapeAttribute$scale.field) || 'base';

      if (earthLayerTypes.indexOf(shape) < 0) {
        shape = 'base';
      }

      return shape;
    }
  }]);
  return EarthLayer;
}(_BaseLayer2.default);

exports.default = EarthLayer;
//# sourceMappingURL=index.js.map