{"version":3,"sources":["../../src/utils/geo.ts"],"names":["calculateCentroid","coord","Error","coords","xSum","ySum","len","forEach","coor","pos","calculatePointsCenterAndRadius","points","maxX","maxY","minX","minY","xCount","yCount","pCount","i","length","x","y","Math","max","min","center","radius","sqrt","pow"],"mappings":";;;;;;;;;;;;AAEO,SAASA,iBAAT,CACLC,KADK,EAEK;AAEV,MAAI,wBAASA,KAAK,CAAC,CAAD,CAAd,CAAJ,EAAwB;AACtB,WAAOA,KAAP;AACD,GAFD,MAEO,IAAI,wBAASA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAT,CAAJ,EAA2B;AAChC,UAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACD,GAFM,MAEA,IAAI,wBAASD,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAY,CAAZ,CAAT,CAAJ,EAA8B;AACnC,QAAME,MAAM,GAAGF,KAAf;AACA,QAAIG,IAAI,GAAG,CAAX;AACA,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,GAAG,GAAG,CAAV;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAe,UAACC,IAAD,EAAsB;AACnCA,MAAAA,IAAI,CAACD,OAAL,CAAa,UAACE,GAAD,EAAS;AACpBL,QAAAA,IAAI,IAAIK,GAAG,CAAC,CAAD,CAAX;AACAJ,QAAAA,IAAI,IAAII,GAAG,CAAC,CAAD,CAAX;AACAH,QAAAA,GAAG;AACJ,OAJD;AAKD,KAND;AAOA,WAAO,CAACF,IAAI,GAAGE,GAAR,EAAaD,IAAI,GAAGC,GAApB,EAAyB,CAAzB,CAAP;AACD,GAbM,MAaA;AACL,UAAM,IAAIJ,KAAJ,CAAU,WAAV,CAAN;AACD;AACF;;AAOM,SAASQ,8BAAT,CAAwCC,MAAxC,EAA0D;AAC/D,MAAIC,IAAI,GAAGD,MAAM,CAAC,CAAD,CAAjB;AACA,MAAIE,IAAI,GAAGF,MAAM,CAAC,CAAD,CAAjB;AACA,MAAIG,IAAI,GAAGH,MAAM,CAAC,CAAD,CAAjB;AACA,MAAII,IAAI,GAAGJ,MAAM,CAAC,CAAD,CAAjB;AACA,MAAIK,MAAM,GAAG,CAAb;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,MAAM,GAAG,CAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAAM,CAACS,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC,QAAME,CAAC,GAAGV,MAAM,CAACQ,CAAD,CAAhB;AACA,QAAMG,CAAC,GAAGX,MAAM,CAACQ,CAAC,GAAG,CAAL,CAAhB;;AACA,QAAIE,CAAC,IAAIC,CAAT,EAAY;AACVV,MAAAA,IAAI,GAAGW,IAAI,CAACC,GAAL,CAASH,CAAT,EAAYT,IAAZ,CAAP;AACAC,MAAAA,IAAI,GAAGU,IAAI,CAACC,GAAL,CAASF,CAAT,EAAYT,IAAZ,CAAP;AACAC,MAAAA,IAAI,GAAGS,IAAI,CAACE,GAAL,CAASJ,CAAT,EAAYP,IAAZ,CAAP;AACAC,MAAAA,IAAI,GAAGQ,IAAI,CAACE,GAAL,CAASH,CAAT,EAAYP,IAAZ,CAAP;AACAC,MAAAA,MAAM,IAAIK,CAAV;AACAJ,MAAAA,MAAM,IAAIK,CAAV;AACAJ,MAAAA,MAAM;AACP;AACF;;AACD,SAAO;AACLQ,IAAAA,MAAM,EAAE,CAACV,MAAM,GAAGE,MAAV,EAAkBD,MAAM,GAAGC,MAA3B,CADH;AAELS,IAAAA,MAAM,EAAEJ,IAAI,CAACK,IAAL,CAAUL,IAAI,CAACM,GAAL,CAASjB,IAAI,GAAGE,IAAhB,EAAsB,CAAtB,IAA2BS,IAAI,CAACM,GAAL,CAAShB,IAAI,GAAGE,IAAhB,EAAsB,CAAtB,CAArC,IAAiE;AAFpE,GAAP;AAID","sourcesContent":["type Position = number[];\nimport { isNumber } from 'lodash';\nexport function calculateCentroid(\n  coord: Position | Position[] | Position[][],\n): Position {\n  // let pos = coord as Position;\n  if (isNumber(coord[0])) {\n    return coord as Position;\n  } else if (isNumber(coord[0][0])) {\n    throw new Error('当前数据不支持标注');\n  } else if (isNumber(coord[0][0][0])) {\n    const coords = coord as Position[][];\n    let xSum = 0;\n    let ySum = 0;\n    let len = 0;\n    coords.forEach((coor: Position[]) => {\n      coor.forEach((pos) => {\n        xSum += pos[0];\n        ySum += pos[1];\n        len++;\n      });\n    });\n    return [xSum / len, ySum / len, 0];\n  } else {\n    throw new Error('当前数据不支持标注');\n  }\n}\n\n/**\n * 计算\n * @param points\n * @returns\n */\nexport function calculatePointsCenterAndRadius(points: number[]) {\n  let maxX = points[0];\n  let maxY = points[1];\n  let minX = points[0];\n  let minY = points[1];\n  let xCount = 0;\n  let yCount = 0;\n  let pCount = 0;\n\n  for (let i = 0; i < points.length; i += 2) {\n    const x = points[i];\n    const y = points[i + 1];\n    if (x && y) {\n      maxX = Math.max(x, maxX);\n      maxY = Math.max(y, maxY);\n      minX = Math.min(x, minX);\n      minY = Math.min(y, minY);\n      xCount += x;\n      yCount += y;\n      pCount++;\n    }\n  }\n  return {\n    center: [xCount / pCount, yCount / pCount],\n    radius: Math.sqrt(Math.pow(maxX - minX, 2) + Math.pow(maxY - minY, 2)) / 2,\n  };\n}\n"],"file":"geo.js"}