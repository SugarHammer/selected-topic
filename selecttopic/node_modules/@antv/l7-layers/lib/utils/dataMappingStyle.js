"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleStyleColor = handleStyleColor;
exports.handleStyleDataMapping = handleStyleDataMapping;
exports.handleStyleFloat = handleStyleFloat;

var _isString2 = _interopRequireDefault(require("lodash/isString"));

var _isNumber2 = _interopRequireDefault(require("lodash/isNumber"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _isArray2 = _interopRequireDefault(require("lodash/isArray"));

var WIDTH = 1024;

function registerStyleAttribute(fieldName, layer, field, values, updateOptions) {
  layer.updateStyleAttribute(fieldName, field, values, updateOptions);
}

function handleStyleDataMapping(configToUpdate, layer) {
  if (configToUpdate.opacity) {
    handleStyleFloat('opacity', layer, configToUpdate.opacity);
  }

  if (configToUpdate.strokeWidth) {
    handleStyleFloat('strokeWidth', layer, configToUpdate.strokeWidth);
  }

  if (configToUpdate.strokeOpacity) {
    handleStyleFloat('strokeOpacity', layer, configToUpdate.strokeOpacity);
  }

  if (configToUpdate.stroke) {
    handleStyleColor('stroke', layer, configToUpdate.stroke);
  }

  if (configToUpdate.offsets) {
    handleStyleOffsets('offsets', layer, configToUpdate.offsets);
  }

  if (configToUpdate.textOffset) {
    handleStyleOffsets('textOffset', layer, configToUpdate.textOffset);
  }

  if (configToUpdate.thetaOffset) {
    handleStyleFloat('thetaOffset', layer, configToUpdate.thetaOffset);
  }
}

function handleStyleFloat(fieldName, layer, styleFloat) {
  if ((0, _isString2.default)(styleFloat)) {
    registerStyleAttribute(fieldName, layer, styleFloat, function (value) {
      return value;
    });
  } else if ((0, _isNumber2.default)(styleFloat)) {
    registerStyleAttribute(fieldName, layer, [styleFloat], undefined);
  } else if ((0, _isArray2.default)(styleFloat) && styleFloat.length === 2) {
    if ((0, _isString2.default)(styleFloat[0]) && (0, _isFunction2.default)(styleFloat[1])) {
      registerStyleAttribute(fieldName, layer, styleFloat[0], styleFloat[1]);
    } else if ((0, _isString2.default)(styleFloat[0]) && (0, _isArray2.default)(styleFloat[1]) && (0, _isNumber2.default)(styleFloat[1][0]) && (0, _isNumber2.default)(styleFloat[1][1])) {
      registerStyleAttribute(fieldName, layer, styleFloat[0], styleFloat[1]);
    } else {
      registerStyleAttribute(fieldName, layer, [1.0], undefined);
    }
  } else {
    registerStyleAttribute(fieldName, layer, [1.0], undefined);
  }
}

function handleStyleOffsets(fieldName, layer, styleOffsets) {
  if ((0, _isString2.default)(styleOffsets)) {
    registerStyleAttribute(fieldName, layer, styleOffsets, function (value) {
      return value;
    });
  } else if ((0, _isArray2.default)(styleOffsets) && styleOffsets.length === 2 && (0, _isString2.default)(styleOffsets[0]) && (0, _isFunction2.default)(styleOffsets[1])) {
    registerStyleAttribute(fieldName, layer, styleOffsets[0], styleOffsets[1]);
  } else if ((0, _isArray2.default)(styleOffsets) && styleOffsets.length === 2 && (0, _isNumber2.default)(styleOffsets[0]) && (0, _isNumber2.default)(styleOffsets[1])) {
    registerStyleAttribute(fieldName, layer, styleOffsets, undefined);
  } else {
    registerStyleAttribute(fieldName, layer, [0, 0], undefined);
  }
}

function handleStyleColor(fieldName, layer, styleColor) {
  if ((0, _isString2.default)(styleColor)) {
    registerStyleAttribute(fieldName, layer, styleColor, undefined);
  } else if ((0, _isArray2.default)(styleColor) && styleColor.length === 2) {
    if ((0, _isString2.default)(styleColor[0]) && (0, _isFunction2.default)(styleColor[1])) {
      registerStyleAttribute(fieldName, layer, styleColor[0], styleColor[1]);
    } else if ((0, _isString2.default)(styleColor[0]) && (0, _isArray2.default)(styleColor[1]) && styleColor[1].length > 0) {
      registerStyleAttribute(fieldName, layer, styleColor[0], styleColor[1]);
    } else {
      registerStyleAttribute(fieldName, layer, '#fff', undefined);
    }
  } else {
    registerStyleAttribute(fieldName, layer, '#fff', undefined);
  }
}
//# sourceMappingURL=dataMappingStyle.js.map