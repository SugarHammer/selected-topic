"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _initializerDefineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerDefineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime/helpers/applyDecoratedDescriptor"));

var _initializerWarningHelper2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerWarningHelper"));

var _cloneDeep2 = _interopRequireDefault(require("lodash/cloneDeep"));

var _l7Core = require("@antv/l7-core");

var _l7Maps = require("@antv/l7-maps");

var _l7Utils = require("@antv/l7-utils");

var _inversify = require("inversify");

require("reflect-metadata");

var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var DataMappingPlugin = (_dec = (0, _inversify.injectable)(), _dec2 = (0, _inversify.inject)(_l7Core.TYPES.IGlobalConfigService), _dec3 = (0, _inversify.inject)(_l7Core.TYPES.IMapService), _dec4 = (0, _inversify.inject)(_l7Core.TYPES.IFontService), _dec(_class = (_class2 = function () {
  function DataMappingPlugin() {
    (0, _classCallCheck2.default)(this, DataMappingPlugin);
    (0, _initializerDefineProperty2.default)(this, "configService", _descriptor, this);
    (0, _initializerDefineProperty2.default)(this, "mapService", _descriptor2, this);
    (0, _initializerDefineProperty2.default)(this, "fontService", _descriptor3, this);
  }

  (0, _createClass2.default)(DataMappingPlugin, [{
    key: "apply",
    value: function apply(layer, _ref) {
      var _this = this;

      var styleAttributeService = _ref.styleAttributeService;
      layer.hooks.init.tap('DataMappingPlugin', function () {
        _this.generateMaping(layer, {
          styleAttributeService: styleAttributeService
        });
      });
      layer.hooks.beforeRenderData.tap('DataMappingPlugin', function () {
        layer.dataState.dataMappingNeedUpdate = false;

        _this.generateMaping(layer, {
          styleAttributeService: styleAttributeService
        });

        return true;
      });
      layer.hooks.beforeRender.tap('DataMappingPlugin', function () {
        if (layer.layerModelNeedUpdate) {
          return;
        }

        var bottomColor = layer.getBottomColor();
        var attributes = styleAttributeService.getLayerStyleAttributes() || [];
        var filter = styleAttributeService.getLayerStyleAttribute('filter');
        var dataArray = layer.getSource().data.dataArray;
        var attributesToRemapping = attributes.filter(function (attribute) {
          return attribute.needRemapping;
        });
        var filterData = dataArray;

        if (filter !== null && filter !== void 0 && filter.needRemapping && filter !== null && filter !== void 0 && filter.scale) {
          filterData = dataArray.filter(function (record) {
            return _this.applyAttributeMapping(filter, record, bottomColor)[0];
          });
        }

        if (attributesToRemapping.length) {
          if (filter !== null && filter !== void 0 && filter.needRemapping) {
            layer.setEncodedData(_this.mapping(attributes, filterData, undefined, bottomColor));
            filter.needRemapping = false;
          } else {
            layer.setEncodedData(_this.mapping(attributesToRemapping, filterData, layer.getEncodedData(), bottomColor));
          }

          layer.emit('remapping', null);
        }
      });
    }
  }, {
    key: "generateMaping",
    value: function generateMaping(layer, _ref2) {
      var _this2 = this;

      var styleAttributeService = _ref2.styleAttributeService;
      var bottomColor = layer.getBottomColor();
      var attributes = styleAttributeService.getLayerStyleAttributes() || [];
      var filter = styleAttributeService.getLayerStyleAttribute('filter');
      var dataArray = layer.getSource().data.dataArray;
      var filterData = dataArray;

      if (filter !== null && filter !== void 0 && filter.scale) {
        filterData = dataArray.filter(function (record) {
          return _this2.applyAttributeMapping(filter, record, bottomColor)[0];
        });
      }

      layer.setEncodedData(this.mapping(attributes, filterData, undefined, bottomColor));
    }
  }, {
    key: "mapping",
    value: function mapping(attributes, data, predata, minimumColor) {
      var _this3 = this;

      var mappedData = data.map(function (record, i) {
        var preRecord = predata ? predata[i] : {};

        var encodeRecord = _objectSpread({
          id: record._id,
          coordinates: record.coordinates
        }, preRecord);

        attributes.filter(function (attribute) {
          return attribute.scale !== undefined;
        }).forEach(function (attribute) {
          var values = _this3.applyAttributeMapping(attribute, record, minimumColor);

          attribute.needRemapping = false;

          if (attribute.name === 'color') {
            values = values.map(function (c) {
              return (0, _l7Utils.rgb2arr)(c);
            });
          }

          encodeRecord[attribute.name] = Array.isArray(values) && values.length === 1 ? values[0] : values;

          if (attribute.name === 'shape') {
            encodeRecord.shape = _this3.fontService.getIconFontKey(encodeRecord[attribute.name]);
          }
        });
        return encodeRecord;
      });
      this.adjustData2Amap2Coordinates(mappedData);
      this.adjustData2SimpleCoordinates(mappedData);
      return mappedData;
    }
  }, {
    key: "adjustData2Amap2Coordinates",
    value: function adjustData2Amap2Coordinates(mappedData) {
      var _this4 = this;

      if (mappedData.length > 0 && this.mapService.version === _l7Maps.Version['GAODE2.x']) {
        if (typeof mappedData[0].coordinates[0] === 'number') {
          mappedData.filter(function (d) {
            return !d.originCoordinates;
          }).map(function (d) {
            d.version = _l7Maps.Version['GAODE2.x'];
            d.originCoordinates = (0, _cloneDeep2.default)(d.coordinates);
            d.coordinates = _this4.mapService.lngLatToCoord(d.coordinates);
          });
        } else {
          mappedData.filter(function (d) {
            return !d.originCoordinates;
          }).map(function (d) {
            d.version = _l7Maps.Version['GAODE2.x'];
            d.originCoordinates = (0, _cloneDeep2.default)(d.coordinates);
            d.coordinates = _this4.mapService.lngLatToCoords(d.coordinates);
          });
        }
      }
    }
  }, {
    key: "adjustData2SimpleCoordinates",
    value: function adjustData2SimpleCoordinates(mappedData) {
      var _this5 = this;

      if (mappedData.length > 0 && this.mapService.version === _l7Maps.Version.SIMPLE) {
        mappedData.map(function (d) {
          if (!d.simpleCoordinate) {
            d.coordinates = _this5.unProjectCoordinates(d.coordinates);
            d.simpleCoordinate = true;
          }
        });
      }
    }
  }, {
    key: "unProjectCoordinates",
    value: function unProjectCoordinates(coordinates) {
      var _this6 = this;

      if (typeof coordinates[0] === 'number') {
        return this.mapService.simpleMapCoord.unproject(coordinates);
      }

      if (coordinates[0] && coordinates[0][0] instanceof Array) {
        var coords = [];
        coordinates.map(function (coord) {
          var c1 = [];
          coord.map(function (co) {
            c1.push(_this6.mapService.simpleMapCoord.unproject(co));
          });
          coords.push(c1);
        });
        return coords;
      } else {
        var _coords = [];
        coordinates.map(function (coord) {
          _coords.push(_this6.mapService.simpleMapCoord.unproject(coord));
        });
        return _coords;
      }
    }
  }, {
    key: "applyAttributeMapping",
    value: function applyAttributeMapping(attribute, record, minimumColor) {
      var _attribute$scale;

      if (!attribute.scale) {
        return [];
      }

      var scalers = (attribute === null || attribute === void 0 ? void 0 : (_attribute$scale = attribute.scale) === null || _attribute$scale === void 0 ? void 0 : _attribute$scale.scalers) || [];
      var params = [];
      scalers.forEach(function (_ref3) {
        var _attribute$scale2;

        var field = _ref3.field;

        if (record.hasOwnProperty(field) || ((_attribute$scale2 = attribute.scale) === null || _attribute$scale2 === void 0 ? void 0 : _attribute$scale2.type) === 'variable') {
          params.push(record[field]);
        }
      });
      var mappingResult = attribute.mapping ? attribute.mapping(params) : [];

      if (attribute.name === 'color' && !(0, _l7Utils.isColor)(mappingResult[0])) {
        return [minimumColor];
      }

      return mappingResult;
    }
  }]);
  return DataMappingPlugin;
}(), (_descriptor = (0, _applyDecoratedDescriptor2.default)(_class2.prototype, "configService", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2 = (0, _applyDecoratedDescriptor2.default)(_class2.prototype, "mapService", [_dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3 = (0, _applyDecoratedDescriptor2.default)(_class2.prototype, "fontService", [_dec4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
})), _class2)) || _class);
exports.default = DataMappingPlugin;
//# sourceMappingURL=DataMappingPlugin.js.map