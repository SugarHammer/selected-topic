{"version":3,"sources":["../../src/plugins/RegisterStyleAttributePlugin.ts"],"names":["RegisterStyleAttributePlugin","layer","styleAttributeService","hooks","init","tap","registerBuiltinAttributes","registerStyleAttribute","name","type","AttributeType","Attribute","descriptor","buffer","data","gl","FLOAT","size","update","feature","featureIdx","vertex","length","usage","DYNAMIC_DRAW","filter","color","attributeIdx"],"mappings":"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","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IEncodeFeature,\n  ILayer,\n  ILayerPlugin,\n  IStyleAttributeService,\n  TYPES,\n} from '@antv/l7-core';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\n\n/**\n * 在初始化阶段完成属性的注册，以及首次根据 Layer 指定的三角化方法完成 indices 和 attribute 的创建\n */\n@injectable()\nexport default class RegisterStyleAttributePlugin implements ILayerPlugin {\n  public apply(\n    layer: ILayer,\n    {\n      styleAttributeService,\n    }: { styleAttributeService: IStyleAttributeService },\n  ) {\n    layer.hooks.init.tap('RegisterStyleAttributePlugin', () => {\n      this.registerBuiltinAttributes(styleAttributeService);\n    });\n  }\n\n  private registerBuiltinAttributes(\n    styleAttributeService: IStyleAttributeService,\n  ) {\n    styleAttributeService.registerStyleAttribute({\n      name: 'position',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Position',\n        buffer: {\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 3,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n        ) => {\n          return vertex.length === 2\n            ? [vertex[0], vertex[1], 0]\n            : [vertex[0], vertex[1], vertex[2]];\n        },\n      },\n    });\n\n    styleAttributeService.registerStyleAttribute({\n      name: 'filter',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'filter',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (feature: IEncodeFeature, featureIdx: number) => {\n          const { filter } = feature;\n          return filter ? [1] : [0];\n        },\n      },\n    });\n    styleAttributeService.registerStyleAttribute({\n      name: 'color',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Color',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 4,\n        update: (feature: IEncodeFeature, featureIdx: number) => {\n          const { color } = feature;\n          return !color || !color.length ? [1, 1, 1, 1] : color;\n        },\n      },\n    });\n    styleAttributeService.registerStyleAttribute({\n      // 统一注册每个顶点的唯一编号（目前用于样式的数据映射计算使用）\n      name: 'vertexId',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_vertexId',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [featureIdx];\n        },\n      },\n    });\n  }\n}\n"],"file":"RegisterStyleAttributePlugin.js"}