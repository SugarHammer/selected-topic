"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _initializerDefineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerDefineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime/helpers/applyDecoratedDescriptor"));

var _initializerWarningHelper2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerWarningHelper"));

var _l7Core = require("@antv/l7-core");

var _inversify = require("inversify");

require("reflect-metadata");

var _multiPassRender = require("../utils/multiPassRender");

var _dec, _dec2, _class, _class2, _descriptor;

var MultiPassRendererPlugin = (_dec = (0, _inversify.injectable)(), _dec2 = (0, _inversify.inject)(_l7Core.TYPES.IGlobalConfigService), _dec(_class = (_class2 = function () {
  function MultiPassRendererPlugin() {
    (0, _classCallCheck2.default)(this, MultiPassRendererPlugin);
    (0, _initializerDefineProperty2.default)(this, "configService", _descriptor, this);
    (0, _defineProperty2.default)(this, "enabled", void 0);
  }

  (0, _createClass2.default)(MultiPassRendererPlugin, [{
    key: "apply",
    value: function apply(layer, _ref) {
      var _this = this;

      var rendererService = _ref.rendererService,
          postProcessingPassFactory = _ref.postProcessingPassFactory,
          normalPassFactory = _ref.normalPassFactory;
      layer.hooks.init.tap('MultiPassRendererPlugin', function () {
        var _layer$getLayerConfig = layer.getLayerConfig(),
            enableMultiPassRenderer = _layer$getLayerConfig.enableMultiPassRenderer,
            _layer$getLayerConfig2 = _layer$getLayerConfig.passes,
            passes = _layer$getLayerConfig2 === void 0 ? [] : _layer$getLayerConfig2;

        _this.enabled = !!enableMultiPassRenderer && layer.getLayerConfig().enableMultiPassRenderer !== false;

        if (_this.enabled) {
          layer.multiPassRenderer = (0, _multiPassRender.createMultiPassRenderer)(layer, passes, postProcessingPassFactory, normalPassFactory);
          layer.multiPassRenderer.setRenderFlag(true);
        }
      });
      layer.hooks.beforeRender.tap('MultiPassRendererPlugin', function () {
        if (_this.enabled) {
          var _rendererService$getV = rendererService.getViewportSize(),
              width = _rendererService$getV.width,
              height = _rendererService$getV.height;

          layer.multiPassRenderer.resize(width, height);
        }
      });
    }
  }]);
  return MultiPassRendererPlugin;
}(), (_descriptor = (0, _applyDecoratedDescriptor2.default)(_class2.prototype, "configService", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
})), _class2)) || _class);
exports.default = MultiPassRendererPlugin;
//# sourceMappingURL=MultiPassRendererPlugin.js.map