{"version":3,"sources":["../../../src/line/models/arc.ts"],"names":["AttributeType","gl","getMask","rgb2arr","BaseModel","LineArcTriangulation","lineStyleObj","solid","dash","ArcModel","createTexture2D","rendererService","texture","update","data","iconService","getCanvas","layer","render","mag","NEAREST","min","premultiplyAlpha","width","height","canvasHeight","getLayerConfig","opacity","sourceColor","targetColor","textureBlend","lineType","dashArray","forward","lineTexture","iconStep","segmentNumber","thetaOffset","dataTextureTest","dataTextureNeedUpdate","judgeStyleAttributes","encodeData","getEncodedData","calDataFrame","cellLength","cellProperties","rowCount","dataTexture","length","flipY","format","LUMINANCE","type","FLOAT","push","useLinearColor","sourceColorArr","targetColorArr","getDirty","bind","u_dataTexture","u_cellTypeLayout","getCellTypeLayout","u_thetaOffset","u_opacity","u_textureBlend","u_line_type","u_dash_array","u_blur","u_lineDir","u_texture","u_line_texture","u_icon_step","u_textSize","u_linearColor","u_sourceColor","u_targetColor","animateOption","u_aimate","animateOption2Array","u_time","getLayerAnimateTime","updateTexture","on","buildModels","destroy","off","frag","arc_dash_frag","vert","arc_dash_vert","arc_linear_frag","arc_linear_vert","arc_line_frag","arc_line_vert","mask","maskInside","getShaders","buildLayerModel","moduleName","vertexShader","fragmentShader","triangulation","depth","enable","blend","getBlend","stencil","styleAttributeService","registerStyleAttribute","name","Attribute","descriptor","buffer","usage","DYNAMIC_DRAW","size","feature","featureIdx","vertex","attributeIdx","Array","isArray","STATIC_DRAW","iconMap","getIconMap","x","y"],"mappings":";;;;;;;;;;;;;AAAA,SACEA,aADF,EAEEC,EAFF,QASO,eATP;AAWA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,gBAAjC;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,SAASC,oBAAT,QAAqC,0BAArC;;;;;;;AAUA,IAAMC,YAAuC,GAAG;AAC9CC,EAAAA,KAAK,EAAE,GADuC;AAE9CC,EAAAA,IAAI,EAAE;AAFwC,CAAhD;;IAIqBC,Q;;;;;;;;;;;;;;;;;;oEAiPK,YAAM;AAC5B,UAAQC,eAAR,GAA4B,MAAKC,eAAjC,CAAQD,eAAR;;AACA,UAAI,MAAKE,OAAT,EAAkB;AAChB,cAAKA,OAAL,CAAaC,MAAb,CAAoB;AAClBC,UAAAA,IAAI,EAAE,MAAKC,WAAL,CAAiBC,SAAjB;AADY,SAApB;;AAGA,cAAKC,KAAL,CAAWC,MAAX;;AACA;AACD;;AACD,YAAKN,OAAL,GAAeF,eAAe,CAAC;AAC7BI,QAAAA,IAAI,EAAE,MAAKC,WAAL,CAAiBC,SAAjB,EADuB;AAE7BG,QAAAA,GAAG,EAAElB,EAAE,CAACmB,OAFqB;AAG7BC,QAAAA,GAAG,EAAEpB,EAAE,CAACmB,OAHqB;AAI7BE,QAAAA,gBAAgB,EAAE,KAJW;AAK7BC,QAAAA,KAAK,EAAE,IALsB;AAM7BC,QAAAA,MAAM,EAAE,MAAKT,WAAL,CAAiBU,YAAjB,IAAiC;AANZ,OAAD,CAA9B;AAQD,K;;;;;;;WAhQD,wBAAqC;AACnC,iBAYI,KAAKR,KAAL,CAAWS,cAAX,EAZJ;AAAA,UACEC,OADF,QACEA,OADF;AAAA,UAEEC,WAFF,QAEEA,WAFF;AAAA,UAGEC,WAHF,QAGEA,WAHF;AAAA,mCAIEC,YAJF;AAAA,UAIEA,YAJF,kCAIiB,QAJjB;AAAA,+BAKEC,QALF;AAAA,UAKEA,QALF,8BAKa,OALb;AAAA,gCAMEC,SANF;AAAA,UAMEA,SANF,+BAMc,CAAC,EAAD,EAAK,CAAL,CANd;AAAA,8BAOEC,OAPF;AAAA,UAOEA,OAPF,6BAOY,IAPZ;AAAA,kCAQEC,WARF;AAAA,UAQEA,WARF,iCAQgB,KARhB;AAAA,+BASEC,QATF;AAAA,UASEA,QATF,8BASa,GATb;AAAA,oCAUEC,aAVF;AAAA,UAUEA,aAVF,mCAUkB,EAVlB;AAAA,kCAWEC,WAXF;AAAA,UAWEA,WAXF,iCAWgB,KAXhB;;AAcA,UACE,KAAKC,eAAL,IACA,KAAKC,qBAAL,CAA2B;AAAEZ,QAAAA,OAAO,EAAPA,OAAF;AAAWU,QAAAA,WAAW,EAAXA;AAAX,OAA3B,CAFF,EAGE;AACA,aAAKG,oBAAL,CAA0B;AAAEb,UAAAA,OAAO,EAAPA,OAAF;AAAWU,UAAAA,WAAW,EAAXA;AAAX,SAA1B;AACA,YAAMI,UAAU,GAAG,KAAKxB,KAAL,CAAWyB,cAAX,EAAnB;;AACA,iCAAgC,KAAKC,YAAL,CAC9B,KAAKC,UADyB,EAE9BH,UAF8B,EAG9B,KAAKI,cAHyB,CAAhC;AAAA,YAAQ/B,IAAR,sBAAQA,IAAR;AAAA,YAAcS,KAAd,sBAAcA,KAAd;AAAA,YAAqBC,MAArB,sBAAqBA,MAArB;;AAKA,aAAKsB,QAAL,GAAgBtB,MAAhB;AAEA,aAAKuB,WAAL,GACE,KAAKH,UAAL,GAAkB,CAAlB,IAAuB9B,IAAI,CAACkC,MAAL,GAAc,CAArC,GACI,KAAKtC,eAAL,CAAqB;AACnBuC,UAAAA,KAAK,EAAE,IADY;AAEnBnC,UAAAA,IAAI,EAAJA,IAFmB;AAGnBoC,UAAAA,MAAM,EAAEjD,EAAE,CAACkD,SAHQ;AAInBC,UAAAA,IAAI,EAAEnD,EAAE,CAACoD,KAJU;AAKnB9B,UAAAA,KAAK,EAALA,KALmB;AAMnBC,UAAAA,MAAM,EAANA;AANmB,SAArB,CADJ,GASI,KAAKd,eAAL,CAAqB;AACnBuC,UAAAA,KAAK,EAAE,IADY;AAEnBnC,UAAAA,IAAI,EAAE,CAAC,CAAD,CAFa;AAGnBoC,UAAAA,MAAM,EAAEjD,EAAE,CAACkD,SAHQ;AAInBC,UAAAA,IAAI,EAAEnD,EAAE,CAACoD,KAJU;AAKnB9B,UAAAA,KAAK,EAAE,CALY;AAMnBC,UAAAA,MAAM,EAAE;AANW,SAArB,CAVN;AAkBD;;AAED,UAAIQ,SAAS,CAACgB,MAAV,KAAqB,CAAzB,EAA4B;AAC1BhB,QAAAA,SAAS,CAACsB,IAAV,CAAe,CAAf,EAAkB,CAAlB;AACD;;AAGD,UAAIC,cAAc,GAAG,CAArB;AACA,UAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;AACA,UAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;;AACA,UAAI7B,WAAW,IAAIC,WAAnB,EAAgC;AAC9B2B,QAAAA,cAAc,GAAGrD,OAAO,CAACyB,WAAD,CAAxB;AACA6B,QAAAA,cAAc,GAAGtD,OAAO,CAAC0B,WAAD,CAAxB;AACA0B,QAAAA,cAAc,GAAG,CAAjB;AACD;;AAED,UAAI,KAAK5C,eAAL,CAAqB+C,QAArB,EAAJ,EAAqC;AACnC,aAAK9C,OAAL,CAAa+C,IAAb;AACD;;AAED,aAAO;AACLC,QAAAA,aAAa,EAAE,KAAKb,WADf;AAELc,QAAAA,gBAAgB,EAAE,KAAKC,iBAAL,EAFb;AAILC,QAAAA,aAAa,EAAE,UAAS1B,WAAT,IAAwBA,WAAxB,GAAsC,GAJhD;AAKL2B,QAAAA,SAAS,EAAE,UAASrC,OAAT,IAAoBA,OAApB,GAA8B,GALpC;AAMLsC,QAAAA,cAAc,EAAEnC,YAAY,KAAK,QAAjB,GAA4B,GAA5B,GAAkC,GAN7C;AAOLM,QAAAA,aAAa,EAAbA,aAPK;AAQL8B,QAAAA,WAAW,EAAE5D,YAAY,CAACyB,QAAQ,IAAI,OAAb,CARpB;AASLoC,QAAAA,YAAY,EAAEnC,SATT;AAULoC,QAAAA,MAAM,EAAE,GAVH;AAWLC,QAAAA,SAAS,EAAEpC,OAAO,GAAG,CAAH,GAAO,CAAC,CAXrB;AAcLqC,QAAAA,SAAS,EAAE,KAAK1D,OAdX;AAeL2D,QAAAA,cAAc,EAAErC,WAAW,GAAG,GAAH,GAAS,GAf/B;AAgBLsC,QAAAA,WAAW,EAAErC,QAhBR;AAiBLsC,QAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,KAAK1D,WAAL,CAAiBU,YAAjB,IAAiC,GAAxC,CAjBP;AAoBLiD,QAAAA,aAAa,EAAEnB,cApBV;AAqBLoB,QAAAA,aAAa,EAAEnB,cArBV;AAsBLoB,QAAAA,aAAa,EAAEnB;AAtBV,OAAP;AAwBD;;;WAED,8BAA2C;AACzC,kBAA0B,KAAKxC,KAAL,CAAWS,cAAX,EAA1B;AAAA,UAAQmD,aAAR,SAAQA,aAAR;;AACA,aAAO;AACLC,QAAAA,QAAQ,EAAE,KAAKC,mBAAL,CAAyBF,aAAzB,CADL;AAELG,QAAAA,MAAM,EAAE,KAAK/D,KAAL,CAAWgE,mBAAX;AAFH,OAAP;AAID;;;WAED,sBAA8B;AAC5B,WAAKC,aAAL;AACA,WAAKnE,WAAL,CAAiBoE,EAAjB,CAAoB,aAApB,EAAmC,KAAKD,aAAxC;AAEA,aAAO,KAAKE,WAAL,EAAP;AACD;;;WAED,uBAAqB;AAAA;;AACnB,4BAAKxE,OAAL,gEAAcyE,OAAd;AACA,gCAAKtC,WAAL,wEAAkBsC,OAAlB;AACA,WAAKtE,WAAL,CAAiBuE,GAAjB,CAAqB,aAArB,EAAoC,KAAKJ,aAAzC;AACD;;;WAED,sBAAkE;AAChE,kBAII,KAAKjE,KAAL,CAAWS,cAAX,EAJJ;AAAA,UACEE,WADF,SACEA,WADF;AAAA,UAEEC,WAFF,SAEEA,WAFF;AAAA,UAGEE,QAHF,SAGEA,QAHF;;AAKA,UAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvB,eAAO;AACLwD,UAAAA,IAAI,EAAEC,aADD;AAELC,UAAAA,IAAI,EAAEC,aAFD;AAGLtC,UAAAA,IAAI,EAAE;AAHD,SAAP;AAKD;;AAED,UAAIxB,WAAW,IAAIC,WAAnB,EAAgC;AAE9B,eAAO;AACL0D,UAAAA,IAAI,EAAEI,eADD;AAELF,UAAAA,IAAI,EAAEG,eAFD;AAGLxC,UAAAA,IAAI,EAAE;AAHD,SAAP;AAKD,OAPD,MAOO;AACL,eAAO;AACLmC,UAAAA,IAAI,EAAEM,aADD;AAELJ,UAAAA,IAAI,EAAEK,aAFD;AAGL1C,UAAAA,IAAI,EAAE;AAHD,SAAP;AAKD;AACF;;;WAED,uBAA+B;AAC7B,kBAII,KAAKnC,KAAL,CAAWS,cAAX,EAJJ;AAAA,sCACEU,aADF;AAAA,UACEA,aADF,oCACkB,EADlB;AAAA,6BAEE2D,IAFF;AAAA,UAEEA,IAFF,2BAES,KAFT;AAAA,mCAGEC,UAHF;AAAA,UAGEA,UAHF,iCAGe,IAHf;;AAKA,6BAA6B,KAAKC,UAAL,EAA7B;AAAA,UAAQV,IAAR,oBAAQA,IAAR;AAAA,UAAcE,IAAd,oBAAcA,IAAd;AAAA,UAAoBrC,IAApB,oBAAoBA,IAApB;;AACA,aAAO,CACL,KAAKnC,KAAL,CAAWiF,eAAX,CAA2B;AACzBC,QAAAA,UAAU,EAAE,cAAc/C,IADD;AAEzBgD,QAAAA,YAAY,EAAEX,IAFW;AAGzBY,QAAAA,cAAc,EAAEd,IAHS;AAIzBe,QAAAA,aAAa,EAAEjG,oBAJU;AAKzBkG,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SALkB;AAMzBC,QAAAA,KAAK,EAAE,KAAKC,QAAL,EANkB;AAOzBtE,QAAAA,aAAa,EAAbA,aAPyB;AAQzBuE,QAAAA,OAAO,EAAEzG,OAAO,CAAC6F,IAAD,EAAOC,UAAP;AARS,OAA3B,CADK,CAAP;AAYD;;;WAED,qCAAsC;AAAA;;AAEpC,WAAKY,qBAAL,CAA2BC,sBAA3B,CAAkD;AAChDC,QAAAA,IAAI,EAAE,MAD0C;AAEhD1D,QAAAA,IAAI,EAAEpD,aAAa,CAAC+G,SAF4B;AAGhDC,QAAAA,UAAU,EAAE;AACVF,UAAAA,IAAI,EAAE,QADI;AAEVG,UAAAA,MAAM,EAAE;AAENC,YAAAA,KAAK,EAAEjH,EAAE,CAACkH,YAFJ;AAGNrG,YAAAA,IAAI,EAAE,EAHA;AAINsC,YAAAA,IAAI,EAAEnD,EAAE,CAACoD;AAJH,WAFE;AAQV+D,UAAAA,IAAI,EAAE,CARI;AASVvG,UAAAA,MAAM,EAAE,gBACNwG,OADM,EAENC,UAFM,EAGNC,MAHM,EAINC,YAJM,EAKH;AACH,gCAAqBH,OAArB,CAAQD,IAAR;AAAA,gBAAQA,IAAR,8BAAe,CAAf;AACA,mBAAOK,KAAK,CAACC,OAAN,CAAcN,IAAd,IAAsB,CAACA,IAAI,CAAC,CAAD,CAAL,CAAtB,GAAkC,CAACA,IAAD,CAAzC;AACD;AAjBS;AAHoC,OAAlD;AAwBA,WAAKR,qBAAL,CAA2BC,sBAA3B,CAAkD;AAChDC,QAAAA,IAAI,EAAE,UAD0C;AAEhD1D,QAAAA,IAAI,EAAEpD,aAAa,CAAC+G,SAF4B;AAGhDC,QAAAA,UAAU,EAAE;AACVF,UAAAA,IAAI,EAAE,YADI;AAEVG,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAEjH,EAAE,CAAC0H,WADJ;AAEN7G,YAAAA,IAAI,EAAE,EAFA;AAGNsC,YAAAA,IAAI,EAAEnD,EAAE,CAACoD;AAHH,WAFE;AAOV+D,UAAAA,IAAI,EAAE,CAPI;AAQVvG,UAAAA,MAAM,EAAE,gBACNwG,OADM,EAENC,UAFM,EAGNC,MAHM,EAINC,YAJM,EAKH;AACH,mBAAO,CAACD,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,EAAkCA,MAAM,CAAC,CAAD,CAAxC,CAAP;AACD;AAfS;AAHoC,OAAlD;AAsBA,WAAKX,qBAAL,CAA2BC,sBAA3B,CAAkD;AAChDC,QAAAA,IAAI,EAAE,IAD0C;AAEhD1D,QAAAA,IAAI,EAAEpD,aAAa,CAAC+G,SAF4B;AAGhDC,QAAAA,UAAU,EAAE;AACVF,UAAAA,IAAI,EAAE,aADI;AAEVG,UAAAA,MAAM,EAAE;AAENC,YAAAA,KAAK,EAAEjH,EAAE,CAACkH,YAFJ;AAGNrG,YAAAA,IAAI,EAAE,EAHA;AAINsC,YAAAA,IAAI,EAAEnD,EAAE,CAACoD;AAJH,WAFE;AAQV+D,UAAAA,IAAI,EAAE,CARI;AASVvG,UAAAA,MAAM,EAAE,gBACNwG,OADM,EAENC,UAFM,EAGNC,MAHM,EAINC,YAJM,EAKH;AACH,gBAAMI,OAAO,GAAG,MAAI,CAAC7G,WAAL,CAAiB8G,UAAjB,EAAhB;;AACA,gBAAQjH,OAAR,GAAoByG,OAApB,CAAQzG,OAAR;;AACA,wBAAiBgH,OAAO,CAAChH,OAAD,CAAP,IAA8B;AAAEkH,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,CAAC,EAAE;AAAX,aAA/C;AAAA,gBAAQD,CAAR,SAAQA,CAAR;AAAA,gBAAWC,CAAX,SAAWA,CAAX;;AACA,mBAAO,CAACD,CAAD,EAAIC,CAAJ,CAAP;AACD;AAnBS;AAHoC,OAAlD;AAyBD;;;;EA/OmC3H,S;;SAAjBK,Q","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IAnimateOption,\n  IEncodeFeature,\n  ILayerConfig,\n  IModel,\n  IModelUniform,\n  ITexture2D,\n} from '@antv/l7-core';\n\nimport { getMask, rgb2arr } from '@antv/l7-utils';\nimport { isNumber } from 'lodash';\nimport BaseModel from '../../core/BaseModel';\nimport { ILineLayerStyleOptions, lineStyleType } from '../../core/interface';\nimport { LineArcTriangulation } from '../../core/triangulation';\n// arc dash line\nimport arc_dash_frag from '../shaders/dash/arc_dash_frag.glsl';\nimport arc_dash_vert from '../shaders/dash/arc_dash_vert.glsl';\n// arc normal line\nimport arc_line_frag from '../shaders/line_arc_frag.glsl';\nimport arc_line_vert from '../shaders/line_arc_vert.glsl';\n// arc linear line\nimport arc_linear_frag from '../shaders/linear/arc_linear_frag.glsl';\nimport arc_linear_vert from '../shaders/linear/arc_linear_vert.glsl';\nconst lineStyleObj: { [key: string]: number } = {\n  solid: 0.0,\n  dash: 1.0,\n};\nexport default class ArcModel extends BaseModel {\n  protected texture: ITexture2D;\n  public getUninforms(): IModelUniform {\n    const {\n      opacity,\n      sourceColor,\n      targetColor,\n      textureBlend = 'normal',\n      lineType = 'solid',\n      dashArray = [10, 5],\n      forward = true,\n      lineTexture = false,\n      iconStep = 100,\n      segmentNumber = 30,\n      thetaOffset = 0.314,\n    } = this.layer.getLayerConfig() as ILineLayerStyleOptions;\n\n    if (\n      this.dataTextureTest &&\n      this.dataTextureNeedUpdate({ opacity, thetaOffset })\n    ) {\n      this.judgeStyleAttributes({ opacity, thetaOffset });\n      const encodeData = this.layer.getEncodedData();\n      const { data, width, height } = this.calDataFrame(\n        this.cellLength,\n        encodeData,\n        this.cellProperties,\n      );\n      this.rowCount = height; // 当前数据纹理有多少行\n\n      this.dataTexture =\n        this.cellLength > 0 && data.length > 0\n          ? this.createTexture2D({\n              flipY: true,\n              data,\n              format: gl.LUMINANCE,\n              type: gl.FLOAT,\n              width,\n              height,\n            })\n          : this.createTexture2D({\n              flipY: true,\n              data: [1],\n              format: gl.LUMINANCE,\n              type: gl.FLOAT,\n              width: 1,\n              height: 1,\n            });\n    }\n\n    if (dashArray.length === 2) {\n      dashArray.push(0, 0);\n    }\n\n    // 转化渐变色\n    let useLinearColor = 0; // 默认不生效\n    let sourceColorArr = [0, 0, 0, 0];\n    let targetColorArr = [0, 0, 0, 0];\n    if (sourceColor && targetColor) {\n      sourceColorArr = rgb2arr(sourceColor);\n      targetColorArr = rgb2arr(targetColor);\n      useLinearColor = 1;\n    }\n\n    if (this.rendererService.getDirty()) {\n      this.texture.bind();\n    }\n\n    return {\n      u_dataTexture: this.dataTexture, // 数据纹理 - 有数据映射的时候纹理中带数据，若没有任何数据映射时纹理是 [1]\n      u_cellTypeLayout: this.getCellTypeLayout(),\n\n      u_thetaOffset: isNumber(thetaOffset) ? thetaOffset : 0.0,\n      u_opacity: isNumber(opacity) ? opacity : 1.0,\n      u_textureBlend: textureBlend === 'normal' ? 0.0 : 1.0,\n      segmentNumber,\n      u_line_type: lineStyleObj[lineType || 'solid'],\n      u_dash_array: dashArray,\n      u_blur: 0.9,\n      u_lineDir: forward ? 1 : -1,\n\n      // 纹理支持参数\n      u_texture: this.texture, // 贴图\n      u_line_texture: lineTexture ? 1.0 : 0.0, // 传入线的标识\n      u_icon_step: iconStep,\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n\n      // 渐变色支持参数\n      u_linearColor: useLinearColor,\n      u_sourceColor: sourceColorArr,\n      u_targetColor: targetColorArr,\n    };\n  }\n\n  public getAnimateUniforms(): IModelUniform {\n    const { animateOption } = this.layer.getLayerConfig() as ILayerConfig;\n    return {\n      u_aimate: this.animateOption2Array(animateOption as IAnimateOption),\n      u_time: this.layer.getLayerAnimateTime(),\n    };\n  }\n\n  public initModels(): IModel[] {\n    this.updateTexture();\n    this.iconService.on('imageUpdate', this.updateTexture);\n\n    return this.buildModels();\n  }\n\n  public clearModels() {\n    this.texture?.destroy();\n    this.dataTexture?.destroy();\n    this.iconService.off('imageUpdate', this.updateTexture);\n  }\n\n  public getShaders(): { frag: string; vert: string; type: string } {\n    const {\n      sourceColor,\n      targetColor,\n      lineType,\n    } = this.layer.getLayerConfig() as ILineLayerStyleOptions;\n    if (lineType === 'dash') {\n      return {\n        frag: arc_dash_frag,\n        vert: arc_dash_vert,\n        type: 'dash',\n      };\n    }\n\n    if (sourceColor && targetColor) {\n      // 分离 linear 功能\n      return {\n        frag: arc_linear_frag,\n        vert: arc_linear_vert,\n        type: 'linear',\n      };\n    } else {\n      return {\n        frag: arc_line_frag,\n        vert: arc_line_vert,\n        type: 'normal',\n      };\n    }\n  }\n\n  public buildModels(): IModel[] {\n    const {\n      segmentNumber = 30,\n      mask = false,\n      maskInside = true,\n    } = this.layer.getLayerConfig() as ILineLayerStyleOptions;\n    const { frag, vert, type } = this.getShaders();\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'arc2dline' + type,\n        vertexShader: vert,\n        fragmentShader: frag,\n        triangulation: LineArcTriangulation,\n        depth: { enable: false },\n        blend: this.getBlend(),\n        segmentNumber,\n        stencil: getMask(mask, maskInside),\n      }),\n    ];\n  }\n\n  protected registerBuiltinAttributes() {\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const { size = 1 } = feature;\n          return Array.isArray(size) ? [size[0]] : [size as number];\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'instance', // 弧线起始点信息\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Instance',\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 4,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[3], vertex[4], vertex[5], vertex[6]];\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_iconMapUV',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const iconMap = this.iconService.getIconMap();\n          const { texture } = feature;\n          const { x, y } = iconMap[texture as string] || { x: 0, y: 0 };\n          return [x, y];\n        },\n      },\n    });\n  }\n\n  private updateTexture = () => {\n    const { createTexture2D } = this.rendererService;\n    if (this.texture) {\n      this.texture.update({\n        data: this.iconService.getCanvas(),\n      });\n      this.layer.render();\n      return;\n    }\n    this.texture = createTexture2D({\n      data: this.iconService.getCanvas(),\n      mag: gl.NEAREST,\n      min: gl.NEAREST,\n      premultiplyAlpha: false,\n      width: 1024,\n      height: this.iconService.canvasHeight || 128,\n    });\n  };\n}\n"],"file":"arc.js"}