{"version":3,"sources":["../../../src/canvas/models/canvas.ts"],"names":["BaseModel","CanvasUpdateType","CanvaModel","ALWAYS","layer","getLayerConfig","zIndex","update","animateOption","enable","duration","canvas","style","updateMode","unBindListener","bindListener","renderCanvas","mapService","off","clearCanvas","on","ctx","rendererService","getViewportSize","w","width","h","height","clearRect","viewWidth","viewHeight","prevSize","size","getSize","drawingOnCanvas","document","removeChild","initCanvas","getContainer","createElement","pointerEvents","position","top","left","appendChild","getContext","initModels"],"mappings":"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","sourcesContent":["import { ILayerConfig, IModelUniform } from '@antv/l7-core';\nimport BaseModel from '../../core/BaseModel';\nimport {\n  CanvasUpdateType,\n  ICanvasLayerStyleOptions,\n  IDrawingOnCanvas,\n} from '../../core/interface';\n\nexport default class CanvaModel extends BaseModel {\n  protected updateMode: CanvasUpdateType = CanvasUpdateType.ALWAYS;\n  protected canvas: HTMLCanvasElement;\n  protected ctx: CanvasRenderingContext2D;\n  protected prevSize: [number, number];\n\n  public renderUpdate = () => {\n    const {\n      zIndex = 10,\n      update = CanvasUpdateType.ALWAYS,\n      animateOption = { enable: false, duration: 20 },\n    } = this.layer.getLayerConfig() as Partial<\n      ICanvasLayerStyleOptions & ILayerConfig\n    >;\n    if (+this.canvas.style.zIndex === zIndex) {\n      this.canvas.style.zIndex = zIndex + '';\n    }\n    if (this.updateMode !== update) {\n      this.updateMode = update as CanvasUpdateType;\n      this.unBindListener();\n      this.bindListener();\n    }\n    if (this.updateMode === CanvasUpdateType.ALWAYS && animateOption.enable) {\n      this.renderCanvas();\n    }\n  };\n\n  public unBindListener = () => {\n    this.mapService.off('mapchange', this.renderCanvas);\n    this.mapService.off('zoomstart', this.clearCanvas);\n    this.mapService.off('zoomend', this.renderCanvas);\n    this.mapService.off('movestart', this.clearCanvas);\n    this.mapService.off('moveend', this.renderCanvas);\n  };\n\n  public bindListener = () => {\n    if (this.updateMode === CanvasUpdateType.ALWAYS) {\n      this.mapService.on('mapchange', this.renderCanvas);\n    } else {\n      this.mapService.on('zoomstart', this.clearCanvas);\n      this.mapService.on('zoomend', this.renderCanvas);\n      this.mapService.on('movestart', this.clearCanvas);\n      this.mapService.on('moveend', this.renderCanvas);\n    }\n  };\n\n  public clearModels(): void {\n    if (this.canvas) {\n      document.removeChild(this.canvas);\n      // @ts-ignore\n      this.canvas = null;\n    }\n    this.unBindListener();\n  }\n\n  public initModels() {\n    const {\n      update = CanvasUpdateType.ALWAYS,\n    } = this.layer.getLayerConfig() as ICanvasLayerStyleOptions;\n    this.updateMode = update as CanvasUpdateType;\n    this.initCanvas();\n\n    this.renderCanvas();\n\n    this.bindListener();\n\n    this.mapService.getContainer();\n    return [];\n  }\n\n  public initCanvas(): void {\n    const { zIndex } = this.layer.getLayerConfig() as ICanvasLayerStyleOptions;\n    const size = this.mapService.getSize();\n    const [width, height] = size;\n    const {\n      width: viewWidth,\n      height: viewHeight,\n    } = this.rendererService.getViewportSize();\n    this.prevSize = [viewWidth, viewHeight];\n\n    const canvas = document.createElement('canvas');\n    this.canvas = canvas;\n    canvas.width = viewWidth;\n    canvas.height = viewHeight;\n    canvas.style.pointerEvents = 'none';\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.zIndex = zIndex + '';\n    this.mapService.getContainer()?.appendChild(canvas);\n\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    this.ctx = ctx;\n  }\n\n  public clearCanvas = () => {\n    if (this.ctx) {\n      const { width: w, height: h } = this.rendererService.getViewportSize();\n      this.ctx.clearRect(0, 0, w, h);\n    }\n  };\n\n  public renderCanvas = () => {\n    const {\n      width: viewWidth,\n      height: viewHeight,\n    } = this.rendererService.getViewportSize();\n    if (this.prevSize[0] !== viewWidth || this.prevSize[1] !== viewHeight) {\n      this.prevSize = [viewWidth, viewHeight];\n      const size = this.mapService.getSize();\n      const [width, height] = size;\n      this.canvas.width = viewWidth;\n      this.canvas.height = viewHeight;\n      this.canvas.style.width = width + 'px';\n      this.canvas.style.height = height + 'px';\n    }\n\n    const {\n      drawingOnCanvas,\n    } = this.layer.getLayerConfig() as ICanvasLayerStyleOptions;\n\n    if (this.ctx) {\n      drawingOnCanvas({\n        canvas: this.canvas,\n        ctx: this.ctx,\n        mapService: this.mapService,\n        size: [viewWidth, viewHeight],\n      });\n    }\n  };\n\n  public buildModels() {\n    return this.initModels();\n  }\n\n  protected registerBuiltinAttributes() {\n    return;\n  }\n}\n"],"file":"canvas.js"}