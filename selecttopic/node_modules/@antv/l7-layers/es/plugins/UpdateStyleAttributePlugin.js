import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";

var _dec, _class;

import { injectable } from 'inversify';
import 'reflect-metadata';
var UpdateStyleAttributePlugin = (_dec = injectable(), _dec(_class = function () {
  function UpdateStyleAttributePlugin() {
    _classCallCheck(this, UpdateStyleAttributePlugin);
  }

  _createClass(UpdateStyleAttributePlugin, [{
    key: "apply",
    value: function apply(layer, _ref) {
      var _this = this;

      var styleAttributeService = _ref.styleAttributeService;
      layer.hooks.init.tap('UpdateStyleAttributePlugin', function () {
        _this.initStyleAttribute(layer, {
          styleAttributeService: styleAttributeService
        });
      });
      layer.hooks.beforeRender.tap('UpdateStyleAttributePlugin', function () {
        if (layer.layerModelNeedUpdate) {
          return;
        }

        _this.updateStyleAtrribute(layer, {
          styleAttributeService: styleAttributeService
        });
      });
    }
  }, {
    key: "updateStyleAtrribute",
    value: function updateStyleAtrribute(layer, _ref2) {
      var styleAttributeService = _ref2.styleAttributeService;
      var attributes = styleAttributeService.getLayerStyleAttributes() || [];
      var filter = styleAttributeService.getLayerStyleAttribute('filter');
      var shape = styleAttributeService.getLayerStyleAttribute('shape');

      if (filter && filter.needRegenerateVertices) {
        layer.layerModelNeedUpdate = true;
        attributes.forEach(function (attr) {
          return attr.needRegenerateVertices = false;
        });
        return;
      }

      attributes.filter(function (attribute) {
        return attribute.needRegenerateVertices;
      }).forEach(function (attribute) {
        styleAttributeService.updateAttributeByFeatureRange(attribute.name, layer.getEncodedData(), attribute.featureRange.startIndex, attribute.featureRange.endIndex);
        attribute.needRegenerateVertices = false;
      });
    }
  }, {
    key: "initStyleAttribute",
    value: function initStyleAttribute(layer, _ref3) {
      var styleAttributeService = _ref3.styleAttributeService;
      var attributes = styleAttributeService.getLayerStyleAttributes() || [];
      attributes.filter(function (attribute) {
        return attribute.needRegenerateVertices;
      }).forEach(function (attribute) {
        styleAttributeService.updateAttributeByFeatureRange(attribute.name, layer.getEncodedData(), attribute.featureRange.startIndex, attribute.featureRange.endIndex);
        attribute.needRegenerateVertices = false;
      });
    }
  }]);

  return UpdateStyleAttributePlugin;
}()) || _class);
export { UpdateStyleAttributePlugin as default };
//# sourceMappingURL=UpdateStyleAttributePlugin.js.map