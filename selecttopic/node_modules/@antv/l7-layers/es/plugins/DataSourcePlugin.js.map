{"version":3,"sources":["../../src/plugins/DataSourcePlugin.ts"],"names":["TYPES","Source","DEFAULT_DATA","DEFAULT_PARSER","injectable","DataSourcePlugin","layer","mapService","getContainer","get","IMapService","hooks","init","tap","source","getSource","sourceOption","data","options","setSource","updateClusterData","beforeRenderData","neeUpdateCluster","dataSourceNeedUpdate","dataState","cluster","clusterOptions","zoom","maxZoom","newZoom","getZoom","Math","abs","clusterZoom","floor"],"mappings":";;;;;;AAAA,SAKEA,KALF,QAMO,eANP;AAOA,OAAOC,MAAP,IAAiBC,YAAjB,EAA+BC,cAA/B,QAAqD,iBAArD;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAO,kBAAP;IAGqBC,gB,WADpBD,UAAU,E;;;;;;;;;WAGT,eAAaE,KAAb,EAA4B;AAAA;;AAC1B,WAAKC,UAAL,GAAkBD,KAAK,CAACE,YAAN,GAAqBC,GAArB,CAAsCT,KAAK,CAACU,WAA5C,CAAlB;AACAJ,MAAAA,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAiBC,GAAjB,CAAqB,kBAArB,EAAyC,YAAM;AAC7C,YAAMC,MAAM,GAAGR,KAAK,CAACS,SAAN,EAAf;;AACA,YAAI,CAACD,MAAL,EAAa;AAEX,qBAA0BR,KAAK,CAACU,YAAN,IAAsB;AAC9CC,YAAAA,IAAI,EAAEf,YADwC;AAE9CgB,YAAAA,OAAO,EAAEf;AAFqC,WAAhD;AAAA,cAAQc,IAAR,QAAQA,IAAR;AAAA,cAAcC,OAAd,QAAcA,OAAd;;AAIAZ,UAAAA,KAAK,CAACa,SAAN,CAAgB,IAAIlB,MAAJ,CAAWgB,IAAX,EAAiBC,OAAjB,CAAhB;AACD;;AAED,QAAA,KAAI,CAACE,iBAAL,CAAuBd,KAAvB;AACD,OAZD;AAeAA,MAAAA,KAAK,CAACK,KAAN,CAAYU,gBAAZ,CAA6BR,GAA7B,CAAiC,kBAAjC,EAAqD,YAAM;AACzD,YAAMS,gBAAgB,GAAG,KAAI,CAACF,iBAAL,CAAuBd,KAAvB,CAAzB;;AACA,YAAMiB,oBAAoB,GAAGjB,KAAK,CAACkB,SAAN,CAAgBD,oBAA7C;AACAjB,QAAAA,KAAK,CAACkB,SAAN,CAAgBD,oBAAhB,GAAuC,KAAvC;AACA,eAAOD,gBAAgB,IAAIC,oBAA3B;AACD,OALD;AAMD;;;WAED,2BAA0BjB,KAA1B,EAAkD;AAChD,UAAMQ,MAAM,GAAGR,KAAK,CAACS,SAAN,EAAf;AACA,UAAMU,OAAO,GAAGX,MAAM,CAACW,OAAvB;AACA,kCAAmCX,MAAM,CAACY,cAA1C;AAAA,yDAAQC,IAAR;AAAA,UAAQA,IAAR,uCAAe,CAAf;AAAA,yDAAkBC,OAAlB;AAAA,UAAkBA,OAAlB,uCAA4B,EAA5B;AACA,UAAMC,OAAO,GAAG,KAAKtB,UAAL,CAAgBuB,OAAhB,KAA4B,CAA5C;AACA,UAAMP,oBAAoB,GAAGjB,KAAK,CAACkB,SAAN,CAAgBD,oBAA7C;;AAEA,UACEE,OAAO,KACNF,oBAAoB,IAAIQ,IAAI,CAACC,GAAL,CAAS1B,KAAK,CAAC2B,WAAN,GAAoBJ,OAA7B,KAAyC,CAD3D,CADT,EAGE;AAEA,YAAIF,IAAI,KAAKI,IAAI,CAACG,KAAL,CAAWL,OAAX,CAAb,EAAkC;AAChCf,UAAAA,MAAM,CAACM,iBAAP,CAAyBW,IAAI,CAACG,KAAL,CAAWL,OAAX,CAAzB;AACD;;AACDvB,QAAAA,KAAK,CAAC2B,WAAN,GAAoBJ,OAApB;AACA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;;;;SA9CkBxB,gB","sourcesContent":["import {\n  ILayer,\n  ILayerPlugin,\n  ILngLat,\n  IMapService,\n  TYPES,\n} from '@antv/l7-core';\nimport Source, { DEFAULT_DATA, DEFAULT_PARSER } from '@antv/l7-source';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\n\n@injectable()\nexport default class DataSourcePlugin implements ILayerPlugin {\n  protected mapService: IMapService;\n  public apply(layer: ILayer) {\n    this.mapService = layer.getContainer().get<IMapService>(TYPES.IMapService);\n    layer.hooks.init.tap('DataSourcePlugin', () => {\n      const source = layer.getSource();\n      if (!source) {\n        // TODO: 允许用户不使用 layer 的 source 方法，在这里传入一个默认的替换的默认数据\n        const { data, options } = layer.sourceOption || {\n          data: DEFAULT_DATA,\n          options: DEFAULT_PARSER,\n        };\n        layer.setSource(new Source(data, options));\n      }\n\n      this.updateClusterData(layer);\n    });\n\n    // 检测数据是否需要更新\n    layer.hooks.beforeRenderData.tap('DataSourcePlugin', () => {\n      const neeUpdateCluster = this.updateClusterData(layer);\n      const dataSourceNeedUpdate = layer.dataState.dataSourceNeedUpdate;\n      layer.dataState.dataSourceNeedUpdate = false;\n      return neeUpdateCluster || dataSourceNeedUpdate;\n    });\n  }\n\n  private updateClusterData(layer: ILayer): boolean {\n    const source = layer.getSource();\n    const cluster = source.cluster;\n    const { zoom = 0, maxZoom = 16 } = source.clusterOptions;\n    const newZoom = this.mapService.getZoom() - 1;\n    const dataSourceNeedUpdate = layer.dataState.dataSourceNeedUpdate;\n    // 如果 dataSource 有更新，跳过 zoom 的判断，直接更新一次\n    if (\n      cluster &&\n      (dataSourceNeedUpdate || Math.abs(layer.clusterZoom - newZoom) >= 1)\n    ) {\n      // TODO 判断数据是否更新\n      if (zoom !== Math.floor(newZoom)) {\n        source.updateClusterData(Math.floor(newZoom));\n      }\n      layer.clusterZoom = newZoom;\n      return true;\n    }\n    return false;\n  }\n}\n"],"file":"DataSourcePlugin.js"}