import { IModelUniform, ITexture2D } from '@antv/l7-core';
import BaseModel from '../../core/BaseModel';
export default class PlaneModel extends BaseModel {
    protected texture: ITexture2D;
    protected mapTexture: string | undefined;
    protected positions: number[];
    protected indices: number[];
    initPlane(width?: number, height?: number, widthSegments?: number, heightSegments?: number, lng?: number, lat?: number): {
        indices: number[];
        positions: number[];
    };
    planeGeometryTriangulation: () => {
        vertices: number[];
        indices: number[];
        size: number;
    };
    planeGeometryUpdateTriangulation: () => {
        vertices: number[];
        indices: number[];
        size: number;
    };
    getUninforms(): IModelUniform;
    clearModels(): void;
    initModels(): import("@antv/l7-core").IModel[];
    getImageData(img: HTMLImageElement): ImageData;
    /**
     * load terrain texture & offset attribute z
     */
    loadTerrainTexture(): void;
    buildModels(): import("@antv/l7-core").IModel[];
    updateTexture(mapTexture: string | undefined): void;
    protected getConfigSchema(): {
        properties: {
            opacity: {
                type: string;
                minimum: number;
                maximum: number;
            };
        };
    };
    protected registerBuiltinAttributes(): void;
}
