{"version":3,"sources":["../../src/core/interface.ts"],"names":["lineStyleType","CanvasUpdateType"],"mappings":"AAIA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;GAAAA,a,KAAAA,a;;AAsHZ,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,KAAAA,gB","sourcesContent":["import { IMapService } from '@antv/l7-core';\nimport { IColorRamp } from '@antv/l7-utils';\nimport { styleOffset, styleSingle } from '../core/BaseModel';\nimport { anchorType } from '../utils/symbol-layout';\nexport enum lineStyleType {\n  'solid' = 0.0,\n  'dash' = 1.0,\n}\n\nexport interface ILineLayerStyleOptions {\n  opacity: styleSingle;\n  lineType?: keyof typeof lineStyleType; // 可选参数、线类型(all - dash/solid)\n  dashArray?: [number, number]; //  可选参数、虚线间隔\n  segmentNumber?: number;\n\n  forward?: boolean; // 可选参数、是否反向(arcLine)\n  lineTexture?: boolean; // 可选参数、是否开启纹理贴图功能(all)\n  iconStep?: number; // 可选参数、纹理贴图步长(all)\n  iconStepCount?: number; // 可选参数、纹理贴图间隔\n  textureBlend?: string; // 可选参数、供给纹理贴图使用(all)\n  sourceColor?: string; // 可选参数、设置渐变色的起始颜色(all)\n  targetColor?: string; // 可选参数、设置渐变色的终点颜色(all)\n  thetaOffset?: number; // 可选参数、设置弧线的偏移量\n\n  globalArcHeight?: number; // 可选参数、地球模式下 3D 弧线的高度\n  vertexHeightScale?: number; // 可选参数、lineLayer vertex height scale\n\n  borderWidth?: number; // 可选参数 线边框宽度\n  borderColor?: string; // 可选参数 线边框颜色\n\n  heightfixed?: boolean; // 可选参数 高度是否固定\n\n  mask?: boolean; // 可选参数 时候允许蒙层\n  maskInside?: boolean; // 可选参数 控制图层是否显示在蒙层的内部\n}\n\nexport interface IPointLayerStyleOptions {\n  opacity: number;\n  strokeOpacity: number;\n  strokeWidth: number;\n  stroke: string;\n\n  textOffset?: [number, number];\n  textAnchor?: anchorType;\n  spacing?: number;\n  padding?: [number, number];\n  halo?: number;\n  gamma?: number;\n  fontWeight?: string;\n  fontFamily?: string;\n  textAllowOverlap?: boolean;\n\n  // cylinder\n  pickLight?: boolean;\n  depth?: boolean;\n  sourceColor?: string; // 可选参数、设置渐变色的起始颜色(all)\n  targetColor?: string; // 可选参数、设置渐变色的终点颜色(all)\n  opacityLinear?: {\n    enable: boolean;\n    dir: string;\n  };\n  lightEnable: boolean;\n  heightfixed?: boolean; // 圆柱体高度是否固定（不随 zoom 发生变化）\n\n  offsets?: styleOffset;\n  blend?: string;\n  unit?: string;\n  mask?: boolean;\n  maskInside?: boolean;\n\n  rotation?: number; // angle\n  speed?: number;\n}\n\nexport interface IPolygonLayerStyleOptions {\n  opacity: styleSingle;\n\n  opacityLinear: {\n    enable: boolean;\n    dir: string;\n  };\n\n  heightfixed?: boolean; // 挤出几何体高度是否固定（不随 zoom 发生变化）\n\n  pickLight: boolean;\n  mask?: boolean;\n  maskInside?: boolean;\n\n  // water\n  waterTexture?: string;\n  speed?: number;\n  // ocean\n  watercolor?: string;\n  watercolor2?: string;\n}\n\nexport interface IImageLayerStyleOptions {\n  opacity: number;\n  mask?: boolean;\n  maskInside?: boolean;\n}\n\nexport interface IGeometryLayerStyleOptions {\n  opacity: number;\n  mask?: boolean;\n  maskInside?: boolean;\n\n  mapTexture?: string;\n  terrainTexture?: string;\n\n  // planeGeometry\n  center?: [number, number];\n  width?: number;\n  height?: number;\n\n  widthSegments?: number;\n  heightSegments?: number;\n\n  terrainClipHeight?: number;\n  rgb2height?: (r: number, g: number, b: number) => number;\n}\n\nexport enum CanvasUpdateType {\n  'ALWAYS' = 'always',\n  'DRAGEND' = 'dragend',\n}\n\nexport interface IDrawingOnCanvas {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  mapService: IMapService;\n  size: [number, number];\n}\nexport interface ICanvasLayerStyleOptions {\n  zIndex: number;\n  update: CanvasUpdateType | string;\n  drawingOnCanvas: (option: IDrawingOnCanvas) => void;\n}\n\nexport interface IHeatMapLayerStyleOptions {\n  opacity: number;\n  intensity: number;\n  radius: number;\n  angle: number;\n  rampColors: IColorRamp;\n  mask?: boolean;\n  maskInside?: boolean;\n\n  coverage?: number;\n}\n\nexport interface IRasterLayerStyleOptions {\n  opacity: number;\n  domain: [number, number];\n  noDataValue: number;\n  clampLow: boolean;\n  clampHigh: boolean;\n  rampColors: IColorRamp;\n  mask?: boolean;\n  maskInside?: boolean;\n}\n"],"file":"interface.js"}