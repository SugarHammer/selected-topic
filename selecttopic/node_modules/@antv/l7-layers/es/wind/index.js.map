{"version":3,"sources":["../../src/wind/index.ts"],"names":["BaseLayer","WindModels","WindLayer","modelType","getModelType","layerModel","models","initModels","buildModels","render","properties","opacity","type","minimum","maximum","defaultConfig","wind"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAA0C,UAA1C;;IAiBqBC,S;;;;;;;;;;;;;;;;2DACG,W;;;;;;;WACtB,uBAAqB;AACnB,UAAMC,SAAS,GAAG,KAAKC,YAAL,EAAlB;AACA,WAAKC,UAAL,GAAkB,IAAIJ,UAAU,CAACE,SAAD,CAAd,CAA0B,IAA1B,CAAlB;AACA,WAAKG,MAAL,GAAc,KAAKD,UAAL,CAAgBE,UAAhB,EAAd;AACD;;;WACD,yBAAuB;AACrB,WAAKD,MAAL,GAAc,KAAKD,UAAL,CAAgBG,WAAhB,EAAd;AACD;;;WAED,wBAAsB;AACpB,UAAI,KAAKH,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBI,MAAhB;AACD;;AAED,aAAO,IAAP;AACD;;;WACD,2BAA4B;AAC1B,aAAO;AACLC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE,QADC;AAEPC,YAAAA,OAAO,EAAE,CAFF;AAGPC,YAAAA,OAAO,EAAE;AAHF;AADC;AADP,OAAP;AASD;;;WACD,4BAA6B;AAC3B,UAAMF,IAAI,GAAG,KAAKR,YAAL,EAAb;AACA,UAAMW,aAAa,GAAG;AACpBC,QAAAA,IAAI,EAAE;AADc,OAAtB;AAGA,aAAOD,aAAa,CAACH,IAAD,CAApB;AACD;;;WAED,wBAAwC;AACtC,aAAO,MAAP;AACD;;;;EAvCoCZ,S;;SAAlBE,S","sourcesContent":["import BaseLayer from '../core/BaseLayer';\nimport WindModels, { WindModelType } from './models';\ninterface IWindLayerStyleOptions {\n  uMin?: number;\n  uMax?: number;\n  vMin?: number;\n  vMax?: number;\n  fadeOpacity?: number;\n  speedFactor?: number;\n  dropRate?: number;\n  dropRateBump?: number;\n  opacity?: number;\n  numParticles?: number;\n  rampColors?: {\n    [key: number]: string;\n  };\n  sizeScale?: number;\n}\nexport default class WindLayer extends BaseLayer<IWindLayerStyleOptions> {\n  public type: string = 'WindLayer';\n  public buildModels() {\n    const modelType = this.getModelType();\n    this.layerModel = new WindModels[modelType](this);\n    this.models = this.layerModel.initModels();\n  }\n  public rebuildModels() {\n    this.models = this.layerModel.buildModels();\n  }\n\n  public renderModels() {\n    if (this.layerModel) {\n      this.layerModel.render(); // 独立的渲染流程\n    }\n\n    return this;\n  }\n  protected getConfigSchema() {\n    return {\n      properties: {\n        opacity: {\n          type: 'number',\n          minimum: 0,\n          maximum: 1,\n        },\n      },\n    };\n  }\n  protected getDefaultConfig() {\n    const type = this.getModelType();\n    const defaultConfig = {\n      wind: {},\n    };\n    return defaultConfig[type];\n  }\n\n  protected getModelType(): WindModelType {\n    return 'wind';\n  }\n}\n"],"file":"index.js"}