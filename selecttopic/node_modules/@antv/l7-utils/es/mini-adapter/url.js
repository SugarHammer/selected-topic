import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { btoa } from './atob';
export var URL = function () {
  function URL(url) {
    var host = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

    _classCallCheck(this, URL);

    _defineProperty(this, "href", void 0);

    if (url.indexOf('http://') == 0 || url.indexOf('https://') == 0) {
      this.href = url;
      return;
    }

    this.href = host + url;
  }

  _createClass(URL, null, [{
    key: "createObjectURL",
    value: function createObjectURL(blob) {
      var buffer = blob.buffers[0];
      var type = blob.type;

      var base64 = _arrayBufferToBase64(buffer);

      var prefix = "data:".concat(type, ";base64, ");
      return prefix + base64;
    }
  }]);

  return URL;
}();

function _arrayBufferToBase64(buffer) {
  var binary = '';
  var bytes = new Uint8Array(buffer);
  var len = bytes.byteLength;

  for (var i = 0; i < len; i++) {
    binary += String.fromCharCode(bytes[i]);
  }

  return btoa(binary);
}
//# sourceMappingURL=url.js.map