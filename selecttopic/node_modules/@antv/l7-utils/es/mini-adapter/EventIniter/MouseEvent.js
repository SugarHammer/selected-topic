import _createClass from "@babel/runtime/helpers/createClass";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import { $document } from '../document';
import { Event } from '../Event';

var MouseEvent = function (_Event) {
  _inherits(MouseEvent, _Event);

  var _super = _createSuper(MouseEvent);

  function MouseEvent(type) {
    _classCallCheck(this, MouseEvent);

    return _super.call(this, type);
  }

  return _createClass(MouseEvent);
}(Event);

function eventHandlerFactory(type) {
  return function (rawEvent) {
    rawEvent.type = type;
    $document.dispatchEvent(rawEvent);
  };
}

var dispatchMouseDown = eventHandlerFactory('mousedown');
var dispatchMouseMove = eventHandlerFactory('mousemove');
var dispatchMouseUp = eventHandlerFactory('mouseup');
export { dispatchMouseDown, dispatchMouseMove, dispatchMouseUp };
//# sourceMappingURL=MouseEvent.js.map