{"version":3,"sources":["../../src/mini-adapter/url.ts"],"names":["btoa","URL","url","host","indexOf","href","blob","buffer","buffers","type","base64","_arrayBufferToBase64","prefix","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode"],"mappings":";;;AAEA,SAASA,IAAT,QAAqB,QAArB;AAGA,WAAaC,GAAb;AAgBE,eAAYC,GAAZ,EAA4B;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AAAA;;AAC1B,QAAID,GAAG,CAACE,OAAJ,CAAY,SAAZ,KAA0B,CAA1B,IAA+BF,GAAG,CAACE,OAAJ,CAAY,UAAZ,KAA2B,CAA9D,EAAiE;AAC/D,WAAKC,IAAL,GAAYH,GAAZ;AACA;AACD;;AACD,SAAKG,IAAL,GAAYF,IAAI,GAAGD,GAAnB;AACD;;AAtBH;AAAA;AAAA,WAKE,yBAA8BI,IAA9B,EAA0C;AACxC,UAAMC,MAAM,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,CAAf;AACA,UAAMC,IAAI,GAAGH,IAAI,CAACG,IAAlB;;AACA,UAAMC,MAAM,GAAGC,oBAAoB,CAACJ,MAAD,CAAnC;;AACA,UAAMK,MAAM,kBAAWH,IAAX,cAAZ;AACA,aAAOG,MAAM,GAAGF,MAAhB;AACD;AAXH;;AAAA;AAAA;;AAyBA,SAASC,oBAAT,CAA8BJ,MAA9B,EAAsC;AACpC,MAAIM,MAAM,GAAG,EAAb;AACA,MAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAeR,MAAf,CAAd;AACA,MAAMS,GAAG,GAAGF,KAAK,CAACG,UAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5BL,IAAAA,MAAM,IAAIM,MAAM,CAACC,YAAP,CAAoBN,KAAK,CAACI,CAAD,CAAzB,CAAV;AACD;;AACD,SAAOlB,IAAI,CAACa,MAAD,CAAX;AACD","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { btoa } from './atob';\nimport { Blob } from './blob';\n\nexport class URL {\n  /**\n   * fake createObject, use base64 instead\n   * @param blob\n   */\n  public static createObjectURL(blob: Blob) {\n    const buffer = blob.buffers[0];\n    const type = blob.type;\n    const base64 = _arrayBufferToBase64(buffer);\n    const prefix = `data:${type};base64, `;\n    return prefix + base64;\n  }\n\n  public href: string;\n\n  // todo: 完善URL对象\n  constructor(url, host = '') {\n    if (url.indexOf('http://') == 0 || url.indexOf('https://') == 0) {\n      this.href = url;\n      return;\n    }\n    this.href = host + url;\n  }\n}\n\nfunction _arrayBufferToBase64(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n"],"file":"url.js"}