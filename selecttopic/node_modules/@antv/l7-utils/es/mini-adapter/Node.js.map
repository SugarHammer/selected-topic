{"version":3,"sources":["../../src/mini-adapter/Node.ts"],"names":["EventTarget","Node","childNodes","node","push","copyNode","Object","create","assign","index","findIndex","child","splice"],"mappings":";;;;;;;;;;;;AAEA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,WAAaC,IAAb;AAAA;;AAAA;;AAGE,kBAAc;AAAA;;AAAA;;AACZ;;AADY;;AAEZ,UAAKC,UAAL,GAAkB,EAAlB;AAFY;AAGb;;AANH;AAAA;AAAA,WAQE,qBAAmBC,IAAnB,EAAyB;AACvB,WAAKD,UAAL,CAAgBE,IAAhB,CAAqBD,IAArB;AAMD;AAfH;AAAA;AAAA,WAiBE,qBAAmB;AACjB,UAAME,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjB;AAEAD,MAAAA,MAAM,CAACE,MAAP,CAAcH,QAAd,EAAwB,IAAxB;AACA,aAAOA,QAAP;AACD;AAtBH;AAAA;AAAA,WAwBE,qBAAmBF,IAAnB,EAAyB;AACvB,UAAMM,KAAK,GAAG,KAAKP,UAAL,CAAgBQ,SAAhB,CAA0B,UAACC,KAAD;AAAA,eAAWA,KAAK,KAAKR,IAArB;AAAA,OAA1B,CAAd;;AAEA,UAAIM,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,eAAO,KAAKP,UAAL,CAAgBU,MAAhB,CAAuBH,KAAvB,EAA8B,CAA9B,CAAP;AACD;;AACD,aAAO,IAAP;AACD;AA/BH;;AAAA;AAAA,EAA0BT,WAA1B","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport EventTarget from './EventTarget';\n\nexport class Node extends EventTarget {\n  public childNodes: any[];\n\n  constructor() {\n    super();\n    this.childNodes = [];\n  }\n\n  public appendChild(node) {\n    this.childNodes.push(node);\n    // if (node instanceof Node) {\n    //   this.childNodes.push(node)\n    // } else {\n    //   throw new TypeError('Failed to executed \\'appendChild\\' on \\'Node\\': parameter 1 is not of type \\'Node\\'.')\n    // }\n  }\n\n  public cloneNode() {\n    const copyNode = Object.create(this);\n\n    Object.assign(copyNode, this);\n    return copyNode;\n  }\n\n  public removeChild(node) {\n    const index = this.childNodes.findIndex((child) => child === node);\n\n    if (index > -1) {\n      return this.childNodes.splice(index, 1);\n    }\n    return null;\n  }\n}\n"],"file":"Node.js"}