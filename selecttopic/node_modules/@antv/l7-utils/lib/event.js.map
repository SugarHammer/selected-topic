{"version":3,"sources":["../src/event.ts"],"names":["bindAll","fns","context","forEach","fn","bind","FrequencyController","duration","Date","getTime","callback","currentTime","timeCut","timestamp"],"mappings":";;;;;;;;;;;;;;;;AAAO,SAASA,OAAT,CAAiBC,GAAjB,EAAgCC,OAAhC,EAA8C;AACnDD,EAAAA,GAAG,CAACE,OAAJ,CAAY,UAACC,EAAD,EAAQ;AAClB,QAAI,CAACF,OAAO,CAACE,EAAD,CAAZ,EAAkB;AAChB;AACD;;AACDF,IAAAA,OAAO,CAACE,EAAD,CAAP,GAAcF,OAAO,CAACE,EAAD,CAAP,CAAYC,IAAZ,CAAiBH,OAAjB,CAAd;AACD,GALD;AAMD;;IAGYI,mB;AAGX,iCAAmC;AAAA,QAAvBC,QAAuB,uEAAJ,EAAI;AAAA;AAAA,oDAFR,EAEQ;AAAA,qDADP,IAAIC,IAAJ,GAAWC,OAAX,EACO;AACjC,SAAKF,QAAL,GAAgBA,QAAhB;AACD;;;;WACD,aAAWG,QAAX,EAAgC;AAC9B,UAAMC,WAAW,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAApB;AACA,UAAMG,OAAO,GAAGD,WAAW,GAAG,KAAKE,SAAnC;AACA,WAAKA,SAAL,GAAiBF,WAAjB;;AAEA,UAAIC,OAAO,IAAI,KAAKL,QAApB,EAA8B;AAC5BG,QAAAA,QAAQ;AACT;AACF","sourcesContent":["export function bindAll(fns: string[], context: any) {\n  fns.forEach((fn) => {\n    if (!context[fn]) {\n      return;\n    }\n    context[fn] = context[fn].bind(context);\n  });\n}\n\n// 频率控制器\nexport class FrequencyController {\n  private duration: number = 16;\n  private timestamp: number = new Date().getTime();\n  constructor(duration: number = 16) {\n    this.duration = duration;\n  }\n  public run(callback: () => any) {\n    const currentTime = new Date().getTime();\n    const timeCut = currentTime - this.timestamp;\n    this.timestamp = currentTime;\n\n    if (timeCut >= this.duration) {\n      callback();\n    }\n  }\n}\n"],"file":"event.js"}