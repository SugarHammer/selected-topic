"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  isMiniAli: true,
  isWeChatMiniProgram: true,
  isMini: true,
  miniWindow: true,
  $window: true,
  $XMLHttpRequest: true,
  $location: true
};
exports.miniWindow = exports.isWeChatMiniProgram = exports.isMiniAli = exports.isMini = exports.$window = exports.$location = exports.$XMLHttpRequest = void 0;

var _atob = require("./atob");

var _blob = require("./blob");

var _devicePixelRatio = _interopRequireDefault(require("./devicePixelRatio"));

var _document = require("./document");

var _Element = require("./Element");

var _Event = require("./Event");

var _EventTarget = _interopRequireDefault(require("./EventTarget"));

var _HTMLCanvasElement = require("./HTMLCanvasElement");

var _HTMLElement = require("./HTMLElement");

var _HTMLMediaElement = require("./HTMLMediaElement");

var _HTMLVideoElement = require("./HTMLVideoElement");

var _Image = require("./Image");

var _ImageData = require("./ImageData");

var _location = require("./location");

var _navigator = require("./navigator");

var _Node = require("./Node");

var _performance = require("./performance");

var _requestAnimationFrame = require("./requestAnimationFrame");

var _screen = require("./screen");

var _url = require("./url");

var _WebGL = require("./WebGL");

var _WebGL2 = require("./WebGL2");

var _XMLHttpRequest = require("./XMLHttpRequest");

var _global = require("./global");

var _index = require("./EventIniter/index");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _index[key];
    }
  });
});
var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function' && my.isFRM !== true;
exports.isMiniAli = isMiniAli;
var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');
exports.isWeChatMiniProgram = isWeChatMiniProgram;
var isMini = isMiniAli || isWeChatMiniProgram;
exports.isMini = isMini;
var miniWindow = {
  atob: _atob.atob,
  btoa: _atob.btoa,
  devicePixelRatio: _devicePixelRatio.default,
  Blob: _blob.Blob,
  document: _document.$document,
  Element: _Element.Element,
  Event: _Event.Event,
  EventTarget: _EventTarget.default,
  HTMLCanvasElement: _HTMLCanvasElement.HTMLCanvasElement,
  HTMLElement: _HTMLElement.HTMLElement,
  HTMLMediaElement: _HTMLMediaElement.HTMLMediaElement,
  HTMLVideoElement: _HTMLVideoElement.HTMLVideoElement,
  Image: _Image.Image,
  ImageData: _ImageData.ImageData,
  navigator: _navigator.navigator,
  Node: _Node.Node,
  requestAnimationFrame: _requestAnimationFrame.requestAnimationFrame,
  cancelAnimationFrame: _requestAnimationFrame.cancelAnimationFrame,
  screen: _screen.screen,
  XMLHttpRequest: _XMLHttpRequest.$XMLHttpRequest,
  performance: _performance.performance,
  URL: _url.URL,
  WebGLRenderingContext: _WebGL.WebGLRenderingContext,
  WebGL2RenderingContext: _WebGL2.WebGL2RenderingContext,
  addEventListener: function addEventListener(type, listener) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    _document.$document.addEventListener(type, listener, options);
  },
  removeEventListener: function removeEventListener(type, listener, options) {
    _document.$document.removeEventListener(type, listener);
  },
  dispatchEvent: function dispatchEvent(event) {
    _document.$document.dispatchEvent(event);
  },
  innerWidth: _screen.screen.availWidth,
  innerHeight: _screen.screen.availHeight,
  setTimeout: setTimeout,
  clearTimeout: clearTimeout,
  setInterval: setInterval,
  clearInterval: clearInterval
};
exports.miniWindow = miniWindow;
var $window = isMini ? miniWindow : _global.globalWindow;
exports.$window = $window;
var $XMLHttpRequest = isMini ? _XMLHttpRequest.$XMLHttpRequest : _global.globalWindow.XMLHttpRequest;
exports.$XMLHttpRequest = $XMLHttpRequest;
var $location = isMini ? _location.$location : _global.globalWindow.location;
exports.$location = $location;
//# sourceMappingURL=index.js.map