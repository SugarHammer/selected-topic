"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Image = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _register = require("./register");

var Mixin = _interopRequireWildcard(require("./util/mixin"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Image = (0, _createClass2.default)(function Image() {
  (0, _classCallCheck2.default)(this, Image);
  var canvas = (0, _register.getCanvas)();
  var image = canvas.createImage && canvas.createImage() || {};

  if (!('tagName' in image)) {
    image.tagName = 'IMG';
    image.__proto__ = Image.prototype;
  }

  Mixin.parentNode(image);
  Mixin.classList(image);
  Object.assign(image, {
    addEventListener: function addEventListener(name, cb) {
      image["on".concat(name)] = cb.bind(image);
    },
    removeEventListener: function removeEventListener(name) {
      image["on".concat(name)] = null;
    }
  });
  return image;
});
exports.Image = Image;
//# sourceMappingURL=Image.js.map