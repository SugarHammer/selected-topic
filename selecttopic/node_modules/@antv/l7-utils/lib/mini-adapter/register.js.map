{"version":3,"sources":["../../src/mini-adapter/register.ts"],"names":["canvas","canvas2D","registerCanvas","c","id","tagName","type","Mixin","parentNode","style","classList","clientRegion","offsetRegion","focus","blur","registerCanvas2D","ctx","width","height","clientWidth","devicePixelRatio","clientHeight","getContext","getCanvas","getCanvas2D"],"mappings":";;;;;;;;;;;;;;AAEA;;AACA;;;;;;AAKA,IAAIA,MAAW,GAAG,EAAlB;AACA,IAAIC,QAAa,GAAG,EAApB;;AAGA,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,EAA3B,EAAuC;AACrCJ,EAAAA,MAAM,GAAGG,CAAT;AACAH,EAAAA,MAAM,CAACI,EAAP,GAAYA,EAAZ;;AAEA,MAAI,EAAE,aAAaJ,MAAf,CAAJ,EAA4B;AAC1BA,IAAAA,MAAM,CAACK,OAAP,GAAiB,QAAjB;AACD;;AAEDL,EAAAA,MAAM,CAACM,IAAP,GAAc,QAAd;AAEAC,EAAAA,KAAK,CAACC,UAAN,CAAiBR,MAAjB;AACAO,EAAAA,KAAK,CAACE,KAAN,CAAYT,MAAZ;AACAO,EAAAA,KAAK,CAACG,SAAN,CAAgBV,MAAhB;AACAO,EAAAA,KAAK,CAACI,YAAN,CAAmBX,MAAnB;AACAO,EAAAA,KAAK,CAACK,YAAN,CAAmBZ,MAAnB;;AAEAA,EAAAA,MAAM,CAACa,KAAP,GAAe,YAAW,CAAE,CAA5B;;AACAb,EAAAA,MAAM,CAACc,IAAP,GAAc,YAAW,CAAE,CAA3B;AAaD;;AAGD,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BZ,EAA/B,EAA2C;AACzC,MAAMa,KAAK,GAAG,IAAd;AACA,MAAMC,MAAM,GAAG,IAAf;AACAjB,EAAAA,QAAQ,GAAG;AACTgB,IAAAA,KAAK,EAALA,KADS;AAETC,IAAAA,MAAM,EAANA,MAFS;AAGTC,IAAAA,WAAW,EAAEF,KAAK,GAAGG,yBAHZ;AAITC,IAAAA,YAAY,EAAEH,MAAM,GAAGE,yBAJd;AAKThB,IAAAA,EAAE,EAAFA,EALS;AAMTE,IAAAA,IAAI,EAAE;AANG,GAAX;;AASA,MAAI,EAAE,aAAaL,QAAf,CAAJ,EAA8B;AAC5BA,IAAAA,QAAQ,CAACI,OAAT,GAAmB,QAAnB;AACD;;AAEDE,EAAAA,KAAK,CAACC,UAAN,CAAiBP,QAAjB;AACAM,EAAAA,KAAK,CAACE,KAAN,CAAYR,QAAZ;AACAM,EAAAA,KAAK,CAACG,SAAN,CAAgBT,QAAhB;AACAM,EAAAA,KAAK,CAACI,YAAN,CAAmBV,QAAnB;AACAM,EAAAA,KAAK,CAACK,YAAN,CAAmBX,QAAnB;;AAEAA,EAAAA,QAAQ,CAACqB,UAAT,GAAsB,UAAShB,IAAT,EAAe;AACnC,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAOU,GAAP;AACD;AACF,GAJD;;AAKAf,EAAAA,QAAQ,CAACY,KAAT,GAAiB,YAAW,CAAE,CAA9B;;AACAZ,EAAAA,QAAQ,CAACa,IAAT,GAAgB,YAAW,CAAE,CAA7B;AAaD;;AAGD,SAASS,SAAT,GAAqB;AACnB,SAAOvB,MAAP;AACD;;AAGD,SAASwB,WAAT,GAAuB;AACrB,SAAOvB,QAAP;AACD","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport devicePixelRatio from './devicePixelRatio';\nimport * as Mixin from './util/mixin';\n\ndeclare let my: any;\n\n// 同步和异步都需要的数据\nlet canvas: any = {};\nlet canvas2D: any = {};\n\n// 异步注册3Dcanvas\nfunction registerCanvas(c, id: string) {\n  canvas = c;\n  canvas.id = id;\n\n  if (!('tagName' in canvas)) {\n    canvas.tagName = 'CANVAS';\n  }\n\n  canvas.type = 'canvas';\n\n  Mixin.parentNode(canvas);\n  Mixin.style(canvas);\n  Mixin.classList(canvas);\n  Mixin.clientRegion(canvas);\n  Mixin.offsetRegion(canvas);\n\n  canvas.focus = function() {};\n  canvas.blur = function() {};\n  // Tip: 小程序中无法动态注册事件\n  // canvas.addEventListener = function(type, listener, options = {}) {\n  //   document.addEventListener(type, listener, options);\n  // };\n\n  // canvas.removeEventListener = function(type, listener) {\n  //   document.removeEventListener(type, listener);\n  // };\n\n  // canvas.dispatchEvent = function(event: any) {\n  //   document.dispatchEvent(event);\n  // };\n}\n\n// 异步注册2Dcanvas\nfunction registerCanvas2D(ctx, id: string) {\n  const width = 1024;\n  const height = 1024;\n  canvas2D = {\n    width,\n    height,\n    clientWidth: width / devicePixelRatio,\n    clientHeight: height / devicePixelRatio,\n    id,\n    type: 'canvas',\n  };\n\n  if (!('tagName' in canvas2D)) {\n    canvas2D.tagName = 'CANVAS';\n  }\n\n  Mixin.parentNode(canvas2D);\n  Mixin.style(canvas2D);\n  Mixin.classList(canvas2D);\n  Mixin.clientRegion(canvas2D);\n  Mixin.offsetRegion(canvas2D);\n\n  canvas2D.getContext = function(type) {\n    if (type === '2d') {\n      return ctx;\n    }\n  };\n  canvas2D.focus = function() {};\n  canvas2D.blur = function() {};\n  // Tip: 小程序中无法动态注册事件\n  // canvas2D.addEventListener = function(type, listener, options = {}) {\n  //   document.addEventListener(type, listener, options);\n  // };\n\n  // canvas2D.removeEventListener = function(type, listener) {\n  //   document.removeEventListener(type, listener);\n  // };\n\n  // canvas2D.dispatchEvent = function(event: any) {\n  //   document.dispatchEvent(event);\n  // };\n}\n\n// 异步获取3Dcanvas\nfunction getCanvas() {\n  return canvas;\n}\n\n// 异步获取2Dcanvas\nfunction getCanvas2D() {\n  return canvas2D;\n}\n\nexport { registerCanvas, registerCanvas2D, getCanvas, getCanvas2D };\n"],"file":"register.js"}