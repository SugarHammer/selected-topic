{"version":3,"sources":["../../src/mini-adapter/Element.ts"],"names":["Element","className","children","name","value","Node"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;IAEaA,O;;;;;AAIX,qBAAc;AAAA;;AAAA;AACZ;AADY;AAAA;AAGZ,UAAKC,SAAL,GAAiB,EAAjB;AACA,UAAKC,QAAL,GAAgB,EAAhB;AAJY;AAKb;;;;WAED,sBAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;AAC/B,WAAKD,IAAL,IAAaC,KAAb;AACD;;;WAED,sBAAoBD,IAApB,EAA0B;AACxB,aAAO,KAAKA,IAAL,CAAP;AACD;;;WAED,wBAAsBA,IAAtB,EAA4BC,KAA5B,EAAmC;AACjC,WAAKD,IAAL,IAAaC,KAAb;AACD;;;WAED,wBAAsBD,IAAtB,EAA4B;AAC1B,aAAO,KAAKA,IAAL,CAAP;AACD;;;EAzB0BE,W","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { Node } from './Node';\n\nexport class Element extends Node {\n  public className: string;\n  public children: any[];\n\n  constructor() {\n    super();\n\n    this.className = '';\n    this.children = [];\n  }\n\n  public setAttribute(name, value) {\n    this[name] = value;\n  }\n\n  public getAttribute(name) {\n    return this[name];\n  }\n\n  public setAttributeNS(name, value) {\n    this[name] = value;\n  }\n\n  public getAttributeNS(name) {\n    return this[name];\n  }\n}\n"],"file":"Element.js"}