{"version":3,"sources":["../../src/mini-adapter/EventTarget.ts"],"names":["_events","WeakMap","EventTarget","set","type","listener","options","events","get","push","capture","once","passive","listeners","length","i","splice","event"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA,IAAMA,OAAO,GAAG,IAAIC,OAAJ,EAAhB;;IAEqBC,W;AACnB,yBAAc;AAAA;;AACZF,IAAAA,OAAO,CAACG,GAAR,CAAY,IAAZ,EAAkB,EAAlB;AACD;;;;WAED,0BAAwBC,IAAxB,EAA8BC,QAA9B,EAA2D;AAAA,UAAnBC,OAAmB,uEAAJ,EAAI;;AACzD,UAAIC,MAAM,GAAGP,OAAO,CAACQ,GAAR,CAAY,IAAZ,CAAb;;AAEA,UAAI,CAACD,MAAL,EAAa;AACXA,QAAAA,MAAM,GAAG,EAAT;AACD;;AACD,UAAI,CAACA,MAAM,CAACH,IAAD,CAAX,EAAmB;AACjBG,QAAAA,MAAM,CAACH,IAAD,CAAN,GAAe,EAAf;AACD;;AACDG,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaK,IAAb,CAAkBJ,QAAlB;;AACAL,MAAAA,OAAO,CAACG,GAAR,CAAY,IAAZ,EAAkBI,MAAlB;;AAEA,UAAID,OAAO,CAACI,OAAZ,EAAqB,CAEpB;;AACD,UAAIJ,OAAO,CAACK,IAAZ,EAAkB,CAEjB;;AACD,UAAIL,OAAO,CAACM,OAAZ,EAAqB,CAEpB;AACF;;;WAED,6BAA2BR,IAA3B,EAAiCC,QAAjC,EAAyD;AAAA,UAAdC,OAAc,uEAAJ,EAAI;;AACvD,UAAMC,MAAM,GAAGP,OAAO,CAACQ,GAAR,CAAY,IAAZ,CAAf;;AAEA,UAAID,MAAJ,EAAY;AACV,YAAMM,SAAS,GAAGN,MAAM,CAACH,IAAD,CAAxB;;AAEA,YAAIS,SAAS,IAAIA,SAAS,CAACC,MAAV,GAAmB,CAApC,EAAuC;AACrC,eAAK,IAAIC,CAAC,GAAGF,SAAS,CAACC,MAAvB,EAA+BC,CAAC,EAAhC,EAAoCA,CAAC,GAAG,CAAxC,EAA2C;AACzC,gBAAIF,SAAS,CAACE,CAAD,CAAT,KAAiBV,QAArB,EAA+B;AAC7BQ,cAAAA,SAAS,CAACG,MAAV,CAAiBD,CAAjB,EAAoB,CAApB;AACA;AACD;AACF;AACF;AACF;AACF;;;WAED,uBAAqBE,KAArB,EAAmC;AACjC,UAAMJ,SAAS,GAAGb,OAAO,CAACQ,GAAR,CAAY,IAAZ,EAAkBS,KAAK,CAACb,IAAxB,CAAlB;;AAEA,UAAIS,SAAJ,EAAe;AAAA,mDACUA,SADV;AAAA;;AAAA;AACb,8DAAkC;AAAA,gBAAvBR,QAAuB;AAChCA,YAAAA,QAAQ,CAACY,KAAD,CAAR;AACD;AAHY;AAAA;AAAA;AAAA;AAAA;AAId;AACF","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { Event } from './Event';\n\nconst _events = new WeakMap();\n\nexport default class EventTarget {\n  constructor() {\n    _events.set(this, {});\n  }\n\n  public addEventListener(type, listener, options: any = {}) {\n    let events = _events.get(this);\n\n    if (!events) {\n      events = {};\n    }\n    if (!events[type]) {\n      events[type] = [];\n    }\n    events[type].push(listener);\n    _events.set(this, events);\n\n    if (options.capture) {\n      // console.warn('EventTarget.addEventListener: options.capture is not implemented.')\n    }\n    if (options.once) {\n      // console.warn('EventTarget.addEventListener: options.once is not implemented.')\n    }\n    if (options.passive) {\n      // console.warn('EventTarget.addEventListener: options.passive is not implemented.')\n    }\n  }\n\n  public removeEventListener(type, listener, options = {}) {\n    const events = _events.get(this);\n\n    if (events) {\n      const listeners = events[type];\n\n      if (listeners && listeners.length > 0) {\n        for (let i = listeners.length; i--; i > 0) {\n          if (listeners[i] === listener) {\n            listeners.splice(i, 1);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  public dispatchEvent(event: Event) {\n    const listeners = _events.get(this)[event.type];\n\n    if (listeners) {\n      for (const listener of listeners) {\n        listener(event);\n      }\n    }\n  }\n}\n"],"file":"EventTarget.js"}