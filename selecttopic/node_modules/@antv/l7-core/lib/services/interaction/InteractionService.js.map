{"version":3,"sources":["../../../src/services/interaction/InteractionService.ts"],"names":["DragEventMap","panstart","panmove","panend","pancancel","InteractionService","TYPES","IMapService","target","interactionTarget","interactionEvent","type","indragging","emit","InteractionEvent","Drag","srcEvent","stopPropagation","Hover","touch","touches","onHover","x","pageX","y","pageY","event","clientX","clientY","$containter","mapService","getMapContainer","isMini","left","top","getBoundingClientRect","clientLeft","clientTop","lngLat","containerToLngLat","document","documentElement","isDoubleTap","addEventListenerOnMap","hammertime","destroy","removeEventListenerOnMap","off","id","Select","featureId","Active","e","$window","addEventListener","handleMiniEvent","bind","Hammer","Manager","add","Tap","taps","Pan","threshold","pointers","Press","on","onHammer","onDrag","removeEventListener","pointerType","Math","floor","nowTime","Date","getTime","lastClickTime","abs","lastClickXY","clickTimer","clearTimeout","setTimeout","EventEmitter"],"mappings":"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","sourcesContent":["import { $window, isMini } from '@antv/l7-utils';\nimport EventEmitter from 'eventemitter3';\nimport { inject, injectable } from 'inversify';\nimport Hammer from 'l7hammerjs';\nimport 'reflect-metadata';\n// @ts-ignore\nimport { TYPES } from '../../types';\nimport { ILngLat, IMapService } from '../map/IMapService';\nimport { IInteractionService, InteractionEvent } from './IInteractionService';\nconst DragEventMap: { [key: string]: string } = {\n  panstart: 'dragstart',\n  panmove: 'dragging',\n  panend: 'dragend',\n  pancancel: 'dragcancel',\n};\n/**\n * 由于目前 L7 与地图结合的方案为双 canvas 而非共享 WebGL Context，事件监听注册在地图底图上。\n * 除此之外，后续如果支持非地图场景，事件监听就需要注册在 L7 canvas 上。\n */\n@injectable()\nexport default class InteractionService extends EventEmitter\n  implements IInteractionService {\n  public indragging: boolean = false;\n  @inject(TYPES.IMapService)\n  private readonly mapService: IMapService;\n  // @ts-ignore\n  // private hammertime: HammerManager;\n  private hammertime: any;\n\n  private lastClickTime: number = 0;\n\n  private lastClickXY: number[] = [-1, -1];\n\n  private clickTimer: number;\n\n  private $containter: HTMLElement;\n\n  public init() {\n    // 注册事件在地图底图上\n    this.addEventListenerOnMap();\n    this.$containter = this.mapService.getMapContainer() as HTMLElement;\n  }\n\n  public destroy() {\n    if (this.hammertime) {\n      this.hammertime.destroy();\n    }\n    this.removeEventListenerOnMap();\n    this.off(InteractionEvent.Hover);\n  }\n\n  public triggerHover({ x, y }: { x: number; y: number }) {\n    this.emit(InteractionEvent.Hover, { x, y });\n  }\n  public triggerSelect(id: number): void {\n    this.emit(InteractionEvent.Select, { featureId: id });\n  }\n\n  public triggerActive(id: number): void {\n    this.emit(InteractionEvent.Active, { featureId: id });\n  }\n\n  public handleMiniEvent(e: any) {\n    // @ts-ignore\n    this.onHover({\n      clientX: e.touches[0].pageX,\n      clientY: e.touches[0].pageY,\n      type: 'touch',\n    });\n  }\n\n  private addEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      if (isMini) {\n        $window.document.addEventListener(\n          'touchstart',\n          this.handleMiniEvent.bind(this),\n        );\n      } else {\n        const hammertime = new Hammer.Manager($containter);\n        // $containter.addEventListener('mousemove', this.onHover);\n        // $containter.addEventListener('click', this.onHover);\n        hammertime.add(\n          new Hammer.Tap({\n            event: 'dblclick',\n            taps: 2,\n          }),\n        );\n        hammertime.add(\n          new Hammer.Tap({\n            event: 'click',\n          }),\n        );\n        hammertime.add(new Hammer.Pan({ threshold: 0, pointers: 0 }));\n        hammertime.add(new Hammer.Press({}));\n        // hammertime.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n        // hammertime.get('pinch').set({ enable: true });\n        hammertime.on('dblclick click', this.onHammer);\n        hammertime.on('panstart panmove panend pancancel', this.onDrag);\n        // $containter.addEventListener('touchstart', this.onTouch);\n        $containter.addEventListener('mousemove', this.onHover);\n        // $containter.addEventListener('click', this.onHover);\n        $containter.addEventListener('mousedown', this.onHover, true);\n        $containter.addEventListener('mouseup', this.onHover);\n        $containter.addEventListener('contextmenu', this.onHover);\n        this.hammertime = hammertime;\n      }\n\n      // // TODO: 根据场景注册事件到 L7 canvas 上\n    }\n  }\n  private removeEventListenerOnMap() {\n    if (isMini) {\n      $window.document.removeEventListener(\n        'touchstart',\n        this.handleMiniEvent.bind(this),\n      );\n    } else {\n      const $containter = this.mapService.getMapContainer();\n      if ($containter) {\n        $containter.removeEventListener('mousemove', this.onHover);\n        // this.hammertime.off('dblclick click', this.onHammer);\n        this.hammertime.off('panstart panmove panend pancancel', this.onDrag);\n        // $containter.removeEventListener('touchstart', this.onTouch);\n        // $containter.removeEventListener('click', this.onHover);\n        $containter.removeEventListener('mousedown', this.onHover);\n        $containter.removeEventListener('mouseup', this.onHover);\n        // $containter.removeEventListener('dblclick', this.onHover);\n        $containter.removeEventListener('contextmenu', this.onHover);\n      }\n    }\n  }\n\n  private onDrag = (target: any) => {\n    const interactionTarget = this.interactionEvent(target);\n    interactionTarget.type = DragEventMap[interactionTarget.type];\n    interactionTarget.type === 'dragging'\n      ? (this.indragging = true)\n      : (this.indragging = false);\n    this.emit(InteractionEvent.Drag, interactionTarget);\n  };\n\n  private onHammer = (target: any) => {\n    target.srcEvent.stopPropagation();\n    const interactionTarget = this.interactionEvent(target);\n    this.emit(InteractionEvent.Hover, interactionTarget);\n  };\n  private onTouch = (target: TouchEvent) => {\n    const touch = target.touches[0];\n    // @ts-ignore\n    this.onHover({\n      x: touch.pageX,\n      y: touch.pageY,\n      type: 'touch',\n    });\n  };\n\n  private interactionEvent(target: any) {\n    const { type, pointerType } = target;\n    let clientX;\n    let clientY;\n    if (pointerType === 'touch') {\n      clientY = Math.floor(target.pointers[0].clientY);\n      clientX = Math.floor(target.pointers[0].clientX);\n    } else {\n      clientY = Math.floor((target.srcEvent as MouseEvent).y);\n      clientX = Math.floor((target.srcEvent as MouseEvent).x);\n    }\n\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const { top, left } = $containter.getBoundingClientRect();\n      clientX -= left;\n      clientY -= top;\n    }\n    const lngLat = this.mapService.containerToLngLat([clientX, clientY]);\n    return { x: clientX, y: clientY, lngLat, type, target: target.srcEvent };\n  }\n  private onHover = (event: MouseEvent) => {\n    const { clientX, clientY } = event;\n    let x = clientX;\n    let y = clientY;\n    const type = event.type;\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      if (isMini) {\n        // l7 - mini\n        // @ts-ignore\n        x = x - $containter.left - 0;\n        // @ts-ignore\n        y = y - $containter.top - 0;\n      } else {\n        const { top, left } = $containter.getBoundingClientRect();\n        x = x - left - $containter.clientLeft;\n        y = y - top - $containter.clientTop;\n      }\n    }\n    const lngLat = this.mapService.containerToLngLat([x, y]);\n\n    if (type === 'click') {\n      if (!isMini) {\n        // l7 - mini\n        if ('ontouchstart' in document.documentElement === true) {\n          return;\n        }\n      }\n      this.isDoubleTap(x, y, lngLat);\n      return;\n    }\n    if (type === 'touch') {\n      this.isDoubleTap(x, y, lngLat);\n      return;\n    }\n    if (type !== 'click' && type !== 'dblclick') {\n      this.emit(InteractionEvent.Hover, {\n        x,\n        y,\n        lngLat,\n        type,\n        target: event,\n      });\n    }\n  };\n\n  private isDoubleTap(x: number, y: number, lngLat: ILngLat) {\n    const nowTime = new Date().getTime();\n    let type = 'click';\n    if (\n      nowTime - this.lastClickTime < 400 &&\n      Math.abs(this.lastClickXY[0] - x) < 10 &&\n      Math.abs(this.lastClickXY[1] - y) < 10\n    ) {\n      this.lastClickTime = 0;\n      this.lastClickXY = [-1, -1];\n      if (this.clickTimer) {\n        clearTimeout(this.clickTimer);\n      }\n      type = 'dblclick';\n      this.emit(InteractionEvent.Hover, { x, y, lngLat, type });\n    } else {\n      this.lastClickTime = nowTime;\n      this.lastClickXY = [x, y];\n      // @ts-ignore\n      this.clickTimer = setTimeout(() => {\n        type = 'click';\n        this.emit(InteractionEvent.Hover, { x, y, lngLat, type });\n      }, 400);\n    }\n  }\n}\n"],"file":"InteractionService.js"}