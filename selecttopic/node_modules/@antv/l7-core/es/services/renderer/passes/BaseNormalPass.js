import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

var _dec, _class;

import { injectable } from 'inversify';
import 'reflect-metadata';
import { TYPES } from '../../../types';
import { PassType } from '../IMultiPassRenderer';
var BaseNormalPass = (_dec = injectable(), _dec(_class = function () {
  function BaseNormalPass() {
    _classCallCheck(this, BaseNormalPass);

    _defineProperty(this, "shaderModuleService", void 0);

    _defineProperty(this, "rendererService", void 0);

    _defineProperty(this, "cameraService", void 0);

    _defineProperty(this, "mapService", void 0);

    _defineProperty(this, "interactionService", void 0);

    _defineProperty(this, "layerService", void 0);

    _defineProperty(this, "config", void 0);
  }

  _createClass(BaseNormalPass, [{
    key: "getName",
    value: function getName() {
      return '';
    }
  }, {
    key: "getType",
    value: function getType() {
      return PassType.Normal;
    }
  }, {
    key: "init",
    value: function init(layer, config) {
      this.config = config;
      this.rendererService = layer.getContainer().get(TYPES.IRendererService);
      this.cameraService = layer.getContainer().get(TYPES.ICameraService);
      this.mapService = layer.getContainer().get(TYPES.IMapService);
      this.interactionService = layer.getContainer().get(TYPES.IInteractionService);
      this.layerService = layer.getContainer().get(TYPES.ILayerService);
      this.shaderModuleService = layer.getContainer().get(TYPES.IShaderModuleService);
    }
  }, {
    key: "render",
    value: function render(layer) {}
  }]);

  return BaseNormalPass;
}()) || _class);
export { BaseNormalPass as default };
//# sourceMappingURL=BaseNormalPass.js.map