{"version":3,"sources":["../../../src/services/scene/ISceneService.ts"],"names":["SceneEventList"],"mappings":"AA0BA,OAAO,IAAMA,cAAwB,GAAG,CACtC,QADsC,EAEtC,WAFsC,EAGtC,QAHsC,EAItC,SAJsC,EAKtC,WALsC,EAMtC,UANsC,EAOtC,SAPsC,EAQtC,YARsC,CAAjC","sourcesContent":["import { ISceneConfig } from '../config/IConfigService';\nimport { ILayer } from '../layer/ILayerService';\nimport { IMapConfig } from '../map/IMapService';\nimport { IRenderConfig } from '../renderer/IRendererService';\nexport interface ISceneService {\n  destroyed: boolean;\n  loaded: boolean;\n  fontFamily: string;\n  loadFont: boolean;\n  on(type: string, handle: (...args: any[]) => void): void;\n  once(type: string, handle: (...args: any[]) => void): void;\n  off(type: string, handle: (...args: any[]) => void): void;\n  removeAllListeners(event?: string): this;\n  init(config: IMapConfig & IRenderConfig): void;\n  initMiniScene(config: IMapConfig & IRenderConfig): void;\n  addLayer(layer: ILayer): void;\n  getSceneConfig(): Partial<ISceneConfig>;\n  getPointSizeRange(): Float32Array;\n  render(): void;\n  getSceneContainer(): HTMLDivElement;\n  getMarkerContainer(): HTMLElement;\n  exportPng(type?: 'png' | 'jpg'): string;\n  addFontFace(fontname: string, fontpath: string): void;\n  destroy(): void;\n}\n// scene 事件\nexport const SceneEventList: string[] = [\n  'loaded',\n  'maploaded',\n  'resize',\n  'destroy',\n  'dragstart',\n  'dragging',\n  'dragend',\n  'dragcancel',\n];\n"],"file":"ISceneService.js"}