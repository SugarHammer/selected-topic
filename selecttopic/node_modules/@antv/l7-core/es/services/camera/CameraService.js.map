{"version":3,"sources":["../../../src/services/camera/CameraService.ts"],"names":["mat4","injectable","CameraService","viewport","viewMatrixInverse","create","invert","getViewMatrix","cameraPosition","jitteredProjectionMatrix","getProjectionMatrix","getModelMatrix","getViewMatrixUncentered","getViewProjectionMatrixUncentered","overridedViewProjectionMatrix","jitteredViewProjectionMatrix","getViewProjectionMatrix","getZoom","getZoomScale","getCenter","lng","lat","getFocalDistance","lngLat","scale","projectFlat","viewProjectionMatrix","x","y","translation","fromTranslation","multiply","undefined"],"mappings":";;;;;;;AAAA,SAASA,IAAT,QAAqB,WAArB;AACA,SAAiBC,UAAjB,QAAmC,WAAnC;AACA,OAAO,kBAAP;IAIqBC,a,WADpBD,UAAU,E;;;;;;;;;;;;;;;;;;;WA8BT,gBAAc,CAEb;;;WAKD,gBAAcE,QAAd,EAAmC;AACjC,WAAKA,QAAL,GAAgBA,QAAhB;AAOA,WAAKC,iBAAL,GAAyBJ,IAAI,CAACK,MAAL,EAAzB;AACAL,MAAAA,IAAI,CAACM,MAAL,CAAY,KAAKF,iBAAjB,EAAoCD,QAAQ,CAACI,aAAT,EAApC;AAEA,WAAKC,cAAL,GAAsB,CACpB,KAAKJ,iBAAL,CAAuB,EAAvB,CADoB,EAEpB,KAAKA,iBAAL,CAAuB,EAAvB,CAFoB,EAGpB,KAAKA,iBAAL,CAAuB,EAAvB,CAHoB,CAAtB;AAKD;;;WAED,+BAAuC;AAErC,aAAO,KAAKK,wBAAL,IAAiC,KAAKN,QAAL,CAAcO,mBAAd,EAAxC;AACD;;;WAED,0BAAkC;AAChC,aAAO,KAAKP,QAAL,CAAcQ,cAAd,EAAP;AACD;;;WAED,yBAAiC;AAC/B,aAAO,KAAKR,QAAL,CAAcI,aAAd,EAAP;AACD;;;WAED,mCAA2C;AACzC,aAAO,KAAKJ,QAAL,CAAcS,uBAAd,EAAP;AACD;;;WAED,6CAAqD;AACnD,aAAO,KAAKT,QAAL,CAAcU,iCAAd,EAAP;AACD;;;WAED,mCAA2C;AACzC,aACE,KAAKC,6BAAL,IACA,KAAKC,4BADL,IAEA,KAAKZ,QAAL,CAAca,uBAAd,EAHF;AAKD;;;WAED,mBAAyB;AACvB,aAAO,KAAKb,QAAL,CAAcc,OAAd,EAAP;AACD;;;WAED,wBAA8B;AAC5B,aAAO,KAAKd,QAAL,CAAce,YAAd,EAAP;AACD;;;WAED,qBAAqC;AACnC,kCAAmB,KAAKf,QAAL,CAAcgB,SAAd,EAAnB;AAAA;AAAA,UAAOC,GAAP;AAAA,UAAYC,GAAZ;;AACA,aAAO,CAACD,GAAD,EAAMC,GAAN,CAAP;AACD;;;WAED,4BAA0B;AACxB,aAAO,KAAKlB,QAAL,CAAcmB,gBAAd,EAAP;AACD;;;WAED,6BAA2B;AACzB,aAAO,KAAKd,cAAZ;AACD;;;WAED,qBACEe,MADF,EAEEC,KAFF,EAGoB;AAClB,aAAO,KAAKrB,QAAL,CAAcsB,WAAd,CAA0BF,MAA1B,EAAkCC,KAAlC,CAAP;AACD;;;WAKD,iCAA+BE,oBAA/B,EAA2E;AACzE,WAAKZ,6BAAL,GAAqCY,oBAArC;AACD;;;WAED,gCAA8BC,CAA9B,EAAyCC,CAAzC,EAAoD;AAClD,UAAMC,WAAW,GAAG7B,IAAI,CAAC8B,eAAL,CAAqB9B,IAAI,CAACK,MAAL,EAArB,EAAoC,CAACsB,CAAD,EAAIC,CAAJ,EAAO,CAAP,CAApC,CAApB;AAEA,WAAKnB,wBAAL,GAAiCT,IAAI,CAAC+B,QAAL,CAC/B/B,IAAI,CAACK,MAAL,EAD+B,EAE/BwB,WAF+B,EAG9B,KAAK1B,QAAL,CAAcO,mBAAd,EAH8B,CAAjC;AAMA,WAAKK,4BAAL,GAAqCf,IAAI,CAAC+B,QAAL,CACnC/B,IAAI,CAACK,MAAL,EADmC,EAElC,KAAKI,wBAF6B,EAGlC,KAAKN,QAAL,CAAcI,aAAd,EAHkC,CAArC;AAKD;;;WAED,uCAAqC;AACnC,WAAKE,wBAAL,GAAgCuB,SAAhC;AACA,WAAKjB,4BAAL,GAAoCiB,SAApC;AACD;;;;;SAzIkB9B,a","sourcesContent":["import { mat4 } from 'gl-matrix';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { ICameraService, IViewport } from './ICameraService';\n\n@injectable()\nexport default class CameraService implements ICameraService {\n  private viewport: IViewport;\n\n  /**\n   * 不使用 Viewport 计算的 VP 矩阵，例如偏移坐标系场景\n   */\n  private overridedViewProjectionMatrix: number[] | undefined;\n\n  /**\n   * 抖动后的 VP 矩阵\n   */\n  private jitteredViewProjectionMatrix: number[] | undefined;\n\n  /**\n   * 抖动后的 Projection 矩阵\n   */\n  private jitteredProjectionMatrix: number[] | undefined;\n\n  /**\n   * ViewMatrix 逆矩阵，用于计算相机位置\n   */\n  // private viewMatrixInverse: number[];\n  private viewMatrixInverse: mat4;\n\n  /**\n   * 相机位置\n   */\n  private cameraPosition: number[];\n\n  public init() {\n    //\n  }\n\n  /**\n   * 同步根据相机参数创建的视口\n   */\n  public update(viewport: IViewport) {\n    this.viewport = viewport;\n\n    // 计算逆矩阵\n    // this.viewMatrixInverse = (mat4.invert(\n    //   mat4.create(), (this.getViewMatrix() as unknown) as mat4,\n    // ) as unknown) as number[];\n\n    this.viewMatrixInverse = mat4.create();\n    mat4.invert(this.viewMatrixInverse, viewport.getViewMatrix() as mat4);\n\n    this.cameraPosition = [\n      this.viewMatrixInverse[12],\n      this.viewMatrixInverse[13],\n      this.viewMatrixInverse[14],\n    ];\n  }\n\n  public getProjectionMatrix(): number[] {\n    // 优先返回抖动后的 ProjectionMatrix\n    return this.jitteredProjectionMatrix || this.viewport.getProjectionMatrix();\n  }\n\n  public getModelMatrix(): number[] {\n    return this.viewport.getModelMatrix();\n  }\n\n  public getViewMatrix(): number[] {\n    return this.viewport.getViewMatrix();\n  }\n\n  public getViewMatrixUncentered(): number[] {\n    return this.viewport.getViewMatrixUncentered();\n  }\n\n  public getViewProjectionMatrixUncentered(): number[] {\n    return this.viewport.getViewProjectionMatrixUncentered();\n  }\n\n  public getViewProjectionMatrix(): number[] {\n    return (\n      this.overridedViewProjectionMatrix ||\n      this.jitteredViewProjectionMatrix ||\n      this.viewport.getViewProjectionMatrix()\n    );\n  }\n\n  public getZoom(): number {\n    return this.viewport.getZoom();\n  }\n\n  public getZoomScale(): number {\n    return this.viewport.getZoomScale();\n  }\n\n  public getCenter(): [number, number] {\n    const [lng, lat] = this.viewport.getCenter();\n    return [lng, lat];\n  }\n\n  public getFocalDistance() {\n    return this.viewport.getFocalDistance();\n  }\n\n  public getCameraPosition() {\n    return this.cameraPosition;\n  }\n\n  public projectFlat(\n    lngLat: [number, number],\n    scale?: number | undefined,\n  ): [number, number] {\n    return this.viewport.projectFlat(lngLat, scale);\n  }\n\n  /**\n   * 支持外部计算 VP 矩阵的场景，例如：在偏移坐标系场景中，需要重新计算 VP 矩阵\n   */\n  public setViewProjectionMatrix(viewProjectionMatrix: number[] | undefined) {\n    this.overridedViewProjectionMatrix = viewProjectionMatrix;\n  }\n\n  public jitterProjectionMatrix(x: number, y: number) {\n    const translation = mat4.fromTranslation(mat4.create(), [x, y, 0]);\n\n    this.jitteredProjectionMatrix = (mat4.multiply(\n      mat4.create(),\n      translation,\n      (this.viewport.getProjectionMatrix() as unknown) as mat4,\n    ) as unknown) as number[];\n\n    this.jitteredViewProjectionMatrix = (mat4.multiply(\n      mat4.create(),\n      (this.jitteredProjectionMatrix as unknown) as mat4,\n      (this.viewport.getViewMatrix() as unknown) as mat4,\n    ) as unknown) as number[];\n  }\n\n  public clearJitterProjectionMatrix() {\n    this.jitteredProjectionMatrix = undefined;\n    this.jitteredViewProjectionMatrix = undefined;\n  }\n}\n"],"file":"CameraService.js"}