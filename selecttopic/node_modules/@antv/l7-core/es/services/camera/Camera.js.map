{"version":3,"sources":["../../../src/services/camera/Camera.ts"],"names":["mat3","mat4","quat","vec3","vec4","createVec3","getAngle","CAMERA_TYPE","CAMERA_TRACKING_MODE","DEG_2_RAD","Math","PI","RAD_2_DEG","Camera","type","create","fromValues","undefined","EXPLORING","DEFAULT","setType","trackingMode","setWorldRotation","_getAngles","TRACKING","setTrackingMode","Error","flag","rotateWorld","invert","matrix","_update","near","far","angle","aspect","fov","updatePerspective","perspective","x","y","z","_setPosition","setFocalPoint","focalPoint","up","CINEMATIC","d","subtract","position","r","length","el","asin","az","atan2","m","rotateY","rotateX","transformMat4","lookAt","_getAxes","_getDistance","distance","dollyingStep","pos","n","forward","f","setAzimuth","azimuth","setElevation","elevation","rl","setRoll","roll","computeMatrix","ORBITING","_getPosition","_getFocalPoint","rotX","setAxisAngle","rotY","rotZ","rotQ","multiply","rotMatrix","fromQuat","translate","abs","relElevation","relAzimuth","relRoll","tx","ty","coords","clone","add","scale","right","value","step","distanceVector","identity","copy","normalize","transformMat3","fromMat4"],"mappings":"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","sourcesContent":["import { mat3, mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { createVec3, getAngle } from '../../utils/math';\n// import Landmark from './Landmark';\n\nexport enum CAMERA_TYPE {\n  ORBITING = 'ORBITING',\n  EXPLORING = 'EXPLORING',\n  TRACKING = 'TRACKING',\n}\n\nexport enum CAMERA_TRACKING_MODE {\n  DEFAULT = 'DEFAULT',\n  ROTATIONAL = 'ROTATIONAL',\n  TRANSLATIONAL = 'TRANSLATIONAL',\n  CINEMATIC = 'CINEMATIC',\n}\n\nconst DEG_2_RAD = Math.PI / 180;\nconst RAD_2_DEG = 180 / Math.PI;\n\n/**\n * 参考「WebGL Insights - 23.Designing Cameras for WebGL Applications」，基于 Responsible Camera 思路设计\n * 保存相机参数，定义相机动作：\n * 1. dolly 沿 n 轴移动\n * 2. pan 沿 u v 轴移动\n * 3. rotate 以方位角旋转\n * 4. 移动到 Landmark，具有平滑的动画效果，其间禁止其他用户交互\n */\nexport default class Camera {\n  /**\n   * 相机矩阵\n   */\n  public matrix = mat4.create();\n\n  /**\n   * u 轴\n   * @see http://learnwebgl.brown37.net/07_cameras/camera_introduction.html#a-camera-definition\n   */\n  public right = vec3.fromValues(1, 0, 0);\n\n  /**\n   * v 轴\n   */\n  public up = vec3.fromValues(0, 1, 0);\n\n  /**\n   * n 轴\n   */\n  public forward = vec3.fromValues(0, 0, 1);\n\n  /**\n   * 相机位置\n   */\n  public position = vec3.fromValues(0, 0, 1);\n\n  /**\n   * 视点位置\n   */\n  public focalPoint = vec3.fromValues(0, 0, 0);\n\n  /**\n   * 相机位置到视点向量\n   * focalPoint - position\n   */\n  public distanceVector = vec3.fromValues(0, 0, 0);\n\n  /**\n   * 相机位置到视点距离\n   * length(focalPoint - position)\n   */\n  public distance = 1;\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Azimuth\n   */\n  public azimuth = 0;\n  public elevation = 0;\n  public roll = 0;\n  public relAzimuth = 0;\n  public relElevation = 0;\n  public relRoll = 0;\n\n  /**\n   * 沿 n 轴移动时，保证移动速度从快到慢\n   */\n  public dollyingStep = 0;\n\n  /**\n   * invert the horizontal coordinate system HCS\n   */\n  public rotateWorld = false;\n\n  /**\n   * 投影矩阵参数\n   */\n\n  /**\n   * field of view [0-360]\n   * @see http://en.wikipedia.org/wiki/Angle_of_view\n   */\n  private fov = 30;\n  private near = 0.1;\n  private far = 10000;\n  private aspect = 1;\n\n  /**\n   * 投影矩阵\n   */\n  private perspective = mat4.create();\n\n  private following = undefined;\n\n  private type = CAMERA_TYPE.EXPLORING;\n  private trackingMode = CAMERA_TRACKING_MODE.DEFAULT;\n\n  constructor(type: CAMERA_TYPE) {\n    this.setType(type, undefined);\n  }\n\n  public setType(\n    type: CAMERA_TYPE,\n    trackingMode: CAMERA_TRACKING_MODE | undefined,\n  ) {\n    this.type = type;\n    if (this.type === CAMERA_TYPE.EXPLORING) {\n      this.setWorldRotation(true);\n    } else {\n      this.setWorldRotation(false);\n    }\n    this._getAngles();\n\n    if (this.type === CAMERA_TYPE.TRACKING && trackingMode !== undefined) {\n      this.setTrackingMode(trackingMode);\n    }\n  }\n\n  public setTrackingMode(trackingMode: CAMERA_TRACKING_MODE) {\n    if (this.type !== CAMERA_TYPE.TRACKING) {\n      throw new Error(\n        'Impossible to set a tracking mode if the camera is not of tracking type',\n      );\n    }\n    this.trackingMode = trackingMode;\n  }\n\n  /**\n   * If flag is true, it reverses the azimuth and elevation angles.\n   * Subsequent calls to rotate, setAzimuth, setElevation,\n   * changeAzimuth or changeElevation will cause the inverted effect.\n   * setRoll or changeRoll is not affected by this method.\n   *\n   * This inversion is useful when one wants to simulate that the world\n   * is moving, instead of the camera.\n   *\n   * By default the camera angles are not reversed.\n   * @param {Boolean} flag the boolean flag to reverse the angles.\n   */\n  public setWorldRotation(flag: boolean) {\n    this.rotateWorld = flag;\n    this._getAngles();\n  }\n\n  /**\n   * 计算 MV 矩阵，为相机矩阵的逆矩阵\n   */\n  public getViewTransform(): mat4 | null {\n    return mat4.invert(mat4.create(), this.matrix);\n  }\n\n  /**\n   * 设置相机矩阵\n   */\n  public setMatrix(matrix: mat4) {\n    this.matrix = matrix;\n    this._update();\n  }\n\n  public setPerspective(\n    near: number,\n    far: number,\n    angle: number,\n    aspect: number,\n  ) {\n    this.fov = angle;\n    this.near = near;\n    this.far = far;\n    this.aspect = aspect;\n    this.updatePerspective();\n  }\n\n  public updatePerspective() {\n    mat4.perspective(\n      this.perspective,\n      this.fov * DEG_2_RAD,\n      this.aspect,\n      this.near,\n      this.far,\n    );\n  }\n\n  /**\n   * 设置相机位置\n   */\n  public setPosition(x: number, y: number, z: number) {\n    this._setPosition(x, y, z);\n    this.setFocalPoint(this.focalPoint);\n    return this;\n  }\n\n  /**\n   * 设置视点位置\n   */\n  public setFocalPoint(x: number | vec3, y?: number, z?: number) {\n    let up = vec3.fromValues(0, 1, 0);\n    this.focalPoint = createVec3(x, y, z);\n\n    if (this.trackingMode === CAMERA_TRACKING_MODE.CINEMATIC) {\n      const d = vec3.subtract(vec3.create(), this.focalPoint, this.position);\n      x = d[0];\n      y = d[1] as number;\n      z = d[2] as number;\n      const r = vec3.length(d);\n      const el = Math.asin(y / r) * RAD_2_DEG;\n      const az = 90 + Math.atan2(z, x) * RAD_2_DEG;\n      const m = mat4.create();\n      mat4.rotateY(m, m, az * DEG_2_RAD);\n      mat4.rotateX(m, m, el * DEG_2_RAD);\n      up = vec3.transformMat4(vec3.create(), [0, 1, 0], m);\n    }\n\n    mat4.invert(\n      this.matrix,\n      mat4.lookAt(mat4.create(), this.position, this.focalPoint, up),\n    );\n\n    this._getAxes();\n    this._getDistance();\n    this._getAngles();\n    return this;\n  }\n\n  /**\n   * 固定当前视点，按指定距离放置相机\n   */\n  public setDistance(d: number) {\n    if (this.distance === d || d < 0) {\n      return;\n    }\n\n    this.distance = d;\n    this.dollyingStep = this.distance / 100;\n\n    const pos = vec3.create();\n    const n = this.forward;\n    const f = this.focalPoint;\n\n    pos[0] = d * n[0] + f[0];\n    pos[1] = d * n[1] + f[1];\n    pos[2] = d * n[2] + f[2];\n\n    this._setPosition(pos);\n    return this;\n  }\n\n  /**\n   * Changes the initial azimuth of the camera\n   */\n  public changeAzimuth(az: number) {\n    this.setAzimuth(this.azimuth + az);\n    return this;\n  }\n\n  /**\n   * Changes the initial elevation of the camera\n   */\n  public changeElevation(el: number) {\n    this.setElevation(this.elevation + el);\n    return this;\n  }\n\n  /**\n   * Changes the initial roll of the camera\n   */\n  public changeRoll(rl: number) {\n    this.setRoll(this.roll + rl);\n    return this;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} el the azimuth in degrees\n   */\n  public setAzimuth(az: number) {\n    this.azimuth = getAngle(az);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  public getAzimuth() {\n    return this.azimuth;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} el the elevation in degrees\n   */\n  public setElevation(el: number) {\n    this.elevation = getAngle(el);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} angle the roll angle\n   */\n  public setRoll(angle: number) {\n    this.roll = getAngle(angle);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  /**\n   * Changes the azimuth and elevation with respect to the current camera axes\n   * @param {Number} azimuth the relative azimuth\n   * @param {Number} elevation the relative elevation\n   * @param {Number} roll the relative roll\n   */\n  public rotate(azimuth: number, elevation: number, roll: number) {\n    if (this.type === CAMERA_TYPE.EXPLORING) {\n      azimuth = getAngle(azimuth);\n      elevation = getAngle(elevation);\n      roll = getAngle(roll);\n\n      const rotX = quat.setAxisAngle(\n        quat.create(),\n        [1, 0, 0],\n        (this.rotateWorld ? 1 : -1) * elevation * DEG_2_RAD,\n      );\n      const rotY = quat.setAxisAngle(\n        quat.create(),\n        [0, 1, 0],\n        (this.rotateWorld ? 1 : -1) * azimuth * DEG_2_RAD,\n      );\n\n      const rotZ = quat.setAxisAngle(\n        quat.create(),\n        [0, 0, 1],\n        roll * DEG_2_RAD,\n      );\n      let rotQ = quat.multiply(quat.create(), rotY, rotX);\n      rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n      const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n      mat4.translate(this.matrix, this.matrix, [0, 0, -this.distance]);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else {\n      if (Math.abs(this.elevation + elevation) > 90) {\n        return;\n      }\n      this.relElevation = getAngle(elevation);\n      this.relAzimuth = getAngle(azimuth);\n      this.relRoll = getAngle(roll);\n      this.elevation += this.relElevation;\n      this.azimuth += this.relAzimuth;\n      this.roll += this.relRoll;\n\n      this.computeMatrix();\n    }\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this._update();\n    return this;\n  }\n\n  /**\n   * 沿水平(right) & 垂直(up)平移相机\n   */\n  public pan(tx: number, ty: number) {\n    const coords = createVec3(tx, ty, 0);\n    const pos = vec3.clone(this.position);\n\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.right, coords[0]));\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.up, coords[1]));\n\n    this._setPosition(pos);\n\n    return this;\n  }\n\n  /**\n   * 沿 n 轴移动，当距离视点远时移动速度较快，离视点越近速度越慢\n   */\n  public dolly(value: number) {\n    const n = this.forward;\n    const pos = vec3.clone(this.position);\n    const step = value * this.dollyingStep;\n    pos[0] += step * n[0];\n    pos[1] += step * n[1];\n    pos[2] += step * n[2];\n\n    this._setPosition(pos);\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      // 重新计算视点距离\n      this._getDistance();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      // 保持视距，移动视点位置\n      vec3.add(this.focalPoint, pos, this.distanceVector);\n    }\n    return this;\n  }\n\n  // public createLandmark(name: string): Landmark {\n  //   return new Landmark(name, this);\n  // }\n\n  /**\n   * 根据相机矩阵重新计算各种相机参数\n   */\n  private _update() {\n    this._getAxes();\n    this._getPosition();\n    this._getDistance();\n    this._getAngles();\n  }\n\n  /**\n   * 计算相机矩阵\n   */\n  private computeMatrix() {\n    let rotX;\n    let rotY;\n    // 使用四元数描述 3D 旋转\n    // @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n    const rotZ = quat.setAxisAngle(\n      quat.create(),\n      [0, 0, 1],\n      this.roll * DEG_2_RAD,\n    );\n\n    mat4.identity(this.matrix);\n\n    // only consider HCS for EXPLORING and ORBITING cameras\n    rotX = quat.setAxisAngle(\n      quat.create(),\n      [1, 0, 0],\n      (this.rotateWorld || this.type === CAMERA_TYPE.TRACKING ? 1 : -1) *\n        this.elevation *\n        DEG_2_RAD,\n    );\n    rotY = quat.setAxisAngle(\n      quat.create(),\n      [0, 1, 0],\n      (this.rotateWorld ? 1 : -1) * this.azimuth * DEG_2_RAD,\n    );\n\n    let rotQ = quat.multiply(quat.create(), rotY, rotX);\n    rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n    const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      mat4.translate(this.matrix, this.matrix, this.focalPoint);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      mat4.translate(this.matrix, this.matrix, this.position);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n    }\n  }\n\n  /**\n   * Sets the camera position in the camera matrix\n   */\n  private _setPosition(x: number | vec3, y?: number, z?: number) {\n    this.position = createVec3(x, y, z);\n    const m = this.matrix;\n    m[12] = this.position[0];\n    m[13] = this.position[1];\n    m[14] = this.position[2];\n    m[15] = 1;\n  }\n\n  /**\n   * Recalculates axes based on the current matrix\n   */\n  private _getAxes() {\n    vec3.copy(\n      this.right,\n      createVec3(vec4.transformMat4(vec4.create(), [1, 0, 0, 0], this.matrix)),\n    );\n    vec3.copy(\n      this.up,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 1, 0, 0], this.matrix)),\n    );\n    vec3.copy(\n      this.forward,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 0, 1, 0], this.matrix)),\n    );\n    vec3.normalize(this.right, this.right);\n    vec3.normalize(this.up, this.up);\n    vec3.normalize(this.forward, this.forward);\n  }\n\n  /**\n   * Recalculates euler angles based on the current state\n   */\n  private _getAngles() {\n    // Recalculates angles\n    const x = this.distanceVector[0];\n    const y = this.distanceVector[1];\n    const z = this.distanceVector[2];\n    const r = vec3.length(this.distanceVector);\n\n    // FAST FAIL: If there is no distance we cannot compute angles\n    if (r === 0) {\n      this.elevation = 0;\n      this.azimuth = 0;\n      return;\n    }\n\n    if (this.type === CAMERA_TYPE.TRACKING) {\n      this.elevation = Math.asin(y / r) * RAD_2_DEG;\n      this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n    } else {\n      if (this.rotateWorld) {\n        this.elevation = Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n      } else {\n        this.elevation = -Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = -Math.atan2(-x, -z) * RAD_2_DEG;\n      }\n    }\n  }\n\n  /**\n   * 重新计算相机位置，只有 ORBITING 模式相机位置才会发生变化\n   */\n  private _getPosition() {\n    vec3.copy(\n      this.position,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 0, 0, 1], this.matrix)),\n    );\n\n    // 相机位置变化，需要重新计算视距\n    this._getDistance();\n  }\n\n  /**\n   * 重新计算视点，只有 TRACKING 模式视点才会发生变化\n   */\n  private _getFocalPoint() {\n    vec3.transformMat3(\n      this.distanceVector,\n      [0, 0, -this.distance],\n      mat3.fromMat4(mat3.create(), this.matrix),\n    );\n    vec3.add(this.focalPoint, this.position, this.distanceVector);\n\n    // 视点变化，需要重新计算视距\n    this._getDistance();\n  }\n\n  /**\n   * 重新计算视距\n   */\n  private _getDistance() {\n    this.distanceVector = vec3.subtract(\n      vec3.create(),\n      this.focalPoint,\n      this.position,\n    );\n    this.distance = vec3.length(this.distanceVector);\n    this.dollyingStep = this.distance / 100;\n  }\n}\n"],"file":"Camera.js"}