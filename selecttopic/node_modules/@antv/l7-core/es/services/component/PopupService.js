import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

var _dec, _class;

import { injectable } from 'inversify';
import 'reflect-metadata';
import { TYPES } from '../../types';
var PopupService = (_dec = injectable(), _dec(_class = function () {
  function PopupService() {
    _classCallCheck(this, PopupService);

    _defineProperty(this, "scene", void 0);

    _defineProperty(this, "popup", void 0);

    _defineProperty(this, "mapsService", void 0);

    _defineProperty(this, "unAddPopup", void 0);
  }

  _createClass(PopupService, [{
    key: "removePopup",
    value: function removePopup(popup) {
      popup.remove();
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.popup.remove();
    }
  }, {
    key: "addPopup",
    value: function addPopup(popup) {
      if (this.popup) {
        this.popup.remove();
      }

      if (this.mapsService.map && this.mapsService.getMarkerContainer()) {
        popup.addTo(this.scene);
        this.popup = popup;
      } else {
        this.unAddPopup = popup;
      }
    }
  }, {
    key: "initPopup",
    value: function initPopup() {
      if (this.unAddPopup) {
        this.addPopup(this.unAddPopup);
        this.unAddPopup = null;
      }
    }
  }, {
    key: "init",
    value: function init(scene) {
      this.scene = scene;
      this.mapsService = scene.get(TYPES.IMapService);
    }
  }]);

  return PopupService;
}()) || _class);
export { PopupService as default };
//# sourceMappingURL=PopupService.js.map