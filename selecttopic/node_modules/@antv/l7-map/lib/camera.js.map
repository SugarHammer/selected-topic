{"version":3,"sources":["../src/camera.ts"],"names":["Camera","options","t","Math","min","easeStart","easeOptions","duration","onEaseFrame","easing","easeFrameId","requestRenderFrame","renderFrameCallback","stop","minZoom","maxZoom","minPitch","maxPitch","renderWorldCopies","moving","zooming","bearingSnap","pitchEnabled","rotateEnabled","transform","Transform","cb","_","center","lng","lat","LngLat","zoom","pitch","eventData","jumpTo","bearing","lnglat","easeTo","zoomTo","getZoom","padding","rotateTo","bounds","fitInternal","cameraForBounds","LngLatBounds","convert","cameraForBoxAndBearing","getNorthWest","getSouthEast","abs","getBearing","resetNorth","tr","zoomChanged","bearingChanged","pitchChanged","undefined","isPaddingEqual","emit","Event","offset","defaultEasing","animate","essential","startZoom","startBearing","startPitch","getPitch","startPadding","getPadding","normalizeBearing","offsetAsPoint","Point","pointAtOffset","centerPoint","add","locationAtOffset","pointLocation","normalizeCenter","from","project","delta","sub","finalScale","zoomScale","around","aroundPoint","locationPoint","currently","rotating","pitching","easeId","prepareEase","noMoveStart","clearTimeout","easeEndTimeoutID","ease","k","interpolatePadding","setLocationAtPoint","scale","base","max","speedup","pow","newCenter","unproject","mult","wrap","fireMoveEvents","interruptingEaseId","afterEase","coercedOptions","speed","curve","rho","w0","width","height","w1","u1","mag","wMax","sqrt","rho2","r","i","b","log","sinh","n","exp","cosh","tanh","r0","w","s","u","S","isFinite","V","screenSpeed","maxDuration","easeScale","scaleZoom","p0","p1","allowGestures","cancelRenderFrame","onEaseEnd","call","currentBearing","diff","lngRange","wasZooming","wasRotating","wasPitching","frame","finish","defaultPadding","top","bottom","right","left","p","edgePadding","p0world","p1world","p0rotated","rotate","PI","p1rotated","upperRight","x","y","lowerLeft","size","scaleX","scaleY","paddingOffsetX","paddingOffsetY","offsetAtInitialZoom","offsetAtFinalZoom","div","calculatedOptions","linear","flyTo","EventEmitter"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { EventEmitter } from 'eventemitter3';\nimport { merge } from 'lodash';\nimport { IPaddingOptions } from './geo/edge_insets';\nimport LngLat, { LngLatLike } from './geo/lng_lat';\nimport LngLatBounds, { LngLatBoundsLike } from './geo/lng_lat_bounds';\nimport Point, { PointLike } from './geo/point';\nimport Transform from './geo/transform';\nimport { Event } from './handler/events/event';\nimport { IMapOptions } from './interface';\ntype CallBack = (_: number) => void;\nimport {\n  cancel,\n  clamp,\n  ease as defaultEasing,\n  interpolate,\n  now,\n  pick,\n  prefersReducedMotion,\n  raf,\n  wrap,\n} from './util';\n\nexport interface ICameraOptions {\n  center?: LngLatLike;\n  zoom?: number;\n  bearing?: number;\n  pitch?: number;\n  around?: LngLatLike;\n  padding?: IPaddingOptions;\n}\n\nexport interface IAnimationOptions {\n  duration?: number;\n  easing?: (_: number) => number;\n  offset?: PointLike;\n  animate?: boolean;\n  essential?: boolean;\n  linear?: boolean;\n}\n\nexport default class Camera extends EventEmitter {\n  public transform: Transform;\n  // public requestRenderFrame: (_: any) => number;\n  // public cancelRenderFrame: (_: number) => void;\n  protected options: IMapOptions;\n  protected moving: boolean;\n  protected zooming: boolean;\n  protected rotating: boolean;\n  protected pitching: boolean;\n  protected padding: boolean;\n\n  private bearingSnap: number;\n  private easeEndTimeoutID: number;\n  private easeStart: number;\n  private easeOptions: {\n    duration: number;\n    easing: (_: number) => number;\n  };\n  private easeId: string | void;\n  private onEaseFrame: (_: number) => void;\n  private onEaseEnd: (easeId?: string) => void;\n  private easeFrameId: number;\n  private pitchEnabled: boolean;\n  private rotateEnabled: boolean;\n\n  constructor(options: IMapOptions) {\n    super();\n    this.options = options;\n    const { minZoom, maxZoom, minPitch, maxPitch, renderWorldCopies } = options;\n    this.moving = false;\n    this.zooming = false;\n    this.bearingSnap = options.bearingSnap;\n    this.pitchEnabled = options.pitchEnabled;\n    this.rotateEnabled = options.rotateEnabled;\n    this.transform = new Transform(\n      minZoom,\n      maxZoom,\n      minPitch,\n      maxPitch,\n      renderWorldCopies,\n    );\n  }\n  public requestRenderFrame(cb: CallBack): number {\n    return 0;\n  }\n  public cancelRenderFrame(_: number): void {\n    return;\n  }\n\n  public getCenter() {\n    const { lng, lat } = this.transform.center;\n    return new LngLat(lng, lat);\n  }\n\n  public getZoom(): number {\n    return this.transform.zoom;\n  }\n\n  public getPitch(): number {\n    return this.transform.pitch;\n  }\n\n  public setCenter(center: LngLatLike, eventData?: any) {\n    return this.jumpTo({ center }, eventData);\n  }\n\n  public setPitch(pitch: number, eventData?: any) {\n    this.jumpTo({ pitch }, eventData);\n    return this;\n  }\n\n  public getBearing(): number {\n    return this.transform.bearing;\n  }\n\n  public panTo(\n    lnglat: LngLatLike,\n    options?: IAnimationOptions,\n    eventData?: any,\n  ) {\n    return this.easeTo(\n      merge(\n        {\n          center: lnglat,\n        },\n        options,\n      ),\n      eventData,\n    );\n  }\n\n  public zoomOut(options?: IAnimationOptions, eventData?: any) {\n    this.zoomTo(this.getZoom() - 1, options, eventData);\n    return this;\n  }\n\n  public setBearing(bearing: number, eventData?: any) {\n    this.jumpTo({ bearing }, eventData);\n    return this;\n  }\n  public setZoom(zoom: number, eventData?: any) {\n    this.jumpTo({ zoom }, eventData);\n    return this;\n  }\n\n  public zoomIn(options?: IAnimationOptions, eventData?: any) {\n    this.zoomTo(this.getZoom() + 1, options, eventData);\n    return this;\n  }\n\n  public zoomTo(zoom: number, options?: IAnimationOptions, eventData?: any) {\n    return this.easeTo(\n      merge(\n        {\n          zoom,\n        },\n        options,\n      ),\n      eventData,\n    );\n  }\n\n  public getPadding(): IPaddingOptions {\n    return this.transform.padding;\n  }\n\n  public setPadding(padding: IPaddingOptions, eventData?: any) {\n    this.jumpTo({ padding }, eventData);\n    return this;\n  }\n\n  public rotateTo(\n    bearing: number,\n    options?: IAnimationOptions,\n    eventData?: any,\n  ) {\n    return this.easeTo(\n      merge(\n        {\n          bearing,\n        },\n        options,\n      ),\n      eventData,\n    );\n  }\n\n  public resetNorth(options?: IAnimationOptions, eventData?: any) {\n    this.rotateTo(0, merge({ duration: 1000 }, options), eventData);\n    return this;\n  }\n\n  public resetNorthPitch(options?: IAnimationOptions, eventData?: any) {\n    this.easeTo(\n      merge(\n        {\n          bearing: 0,\n          pitch: 0,\n          duration: 1000,\n        },\n        options,\n      ),\n      eventData,\n    );\n    return this;\n  }\n  public fitBounds(\n    bounds: LngLatBoundsLike,\n    options?: IAnimationOptions & ICameraOptions,\n    eventData?: any,\n  ) {\n    return this.fitInternal(\n      // @ts-ignore\n      this.cameraForBounds(bounds, options),\n      options,\n      eventData,\n    );\n  }\n  public cameraForBounds(\n    bounds: LngLatBoundsLike,\n    options?: ICameraOptions,\n  ): void | (ICameraOptions & IAnimationOptions) {\n    bounds = LngLatBounds.convert(bounds);\n    return this.cameraForBoxAndBearing(\n      bounds.getNorthWest(),\n      bounds.getSouthEast(),\n      0,\n      // @ts-ignore\n      options,\n    );\n  }\n\n  public snapToNorth(options?: IAnimationOptions, eventData?: any) {\n    if (Math.abs(this.getBearing()) < this.bearingSnap) {\n      return this.resetNorth(options, eventData);\n    }\n    return this;\n  }\n\n  public jumpTo(options: ICameraOptions = {}, eventData?: any) {\n    this.stop();\n\n    const tr = this.transform;\n    let zoomChanged = false;\n    let bearingChanged = false;\n    let pitchChanged = false;\n\n    if (options.zoom && tr.zoom !== +options.zoom) {\n      zoomChanged = true;\n      tr.zoom = +options.zoom;\n    }\n\n    if (options.center !== undefined) {\n      tr.center = LngLat.convert(options.center);\n    }\n\n    if (options.bearing && tr.bearing !== +options.bearing) {\n      bearingChanged = true;\n      tr.bearing = +options.bearing;\n    }\n\n    if (options.pitch && tr.pitch !== +options.pitch) {\n      pitchChanged = true;\n      tr.pitch = +options.pitch;\n    }\n\n    if (options.padding != null && !tr.isPaddingEqual(options.padding)) {\n      tr.padding = options.padding;\n    }\n\n    this.emit('movestart', new Event('movestart', eventData));\n    this.emit('move', new Event('move', eventData));\n\n    if (zoomChanged) {\n      this.emit('zoomstart', new Event('zoomstart', eventData));\n      this.emit('zoom', new Event('zoom', eventData));\n      this.emit('zoomend', new Event('zoomend', eventData));\n    }\n\n    if (bearingChanged) {\n      this.emit('rotatestart', new Event('rotatestart', eventData));\n      this.emit('rotate', new Event('rotate', eventData));\n      this.emit('rotateend', new Event('rotateend', eventData));\n    }\n\n    if (pitchChanged) {\n      this.emit('pitchstart', new Event('pitchstart', eventData));\n      this.emit('pitch', new Event('pitch', eventData));\n      this.emit('pitchend', new Event('pitchend', eventData));\n    }\n\n    return this.emit('moveend', new Event('moveend', eventData));\n  }\n\n  public easeTo(\n    options: ICameraOptions &\n      IAnimationOptions & { easeId?: string; noMoveStart?: boolean } = {},\n    eventData?: any,\n  ) {\n    options = merge(\n      {\n        offset: [0, 0],\n        duration: 500,\n        easing: defaultEasing,\n      },\n      options,\n    );\n\n    if (\n      options.animate === false ||\n      (!options.essential && prefersReducedMotion())\n    ) {\n      options.duration = 0;\n    }\n\n    const tr = this.transform;\n    const startZoom = this.getZoom();\n    const startBearing = this.getBearing();\n    const startPitch = this.getPitch();\n    const startPadding = this.getPadding();\n\n    const zoom = options.zoom ? +options.zoom : startZoom;\n    const bearing = options.bearing\n      ? this.normalizeBearing(options.bearing, startBearing)\n      : startBearing;\n    const pitch = options.pitch ? +options.pitch : startPitch;\n    const padding = options.padding ? options.padding : tr.padding;\n\n    const offsetAsPoint = Point.convert(options.offset);\n    let pointAtOffset = tr.centerPoint.add(offsetAsPoint);\n    const locationAtOffset = tr.pointLocation(pointAtOffset);\n    const center = LngLat.convert(options.center || locationAtOffset);\n    this.normalizeCenter(center);\n\n    const from = tr.project(locationAtOffset);\n    const delta = tr.project(center).sub(from);\n    const finalScale = tr.zoomScale(zoom - startZoom);\n\n    let around: LngLat;\n    let aroundPoint: Point;\n\n    if (options.around) {\n      around = LngLat.convert(options.around);\n      aroundPoint = tr.locationPoint(around);\n    }\n\n    const currently = {\n      moving: this.moving,\n      zooming: this.zooming,\n      rotating: this.rotating,\n      pitching: this.pitching,\n    };\n\n    this.zooming = this.zooming || zoom !== startZoom;\n    this.rotating = this.rotating || startBearing !== bearing;\n    this.pitching = this.pitching || pitch !== startPitch;\n    this.padding = !tr.isPaddingEqual(padding);\n\n    this.easeId = options.easeId;\n    this.prepareEase(eventData, options.noMoveStart, currently);\n\n    clearTimeout(this.easeEndTimeoutID);\n\n    this.ease(\n      (k) => {\n        if (this.zooming) {\n          tr.zoom = interpolate(startZoom, zoom, k);\n        }\n        if (this.rotating && this.rotateEnabled) {\n          tr.bearing = interpolate(startBearing, bearing, k);\n        }\n        if (this.pitching && this.pitchEnabled) {\n          tr.pitch = interpolate(startPitch, pitch, k);\n        }\n        if (this.padding) {\n          tr.interpolatePadding(startPadding, padding, k);\n          // When padding is being applied, Transform#centerPoint is changing continously,\n          // thus we need to recalculate offsetPoint every fra,e\n          pointAtOffset = tr.centerPoint.add(offsetAsPoint);\n        }\n\n        if (around) {\n          tr.setLocationAtPoint(around, aroundPoint);\n        } else {\n          const scale = tr.zoomScale(tr.zoom - startZoom);\n          const base =\n            zoom > startZoom\n              ? Math.min(2, finalScale)\n              : Math.max(0.5, finalScale);\n          const speedup = Math.pow(base, 1 - k);\n          const newCenter = tr.unproject(\n            from.add(delta.mult(k * speedup)).mult(scale),\n          );\n          tr.setLocationAtPoint(\n            tr.renderWorldCopies ? newCenter.wrap() : newCenter,\n            pointAtOffset,\n          );\n        }\n\n        this.fireMoveEvents(eventData);\n      },\n      (interruptingEaseId?: string) => {\n        this.afterEase(eventData, interruptingEaseId);\n      },\n      // @ts-ignore\n      options,\n    );\n\n    return this;\n  }\n  public flyTo(options: any = {}, eventData?: any) {\n    // Fall through to jumpTo if user has set prefers-reduced-motion\n    if (!options.essential && prefersReducedMotion()) {\n      const coercedOptions = pick(options, [\n        'center',\n        'zoom',\n        'bearing',\n        'pitch',\n        'around',\n      ]) as ICameraOptions;\n      return this.jumpTo(coercedOptions, eventData);\n    }\n\n    this.stop();\n\n    options = merge(\n      {\n        offset: [0, 0],\n        speed: 1.2,\n        curve: 1.42,\n        easing: defaultEasing,\n      },\n      options,\n    );\n    const tr = this.transform;\n    const startZoom = this.getZoom();\n    const startBearing = this.getBearing();\n    const startPitch = this.getPitch();\n    const startPadding = this.getPadding();\n\n    const zoom = options.zoom\n      ? clamp(+options.zoom, tr.minZoom, tr.maxZoom)\n      : startZoom;\n    const bearing = options.bearing\n      ? this.normalizeBearing(options.bearing, startBearing)\n      : startBearing;\n    const pitch = options.pitch ? +options.pitch : startPitch;\n    const padding = 'padding' in options ? options.padding : tr.padding;\n\n    const scale = tr.zoomScale(zoom - startZoom);\n    const offsetAsPoint = Point.convert(options.offset);\n    let pointAtOffset = tr.centerPoint.add(offsetAsPoint);\n    const locationAtOffset = tr.pointLocation(pointAtOffset);\n    const center = LngLat.convert(options.center || locationAtOffset);\n    this.normalizeCenter(center);\n\n    const from = tr.project(locationAtOffset);\n    const delta = tr.project(center).sub(from);\n\n    let rho = options.curve;\n\n    // w₀: Initial visible span, measured in pixels at the initial scale.\n    const w0 = Math.max(tr.width, tr.height);\n    // w₁: Final visible span, measured in pixels with respect to the initial scale.\n    const w1 = w0 / scale;\n    // Length of the flight path as projected onto the ground plane, measured in pixels from\n    // the world image origin at the initial scale.\n    const u1 = delta.mag();\n\n    if ('minZoom' in options) {\n      const minZoom = clamp(\n        Math.min(options.minZoom, startZoom, zoom),\n        tr.minZoom,\n        tr.maxZoom,\n      );\n      // w<sub>m</sub>: Maximum visible span, measured in pixels with respect to the initial\n      // scale.\n      const wMax = w0 / tr.zoomScale(minZoom - startZoom);\n      rho = Math.sqrt((wMax / u1) * 2);\n    }\n\n    // ρ²\n    const rho2 = rho * rho;\n\n    /**\n     * rᵢ: Returns the zoom-out factor at one end of the animation.\n     *\n     * @param i 0 for the ascent or 1 for the descent.\n     * @private\n     */\n    function r(i: number) {\n      const b =\n        (w1 * w1 - w0 * w0 + (i ? -1 : 1) * rho2 * rho2 * u1 * u1) /\n        (2 * (i ? w1 : w0) * rho2 * u1);\n      return Math.log(Math.sqrt(b * b + 1) - b);\n    }\n\n    function sinh(n: number) {\n      return (Math.exp(n) - Math.exp(-n)) / 2;\n    }\n    function cosh(n: number) {\n      return (Math.exp(n) + Math.exp(-n)) / 2;\n    }\n    function tanh(n: number) {\n      return sinh(n) / cosh(n);\n    }\n\n    // r₀: Zoom-out factor during ascent.\n    const r0 = r(0);\n\n    // w(s): Returns the visible span on the ground, measured in pixels with respect to the\n    // initial scale. Assumes an angular field of view of 2 arctan ½ ≈ 53°.\n    let w: (_: number) => number = (s) => {\n      return cosh(r0) / cosh(r0 + rho * s);\n    };\n\n    // u(s): Returns the distance along the flight path as projected onto the ground plane,\n    // measured in pixels from the world image origin at the initial scale.\n    let u: (_: number) => number = (s) => {\n      return (w0 * ((cosh(r0) * tanh(r0 + rho * s) - sinh(r0)) / rho2)) / u1;\n    };\n\n    // S: Total length of the flight path, measured in ρ-screenfuls.\n    let S = (r(1) - r0) / rho;\n\n    // When u₀ = u₁, the optimal path doesn’t require both ascent and descent.\n    if (Math.abs(u1) < 0.000001 || !isFinite(S)) {\n      // Perform a more or less instantaneous transition if the path is too short.\n      if (Math.abs(w0 - w1) < 0.000001) {\n        return this.easeTo(options, eventData);\n      }\n\n      const k = w1 < w0 ? -1 : 1;\n      S = Math.abs(Math.log(w1 / w0)) / rho;\n\n      u = () => {\n        return 0;\n      };\n      w = (s) => {\n        return Math.exp(k * rho * s);\n      };\n    }\n\n    if ('duration' in options) {\n      options.duration = +options.duration;\n    } else {\n      const V =\n        'screenSpeed' in options ? +options.screenSpeed / rho : +options.speed;\n      options.duration = (1000 * S) / V;\n    }\n\n    if (options.maxDuration && options.duration > options.maxDuration) {\n      options.duration = 0;\n    }\n\n    this.zooming = true;\n    this.rotating = startBearing !== bearing;\n    this.pitching = pitch !== startPitch;\n    this.padding = !tr.isPaddingEqual(padding);\n\n    this.prepareEase(eventData, false);\n\n    this.ease(\n      (k) => {\n        // s: The distance traveled along the flight path, measured in ρ-screenfuls.\n        const s = k * S;\n        // @ts-ignore\n        const easeScale = 1 / w(s);\n        tr.zoom = k === 1 ? zoom : startZoom + tr.scaleZoom(easeScale);\n\n        if (this.rotating) {\n          tr.bearing = interpolate(startBearing, bearing, k);\n        }\n        if (this.pitching) {\n          tr.pitch = interpolate(startPitch, pitch, k);\n        }\n        if (this.padding) {\n          tr.interpolatePadding(startPadding, padding, k);\n          // When padding is being applied, Transform#centerPoint is changing continously,\n          // thus we need to recalculate offsetPoint every frame\n          pointAtOffset = tr.centerPoint.add(offsetAsPoint);\n        }\n\n        const newCenter =\n          k === 1\n            ? center\n            : tr.unproject(from.add(delta.mult(u(s))).mult(easeScale));\n        tr.setLocationAtPoint(\n          tr.renderWorldCopies ? newCenter.wrap() : newCenter,\n          pointAtOffset,\n        );\n\n        this.fireMoveEvents(eventData);\n      },\n      () => this.afterEase(eventData),\n      options,\n    );\n\n    return this;\n  }\n  public fitScreenCoordinates(\n    p0: PointLike,\n    p1: PointLike,\n    bearing: number,\n    options?: IAnimationOptions & ICameraOptions,\n    eventData?: any,\n  ) {\n    return this.fitInternal(\n      // @ts-ignore\n      this.cameraForBoxAndBearing(\n        this.transform.pointLocation(Point.convert(p0)),\n        this.transform.pointLocation(Point.convert(p1)),\n        bearing,\n        // @ts-ignore\n        options,\n      ),\n      options,\n      eventData,\n    );\n  }\n  public stop(allowGestures?: boolean, easeId?: string) {\n    if (this.easeFrameId) {\n      this.cancelRenderFrame(this.easeFrameId);\n      // @ts-ignore\n      delete this.easeFrameId;\n      // @ts-ignore\n      delete this.onEaseFrame;\n    }\n\n    if (this.onEaseEnd) {\n      // The _onEaseEnd function might emit events which trigger new\n      // animation, which sets a new _onEaseEnd. Ensure we don't delete\n      // it unintentionally.\n      const onEaseEnd = this.onEaseEnd;\n      // @ts-ignore\n      delete this.onEaseEnd;\n      onEaseEnd.call(this, easeId);\n    }\n    // if (!allowGestures) {\n    //     const handlers = (this: any).handlers;\n    //     if (handlers) handlers.stop();\n    // }\n    return this;\n  }\n  public renderFrameCallback = () => {\n    const t = Math.min((now() - this.easeStart) / this.easeOptions.duration, 1);\n    this.onEaseFrame(this.easeOptions.easing(t));\n    if (t < 1) {\n      // this.easeFrameId = window.requestAnimationFrame(this.renderFrameCallback);\n      this.easeFrameId = this.requestRenderFrame(this.renderFrameCallback);\n    } else {\n      this.stop();\n    }\n  };\n  private normalizeBearing(bearing: number, currentBearing: number) {\n    bearing = wrap(bearing, -180, 180);\n    const diff = Math.abs(bearing - currentBearing);\n    if (Math.abs(bearing - 360 - currentBearing) < diff) {\n      bearing -= 360;\n    }\n    if (Math.abs(bearing + 360 - currentBearing) < diff) {\n      bearing += 360;\n    }\n    return bearing;\n  }\n\n  private normalizeCenter(center: LngLat) {\n    const tr = this.transform;\n    if (!tr.renderWorldCopies || tr.lngRange) {\n      return;\n    }\n\n    const delta = center.lng - tr.center.lng;\n    center.lng += delta > 180 ? -360 : delta < -180 ? 360 : 0;\n  }\n\n  private fireMoveEvents(eventData?: any) {\n    this.emit('move', new Event('move', eventData));\n    if (this.zooming) {\n      this.emit('zoom', new Event('zoom', eventData));\n    }\n    if (this.rotating) {\n      this.emit('rotate', new Event('rotate', eventData));\n    }\n    if (this.pitching) {\n      this.emit('rotate', new Event('pitch', eventData));\n    }\n  }\n  private prepareEase(\n    eventData: object | undefined,\n    noMoveStart: boolean = false,\n    currently: { [key: string]: boolean } = {},\n  ) {\n    this.moving = true;\n\n    if (!noMoveStart && !currently.moving) {\n      this.emit('movestart', new Event('movestart', eventData));\n    }\n    if (this.zooming && !currently.zooming) {\n      this.emit('zoomstart', new Event('zoomstart', eventData));\n    }\n    if (this.rotating && !currently.rotating) {\n      this.emit('rotatestart', new Event('rotatestart', eventData));\n    }\n    if (this.pitching && !currently.pitching) {\n      this.emit('pitchstart', new Event('pitchstart', eventData));\n    }\n  }\n\n  private afterEase(eventData: object | undefined, easeId?: string) {\n    // if this easing is being stopped to start another easing with\n    // the same id then don't fire any events to avoid extra start/stop events\n    if (this.easeId && easeId && this.easeId === easeId) {\n      return;\n    }\n    // @ts-ignore\n    delete this.easeId;\n\n    const wasZooming = this.zooming;\n    const wasRotating = this.rotating;\n    const wasPitching = this.pitching;\n    this.moving = false;\n    this.zooming = false;\n    this.rotating = false;\n    this.pitching = false;\n    this.padding = false;\n\n    if (wasZooming) {\n      this.emit('zoomend', new Event('zoomend', eventData));\n    }\n    if (wasRotating) {\n      this.emit('rotateend', new Event('rotateend', eventData));\n    }\n    if (wasPitching) {\n      this.emit('pitchend', new Event('pitchend', eventData));\n    }\n    this.emit('moveend', new Event('moveend', eventData));\n  }\n\n  private ease(\n    frame: (_: number) => void,\n    finish: () => void,\n    options: {\n      animate: boolean;\n      duration: number;\n      easing: (_: number) => number;\n    },\n  ) {\n    if (options.animate === false || options.duration === 0) {\n      frame(1);\n      finish();\n    } else {\n      this.easeStart = now();\n      this.easeOptions = options;\n      this.onEaseFrame = frame;\n      this.onEaseEnd = finish;\n      this.easeFrameId = this.requestRenderFrame(this.renderFrameCallback);\n    }\n  }\n\n  private cameraForBoxAndBearing(\n    p0: LngLatLike,\n    p1: LngLatLike,\n    bearing: number,\n    options?: ICameraOptions & {\n      offset: [number, number];\n      maxZoom: number;\n      padding: IPaddingOptions;\n    },\n  ): void | (ICameraOptions & IAnimationOptions) {\n    const defaultPadding = {\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n    };\n    options = merge(\n      {\n        padding: defaultPadding,\n        offset: [0, 0],\n        maxZoom: this.transform.maxZoom,\n      },\n      options,\n    );\n\n    if (typeof options.padding === 'number') {\n      const p = options.padding;\n      options.padding = {\n        top: p,\n        bottom: p,\n        right: p,\n        left: p,\n      };\n    }\n\n    options.padding = merge(defaultPadding, options.padding);\n    const tr = this.transform;\n    const edgePadding = tr.padding as IPaddingOptions;\n\n    // We want to calculate the upper right and lower left of the box defined by p0 and p1\n    // in a coordinate system rotate to match the destination bearing.\n    const p0world = tr.project(LngLat.convert(p0));\n    const p1world = tr.project(LngLat.convert(p1));\n    const p0rotated = p0world.rotate((-bearing * Math.PI) / 180);\n    const p1rotated = p1world.rotate((-bearing * Math.PI) / 180);\n\n    const upperRight = new Point(\n      Math.max(p0rotated.x, p1rotated.x),\n      Math.max(p0rotated.y, p1rotated.y),\n    );\n    const lowerLeft = new Point(\n      Math.min(p0rotated.x, p1rotated.x),\n      Math.min(p0rotated.y, p1rotated.y),\n    );\n\n    // Calculate zoom: consider the original bbox and padding.\n    const size = upperRight.sub(lowerLeft);\n    const scaleX =\n      (tr.width -\n        // @ts-ignore\n        (edgePadding.left +\n          // @ts-ignore\n          edgePadding.right +\n          // @ts-ignore\n          options.padding.left +\n          // @ts-ignore\n          options.padding.right)) /\n      size.x;\n    const scaleY =\n      (tr.height -\n        // @ts-ignore\n        (edgePadding.top +\n          // @ts-ignore\n          edgePadding.bottom +\n          // @ts-ignore\n          options.padding.top +\n          // @ts-ignore\n          options.padding.bottom)) /\n      size.y;\n\n    if (scaleY < 0 || scaleX < 0) {\n      return;\n    }\n\n    const zoom = Math.min(\n      tr.scaleZoom(tr.scale * Math.min(scaleX, scaleY)),\n      options.maxZoom,\n    );\n\n    // Calculate center: apply the zoom, the configured offset, as well as offset that exists as a result of padding.\n    const offset = Point.convert(options.offset);\n    // @ts-ignore\n    const paddingOffsetX = (options.padding.left - options.padding.right) / 2;\n    // @ts-ignore\n    const paddingOffsetY = (options.padding.top - options.padding.bottom) / 2;\n    const offsetAtInitialZoom = new Point(\n      offset.x + paddingOffsetX,\n      offset.y + paddingOffsetY,\n    );\n    const offsetAtFinalZoom = offsetAtInitialZoom.mult(\n      tr.scale / tr.zoomScale(zoom),\n    );\n\n    const center = tr.unproject(\n      p0world\n        .add(p1world)\n        .div(2)\n        .sub(offsetAtFinalZoom),\n    );\n\n    return {\n      center,\n      zoom,\n      bearing,\n    };\n  }\n\n  private fitInternal(\n    calculatedOptions?: ICameraOptions & IAnimationOptions,\n    options?: IAnimationOptions & ICameraOptions,\n    eventData?: any,\n  ) {\n    // cameraForBounds warns + returns undefined if unable to fit:\n    if (!calculatedOptions) {\n      return this;\n    }\n\n    options = merge(calculatedOptions, options);\n    // Explictly remove the padding field because, calculatedOptions already accounts for padding by setting zoom and center accordingly.\n    delete options.padding;\n    // @ts-ignore\n    return options.linear\n      ? this.easeTo(options, eventData)\n      : this.flyTo(options, eventData);\n  }\n}\n"],"file":"camera.js"}