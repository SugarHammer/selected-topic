{"version":3,"sources":["../../../src/handler/touch/two_touch.ts"],"names":["TwoTouchHandler","reset","active","firstTwoTouches","points","pinchAround","e","mapTouches","length","identifier","start","preventDefault","idA","idB","a","getTouchById","b","aroundCenter","add","div","move","DOM","suppressClick","options","enabled","around","i"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport Point from '../../geo/point';\nimport DOM from '../../utils/dom';\n\nexport default class TwoTouchHandler {\n  protected enabled: boolean;\n  protected active: boolean;\n  protected firstTwoTouches: [number, number];\n  protected vector: Point;\n  protected startVector: Point;\n  protected aroundCenter: boolean;\n\n  constructor() {\n    this.reset();\n  }\n\n  public reset() {\n    this.active = false;\n    delete this.firstTwoTouches;\n  }\n  public start(points: [Point, Point]) {\n    return;\n  } // eslint-disable-line\n  public move(\n    points: [Point, Point],\n    pinchAround: Point | null,\n    e: TouchEvent,\n  ) {\n    return;\n  } // eslint-disable-line\n\n  public touchstart(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    // console.log(e.target, e.targetTouches.length ? e.targetTouches[0].target : null);\n    // log('touchstart', points, e.target.innerHTML, e.targetTouches.length ? e.targetTouches[0].target.innerHTML: undefined);\n    if (this.firstTwoTouches || mapTouches.length < 2) {\n      return;\n    }\n\n    this.firstTwoTouches = [mapTouches[0].identifier, mapTouches[1].identifier];\n\n    // implemented by child classes\n    this.start([points[0], points[1]]);\n  }\n\n  public touchmove(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    if (!this.firstTwoTouches) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const [idA, idB] = this.firstTwoTouches;\n    const a = getTouchById(mapTouches, points, idA);\n    const b = getTouchById(mapTouches, points, idB);\n    if (!a || !b) {\n      return;\n    }\n    const pinchAround = this.aroundCenter ? null : a.add(b).div(2);\n\n    // implemented by child classes\n    return this.move([a, b], pinchAround, e);\n  }\n\n  public touchend(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    if (!this.firstTwoTouches) {\n      return;\n    }\n\n    const [idA, idB] = this.firstTwoTouches;\n    const a = getTouchById(mapTouches, points, idA);\n    const b = getTouchById(mapTouches, points, idB);\n    if (a && b) {\n      return;\n    }\n\n    if (this.active) {\n      DOM.suppressClick();\n    }\n\n    this.reset();\n  }\n\n  public touchcancel() {\n    this.reset();\n  }\n\n  public enable(options?: { around?: 'center' }) {\n    this.enabled = true;\n    this.aroundCenter = !!options && options.around === 'center';\n  }\n\n  public disable() {\n    this.enabled = false;\n    this.reset();\n  }\n\n  public isEnabled() {\n    return this.enabled;\n  }\n\n  public isActive() {\n    return this.active;\n  }\n}\n\nfunction getTouchById(\n  mapTouches: Touch[],\n  points: Point[],\n  identifier: number,\n) {\n  for (let i = 0; i < mapTouches.length; i++) {\n    if (mapTouches[i].identifier === identifier) {\n      return points[i];\n    }\n  }\n}\n"],"file":"two_touch.js"}