{"version":3,"sources":["../src/hash.ts"],"names":["Hash","hashName","loc","getCurrentHash","length","some","v","isNaN","bearing","map","dragRotate","isEnabled","touchZoomRotate","getBearing","jumpTo","center","zoom","pitch","hash","window","location","replace","keyval","split","part","forEach","getHashString","history","replaceState","state","SecurityError","encodeURIComponent","updateHash","updateHashUnthrottled","$window","addEventListener","onHashChange","on","removeEventListener","off","mapFeedback","getCenter","Math","round","getZoom","precision","ceil","LN2","log","LN10","m","pow","lng","lat","getPitch","found","parts","slice","key","filter","a","push","join"],"mappings":"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","sourcesContent":["// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport { $window } from '@antv/l7-utils';\nimport { throttle } from 'lodash';\nimport { Map } from './map';\n\n/*\n * Adds the map's position to its page's location hash.\n * Passed as an option to the map object.\n *\n * @returns {Hash} `this`\n */\nclass Hash {\n  private map: Map;\n  private updateHash: () => number | void;\n  private hashName?: string;\n\n  constructor(hashName?: string) {\n    this.hashName = hashName && encodeURIComponent(hashName);\n\n    // Mobile Safari doesn't allow updating the hash more than 100 times per 30 seconds.\n    this.updateHash = throttle(this.updateHashUnthrottled, (30 * 1000) / 100);\n  }\n  public addTo(map: Map) {\n    this.map = map;\n    $window.addEventListener('hashchange', this.onHashChange, false);\n    this.map.on('moveend', this.updateHash);\n    return this;\n  }\n  public remove() {\n    $window.removeEventListener('hashchange', this.onHashChange, false);\n    this.map.off('moveend', this.updateHash);\n    // clearTimeout(this.updateHash());\n\n    // @ts-ignore\n    delete this.map;\n    return this;\n  }\n\n  public onHashChange = () => {\n    const loc = this.getCurrentHash();\n    if (loc.length >= 3 && !loc.some((v: string) => isNaN(+v))) {\n      const bearing =\n        this.map.dragRotate.isEnabled() && this.map.touchZoomRotate.isEnabled()\n          ? +(loc[3] || 0)\n          : this.map.getBearing();\n      this.map.jumpTo({\n        center: [+loc[2], +loc[1]],\n        zoom: +loc[0],\n        bearing,\n        pitch: +(loc[4] || 0),\n      });\n      return true;\n    }\n    return false;\n  };\n\n  private getCurrentHash = () => {\n    // Get the current hash from location, stripped from its number sign\n    const hash = window.location.hash.replace('#', '');\n    if (this.hashName) {\n      // Split the parameter-styled hash into parts and find the value we need\n      let keyval;\n      hash\n        .split('&')\n        .map((part) => part.split('='))\n        .forEach((part) => {\n          if (part[0] === this.hashName) {\n            keyval = part;\n          }\n        });\n      return (keyval ? keyval[1] || '' : '').split('/');\n    }\n    return hash.split('/');\n  };\n\n  private getHashString(mapFeedback?: boolean) {\n    const center = this.map.getCenter();\n    const zoom = Math.round(this.map.getZoom() * 100) / 100;\n    // derived from equation: 512px * 2^z / 360 / 10^d < 0.5px\n    const precision = Math.ceil(\n      (zoom * Math.LN2 + Math.log(512 / 360 / 0.5)) / Math.LN10,\n    );\n    const m = Math.pow(10, precision);\n    const lng = Math.round(center.lng * m) / m;\n    const lat = Math.round(center.lat * m) / m;\n    const bearing = this.map.getBearing();\n    const pitch = this.map.getPitch();\n    let hash = '';\n    if (mapFeedback) {\n      // new map feedback site has some constraints that don't allow\n      // us to use the same hash format as we do for the Map hash option.\n      hash += `/${lng}/${lat}/${zoom}`;\n    } else {\n      hash += `${zoom}/${lat}/${lng}`;\n    }\n\n    if (bearing || pitch) {\n      hash += `/${Math.round(bearing * 10) / 10}`;\n    }\n    if (pitch) {\n      hash += `/${Math.round(pitch)}`;\n    }\n\n    if (this.hashName) {\n      const hashName = this.hashName;\n      let found = false;\n      const parts = window.location.hash\n        .slice(1)\n        .split('&')\n        .map((part) => {\n          const key = part.split('=')[0];\n          if (key === hashName) {\n            found = true;\n            return `${key}=${hash}`;\n          }\n          return part;\n        })\n        .filter((a) => a);\n      if (!found) {\n        parts.push(`${hashName}=${hash}`);\n      }\n      return `#${parts.join('&')}`;\n    }\n\n    return `#${hash}`;\n  }\n\n  private updateHashUnthrottled = () => {\n    const hash = this.getHashString();\n    try {\n      window.history.replaceState(window.history.state, '', hash);\n    } catch (SecurityError) {\n      // IE11 does not allow this if the page is within an iframe created\n      // with iframe.contentWindow.document.write(...).\n      // https://github.com/mapbox/mapbox-gl-js/issues/7410\n    }\n  };\n}\n\nexport default Hash;\n"],"file":"hash.js"}