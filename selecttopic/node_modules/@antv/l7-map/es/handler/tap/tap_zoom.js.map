{"version":3,"sources":["../../../src/handler/tap/tap_zoom.ts"],"names":["TapRecognizer","TapZoomHandler","zoomIn","numTouches","numTaps","zoomOut","reset","active","e","points","mapTouches","touchstart","touchmove","zoomInPoint","touchend","zoomOutPoint","preventDefault","setTimeout","cameraAnimation","map","easeTo","duration","zoom","getZoom","around","unproject","originalEvent","enabled"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { EarthMap } from '../../earthmap';\nimport Point from '../../geo/point';\nimport { Map } from '../../map';\nimport TapRecognizer from './tap_recognizer';\n\nexport default class TapZoomHandler {\n  public enabled: boolean;\n  public active: boolean;\n  public zoomIn: TapRecognizer;\n  public zoomOut: TapRecognizer;\n\n  constructor() {\n    this.zoomIn = new TapRecognizer({\n      numTouches: 1,\n      numTaps: 2,\n    });\n\n    this.zoomOut = new TapRecognizer({\n      numTouches: 2,\n      numTaps: 1,\n    });\n\n    this.reset();\n  }\n\n  public reset() {\n    this.active = false;\n    this.zoomIn.reset();\n    this.zoomOut.reset();\n  }\n\n  public touchstart(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    this.zoomIn.touchstart(e, points, mapTouches);\n    this.zoomOut.touchstart(e, points, mapTouches);\n  }\n\n  public touchmove(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    this.zoomIn.touchmove(e, points, mapTouches);\n    this.zoomOut.touchmove(e, points, mapTouches);\n  }\n\n  public touchend(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    const zoomInPoint = this.zoomIn.touchend(e, points, mapTouches);\n    const zoomOutPoint = this.zoomOut.touchend(e, points, mapTouches);\n\n    if (zoomInPoint) {\n      this.active = true;\n      e.preventDefault();\n      setTimeout(() => this.reset(), 0);\n      return {\n        cameraAnimation: (map: Map | EarthMap) =>\n          map.easeTo(\n            {\n              duration: 300,\n              zoom: map.getZoom() + 1,\n              around: map.unproject(zoomInPoint),\n            },\n            { originalEvent: e },\n          ),\n      };\n    } else if (zoomOutPoint) {\n      this.active = true;\n      e.preventDefault();\n      setTimeout(() => this.reset(), 0);\n      return {\n        cameraAnimation: (map: Map | EarthMap) =>\n          map.easeTo(\n            {\n              duration: 300,\n              zoom: map.getZoom() - 1,\n              around: map.unproject(zoomOutPoint),\n            },\n            { originalEvent: e },\n          ),\n      };\n    }\n  }\n\n  public touchcancel() {\n    this.reset();\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n    this.reset();\n  }\n\n  public isEnabled() {\n    return this.enabled;\n  }\n\n  public isActive() {\n    return this.active;\n  }\n}\n"],"file":"tap_zoom.js"}