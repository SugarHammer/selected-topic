import { IControlOption, IControlService, ILayerService, IMapService, IRendererService, PositionType } from '@antv/l7-core';
import { EventEmitter } from 'eventemitter3';
import { Container } from 'inversify';
export { PositionType } from '@antv/l7-core';
export default class Control extends EventEmitter {
    controlOption: IControlOption;
    protected container: HTMLElement;
    protected sceneContainer: Container;
    protected mapsService: IMapService;
    protected renderService: IRendererService;
    protected layerService: ILayerService;
    protected controlService: IControlService;
    private isShow;
    constructor(cfg?: Partial<IControlOption>);
    getDefault(): {
        position: PositionType;
        name: string;
    };
    setPosition(position?: PositionType): this;
    addTo(sceneContainer: Container): this;
    onAdd(): HTMLElement;
    onRemove(): void;
    hide(): void;
    show(): void;
    remove(): this | undefined;
    _refocusOnMap(e: MouseEvent): void;
}
