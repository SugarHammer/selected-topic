{"version":3,"sources":["../src/markerlayer.ts"],"names":["TYPES","bindAll","boundsContains","DOM","padBounds","Satistics","EventEmitter","Supercluster","Marker","MarkerLayer","option","markerLayerOption","getDefault","zoom","clusterOption","cluster","radius","maxZoom","minZoom","style","className","scene","mapsService","get","IMapService","initCluster","update","on","addMarkers","marker","addPoint","markers","length","push","indexOf","markerIndex","splice","map","m","getElement","opacity","clusterMarkers","getMarkers","forEach","addTo","remove","clusterMarker","off","clear","removeAllListeners","id","getLnglat","lng","lat","feature","geometry","type","coordinates","properties","getExtData","marker_id","points","clusterIndex","load","viewBounds","viewBBox","concat","clusterPoint","getClusters","field","method","cluster_id","clusterData","getLeaves","columnData","item","data","column","getColumn","stat","getSatByColumn","fieldName","toFixed","clusterId","limit","Infinity","offset","element","generateElement","bind","setLnglat","getZoom","bbox","getBounds","Math","abs","floor","getClusterMarker","el","create","label","span","point_count","text","textContent"],"mappings":"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","sourcesContent":["import { IMapService, IMarker, TYPES } from '@antv/l7-core';\nimport {\n  bindAll,\n  boundsContains,\n  DOM,\n  IBounds,\n  padBounds,\n  Satistics,\n} from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\nimport { merge } from 'lodash';\n// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport Supercluster from 'supercluster/dist/supercluster';\nimport Marker from './marker';\ntype CallBack = (...args: any[]) => any;\ninterface IMarkerStyleOption {\n  element?: CallBack;\n  style: { [key: string]: any } | CallBack;\n  className: string;\n  field?: string;\n  method?: 'sum' | 'max' | 'min' | 'mean';\n  radius: number;\n  maxZoom: number;\n  minZoom: number;\n  zoom: number;\n}\n\ninterface IMarkerLayerOption {\n  cluster: boolean;\n  clusterOption: Partial<IMarkerStyleOption>;\n}\n\ninterface IPointFeature {\n  geometry: {\n    type: 'Point';\n    coordinates: [number, number];\n  };\n  properties: any;\n}\nexport default class MarkerLayer extends EventEmitter {\n  private markers: IMarker[] = [];\n  private markerLayerOption: IMarkerLayerOption;\n  private clusterIndex: Supercluster;\n  private points: IPointFeature[] = [];\n  private clusterMarkers: IMarker[] = [];\n  private mapsService: IMapService<unknown>;\n  private scene: Container;\n  private zoom: number;\n  private bbox: IBounds;\n\n  constructor(option?: Partial<IMarkerLayerOption>) {\n    super();\n    this.markerLayerOption = merge(this.getDefault(), option);\n    bindAll(['update'], this);\n    this.zoom = this.markerLayerOption.clusterOption?.zoom || -99;\n  }\n  public getDefault() {\n    return {\n      cluster: false,\n      clusterOption: {\n        radius: 80,\n        maxZoom: 20,\n        minZoom: 0,\n        zoom: -99,\n        style: {},\n        className: '',\n      },\n    };\n  }\n  public addTo(scene: Container) {\n    // this.remove();\n    this.scene = scene;\n    this.mapsService = scene.get<IMapService>(TYPES.IMapService);\n    if (this.markerLayerOption.cluster) {\n      this.initCluster();\n      this.update();\n      // 地图视野变化时，重新计算视野内的聚合点。\n      this.mapsService.on('camerachange', this.update); // amap1.x 更新事件\n      this.mapsService.on('viewchange', this.update); // amap2.0 更新事件\n    }\n    this.addMarkers();\n    return this;\n  }\n  public addMarker(marker: IMarker) {\n    const cluster = this.markerLayerOption.cluster;\n    if (cluster) {\n      this.addPoint(marker, this.markers.length);\n    }\n    this.markers.push(marker);\n  }\n\n  public removeMarker(marker: IMarker) {\n    this.markers.indexOf(marker);\n    const markerIndex = this.markers.indexOf(marker);\n    if (markerIndex > -1) {\n      this.markers.splice(markerIndex, 1);\n    }\n  }\n\n  /**\n   * 隐藏 marker 在每个 marker 上单独修改属性而不是在 markerContainer 上修改（在 markerContainer 修改会有用户在场景加载完之前调用失败的问题）\n   */\n  public hide() {\n    this.markers.map((m) => {\n      m.getElement().style.opacity = '0';\n    });\n\n    this.clusterMarkers.map((m) => {\n      m.getElement().style.opacity = '0';\n    });\n  }\n\n  /**\n   * 显示 marker\n   */\n  public show() {\n    this.markers.map((m) => {\n      m.getElement().style.opacity = '1';\n    });\n\n    this.clusterMarkers.map((m) => {\n      m.getElement().style.opacity = '1';\n    });\n  }\n\n  public getMarkers() {\n    const cluster = this.markerLayerOption.cluster;\n    return cluster ? this.clusterMarkers : this.markers;\n  }\n\n  public addMarkers() {\n    this.getMarkers().forEach((marker: IMarker) => {\n      marker.addTo(this.scene);\n    });\n  }\n  public clear() {\n    this.markers.forEach((marker: IMarker) => {\n      marker.remove();\n    });\n    this.clusterMarkers.forEach((clusterMarker: IMarker) => {\n      clusterMarker.remove();\n    });\n    this.mapsService.off('camerachange', this.update);\n    this.markers = [];\n    this.clusterMarkers = [];\n  }\n\n  public destroy() {\n    this.clear();\n    this.removeAllListeners();\n  }\n\n  private addPoint(marker: IMarker, id: number) {\n    const { lng, lat } = marker.getLnglat();\n    const feature: IPointFeature = {\n      geometry: {\n        type: 'Point',\n        coordinates: [lng, lat],\n      },\n      properties: {\n        ...marker.getExtData(),\n        marker_id: id,\n      },\n    };\n    this.points.push(feature);\n  }\n\n  private initCluster() {\n    if (!this.markerLayerOption.cluster) {\n      return;\n    }\n    const { radius, minZoom = 0, maxZoom } = this.markerLayerOption\n      .clusterOption as IMarkerStyleOption;\n    this.clusterIndex = new Supercluster({\n      radius,\n      minZoom,\n      maxZoom,\n    });\n    // @ts-ignore\n    this.clusterIndex.load(this.points);\n  }\n\n  private getClusterMarker(viewBounds: IBounds, zoom: number) {\n    const viewBBox = viewBounds[0].concat(viewBounds[1]);\n    const clusterPoint = this.clusterIndex.getClusters(viewBBox, zoom);\n    this.clusterMarkers.forEach((marker: IMarker) => {\n      marker.remove();\n    });\n    this.clusterMarkers = [];\n    clusterPoint.forEach((feature: any) => {\n      const { field, method } = this.markerLayerOption.clusterOption;\n      // 处理聚合数据\n      if (feature.properties && feature.properties?.cluster_id) {\n        const clusterData = this.getLeaves(feature.properties?.cluster_id);\n        feature.properties.clusterData = clusterData;\n        if (field && method) {\n          const columnData = clusterData?.map((item: any) => {\n            const data = {\n              [field]: item.properties[field],\n            };\n            return data;\n          });\n          const column = Satistics.getColumn(columnData as any, field);\n          const stat = Satistics.getSatByColumn(method, column);\n          const fieldName = 'point_' + method;\n          feature.properties[fieldName] = stat.toFixed(2);\n        }\n      }\n      const marker = this.clusterMarker(feature);\n      this.clusterMarkers.push(marker);\n      marker.addTo(this.scene);\n    });\n  }\n  private getLeaves(\n    clusterId: number,\n    limit: number = Infinity,\n    offset: number = 0,\n  ) {\n    if (!clusterId) {\n      return null;\n    }\n    return this.clusterIndex.getLeaves(clusterId, limit, offset);\n  }\n  private clusterMarker(feature: any) {\n    const clusterOption = this.markerLayerOption.clusterOption;\n\n    const {\n      element = this.generateElement.bind(this),\n    } = clusterOption as IMarkerStyleOption;\n    const marker = new Marker({\n      element: element(feature),\n    }).setLnglat({\n      lng: feature.geometry.coordinates[0],\n      lat: feature.geometry.coordinates[1],\n    });\n    return marker;\n  }\n  private normalMarker(feature: any) {\n    const marker_id = feature.properties.marker_id;\n    return this.markers[marker_id];\n  }\n\n  private update() {\n    const zoom = this.mapsService.getZoom();\n    const bbox = this.mapsService.getBounds();\n    if (\n      !this.bbox ||\n      Math.abs(zoom - this.zoom) >= 1 ||\n      !boundsContains(this.bbox, bbox)\n    ) {\n      this.bbox = padBounds(bbox, 0.5);\n      this.zoom = Math.floor(zoom);\n      this.getClusterMarker(this.bbox, this.zoom);\n    }\n  }\n\n  private generateElement(feature: any) {\n    const el = DOM.create('div', 'l7-marker-cluster');\n    const label = DOM.create('div', '', el);\n    const span = DOM.create('span', '', label);\n    const { field, method } = this.markerLayerOption.clusterOption;\n    feature.properties.point_count = feature.properties.point_count || 1;\n\n    const text =\n      field && method\n        ? feature.properties['point_' + method] || feature.properties[field]\n        : feature.properties.point_count;\n    span.textContent = text;\n    return el;\n  }\n}\n"],"file":"markerlayer.js"}