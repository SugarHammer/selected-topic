{"version":3,"sources":["../../src/regl/ReglBuffer.ts"],"names":["gl","dataTypeMap","usageMap","ReglBuffer","reGl","options","data","usage","type","buffer","STATIC_DRAW","UNSIGNED_BYTE","destroy","offset","subdata"],"mappings":";;;AAAA,SAASA,EAAT,QAA0D,eAA1D;AAEA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;;IAMqBC,U;AAGnB,sBAAYC,IAAZ,EAA6BC,OAA7B,EAAoE;AAAA;;AAAA;;AAClE,QAAQC,IAAR,GAA8BD,OAA9B,CAAQC,IAAR;AAAA,QAAcC,KAAd,GAA8BF,OAA9B,CAAcE,KAAd;AAAA,QAAqBC,IAArB,GAA8BH,OAA9B,CAAqBG,IAArB;AACA,SAAKC,MAAL,GAAcL,IAAI,CAACK,MAAL,CAAY;AACxBH,MAAAA,IAAI,EAAJA,IADwB;AAExBC,MAAAA,KAAK,EAAEL,QAAQ,CAACK,KAAK,IAAIP,EAAE,CAACU,WAAb,CAFS;AAGxBF,MAAAA,IAAI,EAAEP,WAAW,CAACO,IAAI,IAAIR,EAAE,CAACW,aAAZ;AAHO,KAAZ,CAAd;AAMD;;;;WAED,eAAa;AACX,aAAO,KAAKF,MAAZ;AACD;;;WAED,mBAAiB;AACf,WAAKA,MAAL,CAAYG,OAAZ;AACD;;;WAED,uBAMG;AAAA,UALDN,IAKC,QALDA,IAKC;AAAA,UAJDO,MAIC,QAJDA,MAIC;AACD,WAAKJ,MAAL,CAAYK,OAAZ,CAAoBR,IAApB,EAA0BO,MAA1B;AACD;;;;;;SA7BkBV,U","sourcesContent":["import { gl, IBuffer, IBufferInitializationOptions } from '@antv/l7-core';\nimport regl from 'l7regl';\nimport { dataTypeMap, usageMap } from './constants';\n\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\nexport default class ReglBuffer implements IBuffer {\n  private buffer: regl.Buffer;\n\n  constructor(reGl: regl.Regl, options: IBufferInitializationOptions) {\n    const { data, usage, type } = options;\n    this.buffer = reGl.buffer({\n      data,\n      usage: usageMap[usage || gl.STATIC_DRAW],\n      type: dataTypeMap[type || gl.UNSIGNED_BYTE],\n      // length: 0,\n    });\n  }\n\n  public get() {\n    return this.buffer;\n  }\n\n  public destroy() {\n    this.buffer.destroy();\n  }\n\n  public subData({\n    data,\n    offset,\n  }: {\n    data: number[] | number[][] | Uint8Array | Uint16Array | Uint32Array;\n    offset: number;\n  }) {\n    this.buffer.subdata(data, offset);\n  }\n}\n"],"file":"ReglBuffer.js"}