import { Point } from './point';
import { PointExpression, BoundsLiteral } from '../interface';
export declare class Bounds {
    min: Point;
    max: Point;
    constructor(topLeft: PointExpression | BoundsLiteral, bottomRight?: PointExpression);
    extend(point: Point): Bounds;
    getCenter(round?: boolean): Point;
    getBottomLeft(): Point;
    getTopRight(): Point;
    getBottomRight(): Point;
    getTopLeft(): Point;
    getSize(): Point;
    /**
     * 判断是否包含 输入 points 或者 bounds
     * @param obj
     */
    contains(obj: PointExpression | BoundsLiteral | Bounds): boolean;
    /**
     * 判断两个bounds是否相交 ,
     * @param bounds
     */
    intersect(bounds: BoundsLiteral): boolean;
    /**
     * 判断bounds是否相互覆盖
     * @param bounds
     */
    overlaps(bounds: BoundsLiteral): boolean;
    isValid(): boolean;
}
export declare function toBounds(topLeft: PointExpression | BoundsLiteral | Bounds, bottomRight?: PointExpression): Bounds;
