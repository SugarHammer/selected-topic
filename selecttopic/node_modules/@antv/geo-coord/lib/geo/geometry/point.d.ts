import { PointExpression } from '../interface';
export declare class Point {
    x: number;
    y: number;
    /**
     * 平面坐标
     * @param x x坐标
     * @param y y坐标
     * @param round 是否取整
     */
    constructor(x: number, y: number, round?: boolean);
    clone(): Point;
    add(point: PointExpression, y?: number, round?: boolean): Point;
    _add(point: Point): this;
    subtract(point: PointExpression, y?: number, round?: boolean): Point;
    private _subtract;
    divideBy(num: number): Point;
    private _divideBy;
    multiplyBy(num: number): Point;
    _multiplyBy(num: number): Point;
    scaleBy(point: Point): Point;
    unscaleBy(point: Point): Point;
    round(): Point;
    private _round;
    floor(): Point;
    private _floor;
    ceil(): Point;
    private _ceil;
    trunc(): Point;
    _trunc(): Point;
    distanceTo(point: PointExpression): number;
    equals(point: PointExpression, threshold?: number): boolean;
    contains(point: PointExpression): boolean;
    toString(): string;
}
export declare function toPoint(x: any, y?: number, round?: boolean): Point;
