import { LngLatExpression, LngLatBoundsExpression, LngLatBoundsLiteral } from '../interface';
import { LngLat } from './lng-lat';
export declare class LngLatBounds {
    southWest: LngLat;
    northEast: LngLat;
    constructor(corner1: LngLatExpression | LngLatBoundsLiteral, corner2?: LngLatExpression);
    extend(obj: LngLatExpression | LngLatBoundsExpression): LngLatBounds;
    /**
     * 放大或者缩小区域
     * @param bufferRatio 缩放比率
     */
    pad(bufferRatio: number): LngLatBounds;
    getCenter(): LngLat;
    getSouthWest(): LngLat;
    getNorthEast(): LngLat;
    getNorthWest(): LngLat;
    getSouthEast(): LngLat;
    getWest(): number;
    getSouth(): number;
    getNorth(): number;
    getEast(): number;
    contains(obj: LngLatExpression | LngLatBoundsExpression): boolean;
    intersects(bounds: LngLatBoundsExpression): boolean;
    overlaps(bounds: LngLatBoundsExpression): boolean;
    toBBoxString(): string;
    equals(bounds: LngLatBoundsExpression, maxMargin: number): boolean;
    isValid(): boolean;
}
export declare function toLngLatBounds(a: LngLatExpression | LngLatBounds | LngLatBoundsLiteral, b?: LngLatExpression): LngLatBounds;
