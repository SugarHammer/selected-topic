"use strict";
exports.__esModule = true;
var earth_1 = require("../crs/earth");
var util_1 = require("../../util");
var lng_lat_bounds_1 = require("./lng-lat-bounds");
var LngLat = /** @class */ (function () {
    function LngLat(lng, lat, alt) {
        if (isNaN(lat) || isNaN(lng)) {
            throw new Error("\u65E0\u6548\u7684\u7ECF\u7EAC\u5EA6\u53C2\u6570: (" + lng + ",' " + lat);
        }
        this.lat = +lat;
        this.lng = +lng;
        if (alt !== undefined) {
            this.alt = +alt;
        }
    }
    LngLat.prototype.equals = function (lnglat, threshold) {
        if (!lnglat) {
            return false;
        }
        var newLnglat = toLngLat(lnglat);
        if (newLnglat === undefined) {
            return false;
        }
        var margin = Math.max(Math.abs(this.lat - newLnglat.lat), Math.abs(this.lng - newLnglat.lng));
        return margin <= (threshold === undefined ? 1.0e-9 : threshold);
    };
    LngLat.prototype.toString = function (precision) {
        return ("LngLat(" + util_1.formatNum(this.lng, precision) + ", " + util_1.formatNum(this.lat, precision) + ")");
    };
    LngLat.prototype.distanceTo = function (other) {
        return earth_1.earth.distance(this, toLngLat(other));
    };
    LngLat.prototype.wrap = function () {
        // console.log(earth.infinite);
        return earth_1.earth.wrapLngLat(this);
    };
    LngLat.prototype.toBounds = function (sizeInMeters) {
        var latAccuracy = 180 * sizeInMeters / 40075017;
        var lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);
        return lng_lat_bounds_1.toLngLatBounds([this.lng - lngAccuracy, this.lat - latAccuracy], [this.lng + lngAccuracy, this.lat + latAccuracy]);
    };
    LngLat.prototype.clone = function () {
        return new LngLat(this.lng, this.lat, this.alt);
    };
    return LngLat;
}());
exports.LngLat = LngLat;
function toLngLat(a, b, c) {
    if (a instanceof LngLat) {
        return a;
    }
    if (Array.isArray(a) && typeof a[0] !== 'object') {
        if (a.length === 3) {
            return new LngLat(a[0], a[1], a[2]);
        }
        if (a.length === 2) {
            return new LngLat(a[0], a[1]);
        }
    }
    if (a === undefined || a === null) {
        throw new Error("\u65E0\u6548\u7684\u7ECF\u7EAC\u5EA6\u53C2\u6570: (" + a + ", " + b + ")");
    }
    if (typeof a === 'object' && 'lat' in a) {
        return new LngLat(a.lng, 'lng' in a ? a.lat : 0, a.alt);
    }
    if (b === undefined) {
        throw new Error("\u65E0\u6548\u7684\u7ECF\u7EAC\u5EA6\u53C2\u6570: (" + a + ", " + b + ")");
    }
    return new LngLat(Number(a), b, c);
}
exports.toLngLat = toLngLat;
//# sourceMappingURL=lng-lat.js.map