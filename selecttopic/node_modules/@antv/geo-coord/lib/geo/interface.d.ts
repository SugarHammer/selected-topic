import { Point } from './geometry/point';
import { Bounds } from './geometry/bounds';
import { LngLat } from './geometry/lng-lat';
import { LngLatBounds } from './geometry/lng-lat-bounds';
export declare type PointTuple = [number, number];
export declare type PointExpression = Point | PointObject | PointTuple;
export declare type BoundsLiteral = [PointExpression, PointExpression];
export declare type BoundsExpression = Bounds | BoundsLiteral;
export declare type LngLatTuple = [number, number] | [number, number, number];
export declare type LngLatExpression = LngLat | LngLatObject | LngLatTuple;
export declare type LngLatBoundsLiteral = LngLatTuple[];
export declare type LngLatBoundsExpression = LngLatBounds | LngLatBoundsLiteral;
export declare type PointObject = {
    x: number;
    y: number;
};
export declare type LngLatObject = {
    lng: number;
    lat: number;
    alt?: number;
};
export declare type CRSOption = {
    wrapLng: number[] | null;
    wrapLat: number[] | null;
    projection: any;
    transformation: any;
    [propName: string]: any;
    lngLatToPoint(lnglat: LngLat, zoom: number): Point;
};
