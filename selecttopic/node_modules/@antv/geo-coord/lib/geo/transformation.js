"use strict";
exports.__esModule = true;
var point_1 = require("./geometry/point");
var Transformation = /** @class */ (function () {
    function Transformation(a, b, c, d) {
        if (Array.isArray(a)) {
            // use array properties
            this.a = a[0];
            this.b = a[1];
            this.c = a[2];
            this.d = a[3];
            return;
        }
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
    }
    Transformation.prototype.transform = function (point, scale) {
        return this._transform(point.clone(), scale);
    };
    Transformation.prototype._transform = function (point, scale) {
        var newScale = scale || 1;
        point.x = newScale * (this.a * point.x + this.b);
        point.y = newScale * (this.c * point.y + this.d);
        return point;
    };
    Transformation.prototype.untransform = function (point, scale) {
        var newScale = scale || 1;
        return new point_1.Point((point.x / newScale - this.b) / this.a, (point.y / newScale - this.d) / this.c);
    };
    return Transformation;
}());
exports.Transformation = Transformation;
//# sourceMappingURL=transformation.js.map