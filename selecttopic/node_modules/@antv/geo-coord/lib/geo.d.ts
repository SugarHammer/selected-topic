import Coord from './base';
import { LngLat } from './geo/geometry/lng-lat';
import { LngLatExpression } from './geo/interface';
import { Point } from './geo/geometry/point';
import { CoordCfg, PointType } from './interface';
export default class Geo extends Coord {
    type: string;
    isGeo: boolean;
    constructor(cfg: CoordCfg);
    _init(): void;
    getZoom(): number;
    setZoom(zoom: number): void;
    setCenter(center: LngLatExpression): void;
    getCenter(): LngLat;
    /**
     * 经纬度坐标转画布坐标 统一和其他坐标系传入方式 coordControls使用
     * @param point
     */
    convertPoint(point: PointType): PointType;
    /**
     * 画布坐标转经纬坐标 统一和其他坐标系传入方式
     * @param point
     */
    invertPoint(point: PointType): PointType;
    /**
    * 画布坐标转经纬坐标 同convertPoint 对用户使用
    * @param point
    */
    layerPointToLatLng(point: Point): LngLat;
    /**
    * 经纬度坐标转画布坐标 同 invertPoint 对用户使用
    * @param lngLat
    */
    latLngToLayerPoint(lngLat: LngLatExpression): Point;
    getPixelOrigin(): Point;
    /**
     * 经纬度坐标转地图像素坐标
     * @param lnglat
     * @param zoom
     */
    project(lnglat: LngLatExpression, zoom?: number): Point;
    /**
     * 地图像素坐标转经纬度
     * @param point
     * @param zoom
     */
    unproject(point: Point, zoom?: number): LngLat;
    distance(lnglat1: LngLatExpression, lnglat2: LngLatExpression): number;
}
