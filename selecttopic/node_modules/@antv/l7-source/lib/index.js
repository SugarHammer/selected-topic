"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  DEFAULT_DATA: true,
  DEFAULT_PARSER: true,
  getTransform: true,
  registerTransform: true,
  getParser: true,
  registerParser: true
};
exports.default = exports.DEFAULT_PARSER = exports.DEFAULT_DATA = void 0;
Object.defineProperty(exports, "getParser", {
  enumerable: true,
  get: function get() {
    return _factory.getParser;
  }
});
Object.defineProperty(exports, "getTransform", {
  enumerable: true,
  get: function get() {
    return _factory.getTransform;
  }
});
Object.defineProperty(exports, "registerParser", {
  enumerable: true,
  get: function get() {
    return _factory.registerParser;
  }
});
Object.defineProperty(exports, "registerTransform", {
  enumerable: true,
  get: function get() {
    return _factory.registerTransform;
  }
});

var _factory = require("./factory");

var _csv = _interopRequireDefault(require("./parser/csv"));

var _geojson = _interopRequireDefault(require("./parser/geojson"));

var _image = _interopRequireDefault(require("./parser/image"));

var _json = _interopRequireWildcard(require("./parser/json"));

var _raster = _interopRequireDefault(require("./parser/raster"));

var _source = _interopRequireDefault(require("./source"));

var _cluster = require("./transform/cluster");

var _filter = require("./transform/filter");

var _grid = require("./transform/grid");

var _hexagon = require("./transform/hexagon");

var _join = require("./transform/join");

var _map = require("./transform/map");

var _interface = require("./interface");

Object.keys(_interface).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _interface[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _interface[key];
    }
  });
});

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

(0, _factory.registerParser)('geojson', _geojson.default);
(0, _factory.registerParser)('image', _image.default);
(0, _factory.registerParser)('csv', _csv.default);
(0, _factory.registerParser)('json', _json.default);
(0, _factory.registerParser)('raster', _raster.default);
(0, _factory.registerTransform)('cluster', _cluster.cluster);
(0, _factory.registerTransform)('filter', _filter.filter);
(0, _factory.registerTransform)('join', _join.join);
(0, _factory.registerTransform)('map', _map.map);
(0, _factory.registerTransform)('grid', _grid.aggregatorToGrid);
(0, _factory.registerTransform)('hexagon', _hexagon.pointToHexbin);
var DEFAULT_DATA = _json.defaultData;
exports.DEFAULT_DATA = DEFAULT_DATA;
var DEFAULT_PARSER = _json.defaultParser;
exports.DEFAULT_PARSER = DEFAULT_PARSER;
var _default = _source.default;
exports.default = _default;
//# sourceMappingURL=index.js.map